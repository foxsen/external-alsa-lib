!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACCESS	pcm/pcm.c	1472;"	d	file:
ALISP_FLOAT	alisp/alisp_local.h	/^	ALISP_FLOAT,$/;"	e	enum:alisp_tokens
ALISP_FLOATE	alisp/alisp_local.h	/^	ALISP_FLOATE,$/;"	e	enum:alisp_tokens
ALISP_FREE_OBJ_POOL	alisp/alisp_local.h	122;"	d
ALISP_IDENTIFIER	alisp/alisp_local.h	/^	ALISP_IDENTIFIER,$/;"	e	enum:alisp_tokens
ALISP_INTEGER	alisp/alisp_local.h	/^	ALISP_INTEGER,$/;"	e	enum:alisp_tokens
ALISP_LEX_BUF_MAX	alisp/alisp_local.h	118;"	d
ALISP_MAX_REFS	alisp/alisp_local.h	52;"	d
ALISP_MAX_REFS_LIMIT	alisp/alisp_local.h	53;"	d
ALISP_OBJ_CONS	alisp/alisp_local.h	/^	ALISP_OBJ_CONS,$/;"	e	enum:alisp_objects
ALISP_OBJ_FLOAT	alisp/alisp_local.h	/^	ALISP_OBJ_FLOAT,$/;"	e	enum:alisp_objects
ALISP_OBJ_IDENTIFIER	alisp/alisp_local.h	/^	ALISP_OBJ_IDENTIFIER,$/;"	e	enum:alisp_objects
ALISP_OBJ_INTEGER	alisp/alisp_local.h	/^	ALISP_OBJ_INTEGER,$/;"	e	enum:alisp_objects
ALISP_OBJ_LAST_SEARCH	alisp/alisp_local.h	/^	ALISP_OBJ_LAST_SEARCH = ALISP_OBJ_CONS,$/;"	e	enum:alisp_objects
ALISP_OBJ_NIL	alisp/alisp_local.h	/^	ALISP_OBJ_NIL,$/;"	e	enum:alisp_objects
ALISP_OBJ_PAIR_HASH_MASK	alisp/alisp_local.h	121;"	d
ALISP_OBJ_PAIR_HASH_SHIFT	alisp/alisp_local.h	119;"	d
ALISP_OBJ_PAIR_HASH_SIZE	alisp/alisp_local.h	120;"	d
ALISP_OBJ_POINTER	alisp/alisp_local.h	/^	ALISP_OBJ_POINTER,$/;"	e	enum:alisp_objects
ALISP_OBJ_STRING	alisp/alisp_local.h	/^	ALISP_OBJ_STRING,$/;"	e	enum:alisp_objects
ALISP_OBJ_T	alisp/alisp_local.h	/^	ALISP_OBJ_T,$/;"	e	enum:alisp_objects
ALISP_REFS_MASK	alisp/alisp_local.h	50;"	d
ALISP_REFS_SHIFT	alisp/alisp_local.h	51;"	d
ALISP_STRING	alisp/alisp_local.h	/^	ALISP_STRING$/;"	e	enum:alisp_tokens
ALISP_TYPE_MASK	alisp/alisp_local.h	48;"	d
ALISP_TYPE_SHIFT	alisp/alisp_local.h	49;"	d
ALSA_CONFIG_PATH_DEFAULT	conf.c	3162;"	d	file:
ALSA_CONFIG_PATH_VAR	conf.c	3159;"	d	file:
ARCH_ADD	pcm/pcm_dmix_generic.c	44;"	d	file:
ARCH_CMPXCHG	pcm/pcm_dmix_generic.c	45;"	d	file:
BAR_WIDTH	pcm/scopes/level.c	25;"	d	file:
BUF_SIZE	control/namehint.c	208;"	d	file:
BUGGY_GCC	pcm/pcm_lfloat.c	41;"	d	file:
BUILD_PCM_NONLINEAR	pcm/pcm_plug.c	175;"	d	file:
BWIDTH_KEY	pcm/pcm_file.c	47;"	d	file:
CHANNELS_KEY	pcm/pcm_file.c	46;"	d	file:
CHECK_BASIC	mixer/simple.c	83;"	d	file:
CHECK_DIR	mixer/simple.c	89;"	d	file:
CHECK_DIR_CHN	mixer/simple.c	96;"	d	file:
CHECK_ENUM	mixer/simple.c	105;"	d	file:
COND_CAPS	mixer/simple.c	109;"	d	file:
CONV24_END	pcm/pcm_linear.c	222;"	d	file:
CONV24_END	pcm/pcm_linear.c	224;"	d	file:
CONV24_END	pcm/pcm_route.c	216;"	d	file:
CONV24_END	pcm/pcm_route.c	218;"	d	file:
CONV24_LABELS	pcm/pcm_linear.c	201;"	d	file:
CONV24_LABELS	pcm/pcm_linear.c	203;"	d	file:
CONV24_LABELS	pcm/pcm_route.c	182;"	d	file:
CONV24_LABELS	pcm/pcm_route.c	184;"	d	file:
CONVERT_AREA	pcm/pcm_softvol.c	180;"	d	file:
CONVERT_AREA_S24_3LE	pcm/pcm_softvol.c	213;"	d	file:
CONV_END	pcm/pcm_linear.c	186;"	d	file:
CONV_END	pcm/pcm_linear.c	188;"	d	file:
CONV_END	pcm/pcm_route.c	164;"	d	file:
CONV_END	pcm/pcm_route.c	166;"	d	file:
CONV_LABELS	pcm/pcm_linear.c	167;"	d	file:
CONV_LABELS	pcm/pcm_linear.c	169;"	d	file:
CONV_LABELS	pcm/pcm_route.c	132;"	d	file:
CONV_LABELS	pcm/pcm_route.c	134;"	d	file:
COPY_SLAVE	pcm/pcm_direct.c	1174;"	d	file:
COPY_SLAVE	pcm/pcm_direct.c	1210;"	d	file:
COPY_SLAVE	pcm/pcm_direct.c	809;"	d	file:
COPY_SLAVE	pcm/pcm_direct.c	844;"	d	file:
CTL_CAPTURE_ENUM	mixer/simple_none.c	/^	CTL_CAPTURE_ENUM,$/;"	e	enum:_selem_ctl_type	file:
CTL_CAPTURE_ROUTE	mixer/simple_none.c	/^	CTL_CAPTURE_ROUTE,$/;"	e	enum:_selem_ctl_type	file:
CTL_CAPTURE_SOURCE	mixer/simple_none.c	/^	CTL_CAPTURE_SOURCE,$/;"	e	enum:_selem_ctl_type	file:
CTL_CAPTURE_SWITCH	mixer/simple_none.c	/^	CTL_CAPTURE_SWITCH,$/;"	e	enum:_selem_ctl_type	file:
CTL_CAPTURE_VOLUME	mixer/simple_none.c	/^	CTL_CAPTURE_VOLUME,$/;"	e	enum:_selem_ctl_type	file:
CTL_GLOBAL_ENUM	mixer/simple_none.c	/^	CTL_GLOBAL_ENUM,$/;"	e	enum:_selem_ctl_type	file:
CTL_GLOBAL_ROUTE	mixer/simple_none.c	/^	CTL_GLOBAL_ROUTE,$/;"	e	enum:_selem_ctl_type	file:
CTL_GLOBAL_SWITCH	mixer/simple_none.c	/^	CTL_GLOBAL_SWITCH,$/;"	e	enum:_selem_ctl_type	file:
CTL_GLOBAL_VOLUME	mixer/simple_none.c	/^	CTL_GLOBAL_VOLUME,$/;"	e	enum:_selem_ctl_type	file:
CTL_LAST	mixer/simple_none.c	/^	CTL_LAST = CTL_CAPTURE_SOURCE,$/;"	e	enum:_selem_ctl_type	file:
CTL_PLAYBACK_ENUM	mixer/simple_none.c	/^	CTL_PLAYBACK_ENUM,$/;"	e	enum:_selem_ctl_type	file:
CTL_PLAYBACK_ROUTE	mixer/simple_none.c	/^	CTL_PLAYBACK_ROUTE,$/;"	e	enum:_selem_ctl_type	file:
CTL_PLAYBACK_SWITCH	mixer/simple_none.c	/^	CTL_PLAYBACK_SWITCH,$/;"	e	enum:_selem_ctl_type	file:
CTL_PLAYBACK_VOLUME	mixer/simple_none.c	/^	CTL_PLAYBACK_VOLUME,$/;"	e	enum:_selem_ctl_type	file:
CTL_SINGLE	mixer/simple_none.c	/^	CTL_SINGLE,$/;"	e	enum:_selem_ctl_type	file:
Copyright	pcm/ladspa.h	/^  const char * Copyright;$/;"	m	struct:_LADSPA_Descriptor
DECAY_MS	pcm/scopes/level.c	27;"	d	file:
DEFAULT_TMPBUF_SIZE	seq/seq_local.h	33;"	d
DIRECT_IPC_SEMS	pcm/pcm_direct.h	24;"	d
DIRECT_IPC_SEM_CLIENT	pcm/pcm_direct.h	25;"	d
EVENT	control/control.c	946;"	d	file:
FAST_PCM_STATE	pcm/pcm_hw.c	114;"	d	file:
FAST_PCM_TSTAMP	pcm/pcm_hw.c	116;"	d	file:
FA_card_info	alisp/alisp_snd.c	/^static struct alisp_object * FA_card_info(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_hctl_elem_info	alisp/alisp_snd.c	/^static struct alisp_object * FA_hctl_elem_info(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_hctl_elem_read	alisp/alisp_snd.c	/^static struct alisp_object * FA_hctl_elem_read(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_hctl_elem_write	alisp/alisp_snd.c	/^static struct alisp_object * FA_hctl_elem_write(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_hctl_find_elem	alisp/alisp_snd.c	/^static struct alisp_object * FA_hctl_find_elem(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_int_int_strp	alisp/alisp_snd.c	/^static struct alisp_object * FA_int_int_strp(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_int_intp	alisp/alisp_snd.c	/^static struct alisp_object * FA_int_intp(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_int_p	alisp/alisp_snd.c	/^static struct alisp_object * FA_int_p(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_int_pp_p	alisp/alisp_snd.c	/^static struct alisp_object * FA_int_pp_p(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_int_pp_strp_int	alisp/alisp_snd.c	/^static struct alisp_object * FA_int_pp_strp_int(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_int_str	alisp/alisp_snd.c	/^static struct alisp_object * FA_int_str(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_p_p	alisp/alisp_snd.c	/^static struct alisp_object * FA_p_p(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_pcm_info	alisp/alisp_snd.c	/^static struct alisp_object * FA_pcm_info(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_str_p	alisp/alisp_snd.c	/^static struct alisp_object * FA_str_p(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FIXED_EV	seq/seq_event.c	11;"	d	file:
FLOAT	pcm/pcm_route.c	/^	enum {UINT32=0, UINT64=1, FLOAT=2} sum_idx;$/;"	e	enum:__anon18::__anon19	file:
FORMAT	pcm/pcm.c	1476;"	d	file:
FORMATD	pcm/pcm.c	1479;"	d	file:
FORMAT_KEY	pcm/pcm_file.c	48;"	d	file:
FREQUENCY	pcm/pcm_meter.c	44;"	d	file:
F_SETSIG	control/control_hw.c	38;"	d	file:
F_SETSIG	pcm/pcm_hw.c	54;"	d	file:
F_acall	alisp/alisp_snd.c	/^static struct alisp_object * F_acall(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_add	alisp/alisp.c	/^static struct alisp_object * F_add(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_aerror	alisp/alisp_snd.c	/^static struct alisp_object * F_aerror(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_ahandle	alisp/alisp_snd.c	/^static struct alisp_object * F_ahandle(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_and	alisp/alisp.c	/^static struct alisp_object * F_and(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_assoc	alisp/alisp.c	/^struct alisp_object * F_assoc(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_assq	alisp/alisp.c	/^struct alisp_object * F_assq(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_atom	alisp/alisp.c	/^static struct alisp_object * F_atom(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_car	alisp/alisp.c	/^static struct alisp_object * F_car(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_cdr	alisp/alisp.c	/^static struct alisp_object * F_cdr(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_check_memory	alisp/alisp.c	/^static struct alisp_object * F_check_memory(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_compare_strings	alisp/alisp.c	/^struct alisp_object * F_compare_strings(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_concat	alisp/alisp.c	/^static struct alisp_object * F_concat(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_cond	alisp/alisp.c	/^static struct alisp_object * F_cond(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_cons	alisp/alisp.c	/^static struct alisp_object * F_cons(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_defun	alisp/alisp.c	/^static struct alisp_object * F_defun(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_div	alisp/alisp.c	/^static struct alisp_object * F_div(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_dump_memory	alisp/alisp.c	/^static struct alisp_object * F_dump_memory(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_dump_objects	alisp/alisp.c	/^static struct alisp_object * F_dump_objects(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_eq	alisp/alisp.c	/^static struct alisp_object * F_eq(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_equal	alisp/alisp.c	/^static struct alisp_object * F_equal(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_eval	alisp/alisp.c	/^static struct alisp_object * F_eval(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_exfun	alisp/alisp.c	/^static struct alisp_object * F_exfun(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_format	alisp/alisp.c	/^struct alisp_object * F_format(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_funcall	alisp/alisp.c	/^static struct alisp_object * F_funcall(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_gc	alisp/alisp.c	/^struct alisp_object * F_gc(struct alisp_instance *instance ATTRIBUTE_UNUSED, struct alisp_object * args ATTRIBUTE_UNUSED)$/;"	f
F_ge	alisp/alisp.c	/^static struct alisp_object * F_ge(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_gt	alisp/alisp.c	/^static struct alisp_object * F_gt(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_if	alisp/alisp.c	/^static struct alisp_object * F_if(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_include	alisp/alisp.c	/^struct alisp_object * F_include(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_le	alisp/alisp.c	/^static struct alisp_object * F_le(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_list	alisp/alisp.c	/^static struct alisp_object * F_list(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_lt	alisp/alisp.c	/^static struct alisp_object * F_lt(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_mod	alisp/alisp.c	/^static struct alisp_object * F_mod(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_mul	alisp/alisp.c	/^static struct alisp_object * F_mul(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_not	alisp/alisp.c	/^static struct alisp_object * F_not(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_nth	alisp/alisp.c	/^struct alisp_object * F_nth(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_numeq	alisp/alisp.c	/^static struct alisp_object * F_numeq(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_numneq	alisp/alisp.c	/^static struct alisp_object * F_numneq(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_or	alisp/alisp.c	/^static struct alisp_object * F_or(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_path	alisp/alisp.c	/^struct alisp_object * F_path(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_princ	alisp/alisp.c	/^static struct alisp_object * F_princ(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_prog1	alisp/alisp.c	/^static struct alisp_object * F_prog1(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_prog2	alisp/alisp.c	/^static struct alisp_object * F_prog2(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_progn	alisp/alisp.c	/^static struct alisp_object * F_progn(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_quote	alisp/alisp.c	/^static struct alisp_object * F_quote(struct alisp_instance *instance ATTRIBUTE_UNUSED, struct alisp_object * args)$/;"	f	file:
F_rassoc	alisp/alisp.c	/^struct alisp_object * F_rassoc(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_rassq	alisp/alisp.c	/^struct alisp_object * F_rassq(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_set	alisp/alisp.c	/^static struct alisp_object * F_set(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_setq	alisp/alisp.c	/^static struct alisp_object * F_setq(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_snderr	alisp/alisp_snd.c	/^static struct alisp_object * F_snderr(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_stat_memory	alisp/alisp.c	/^static struct alisp_object * F_stat_memory(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_string_to_float	alisp/alisp.c	/^struct alisp_object * F_string_to_float(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_string_to_integer	alisp/alisp.c	/^struct alisp_object * F_string_to_integer(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_sub	alisp/alisp.c	/^static struct alisp_object * F_sub(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_syserr	alisp/alisp_snd.c	/^static struct alisp_object * F_syserr(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_unless	alisp/alisp.c	/^static struct alisp_object * F_unless(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_unset	alisp/alisp.c	/^static struct alisp_object * F_unset(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_unsetq	alisp/alisp.c	/^static struct alisp_object * F_unsetq(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_when	alisp/alisp.c	/^static struct alisp_object * F_when(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_while	alisp/alisp.c	/^static struct alisp_object * F_while(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
GET16_END	pcm/pcm_adpcm.c	302;"	d	file:
GET16_END	pcm/pcm_adpcm.c	304;"	d	file:
GET16_END	pcm/pcm_alaw.c	208;"	d	file:
GET16_END	pcm/pcm_alaw.c	210;"	d	file:
GET16_END	pcm/pcm_mulaw.c	225;"	d	file:
GET16_END	pcm/pcm_mulaw.c	227;"	d	file:
GET16_END	pcm/pcm_rate.c	457;"	d	file:
GET16_END	pcm/pcm_rate.c	459;"	d	file:
GET16_END	pcm/pcm_rate_linear.c	111;"	d	file:
GET16_END	pcm/pcm_rate_linear.c	113;"	d	file:
GET16_END	pcm/pcm_rate_linear.c	229;"	d	file:
GET16_END	pcm/pcm_rate_linear.c	231;"	d	file:
GET16_LABELS	pcm/pcm_adpcm.c	277;"	d	file:
GET16_LABELS	pcm/pcm_adpcm.c	279;"	d	file:
GET16_LABELS	pcm/pcm_alaw.c	188;"	d	file:
GET16_LABELS	pcm/pcm_alaw.c	190;"	d	file:
GET16_LABELS	pcm/pcm_mulaw.c	205;"	d	file:
GET16_LABELS	pcm/pcm_mulaw.c	207;"	d	file:
GET16_LABELS	pcm/pcm_rate.c	436;"	d	file:
GET16_LABELS	pcm/pcm_rate.c	438;"	d	file:
GET16_LABELS	pcm/pcm_rate_linear.c	196;"	d	file:
GET16_LABELS	pcm/pcm_rate_linear.c	199;"	d	file:
GET16_LABELS	pcm/pcm_rate_linear.c	74;"	d	file:
GET16_LABELS	pcm/pcm_rate_linear.c	77;"	d	file:
GET32F_END	pcm/pcm_lfloat.c	171;"	d	file:
GET32F_END	pcm/pcm_lfloat.c	173;"	d	file:
GET32F_LABELS	pcm/pcm_lfloat.c	147;"	d	file:
GET32F_LABELS	pcm/pcm_lfloat.c	149;"	d	file:
GET32_END	pcm/pcm_iec958.c	210;"	d	file:
GET32_END	pcm/pcm_iec958.c	212;"	d	file:
GET32_END	pcm/pcm_lfloat.c	126;"	d	file:
GET32_END	pcm/pcm_lfloat.c	128;"	d	file:
GET32_END	pcm/plugin_ops.h	490;"	d
GET32_END	pcm/plugin_ops.h	601;"	d
GET32_LABELS	pcm/pcm_iec958.c	188;"	d	file:
GET32_LABELS	pcm/pcm_iec958.c	190;"	d	file:
GET32_LABELS	pcm/pcm_lfloat.c	101;"	d	file:
GET32_LABELS	pcm/pcm_lfloat.c	105;"	d	file:
GET32_LABELS	pcm/plugin_ops.h	450;"	d
GET32_LABELS	pcm/plugin_ops.h	565;"	d
GETS_END	pcm/pcm_route.c	354;"	d	file:
GETS_END	pcm/pcm_route.c	356;"	d	file:
GETS_LABELS	pcm/pcm_route.c	234;"	d	file:
GETS_LABELS	pcm/pcm_route.c	237;"	d	file:
GET_VOL_SCALE	pcm/pcm_softvol.c	255;"	d	file:
GET_VOL_SCALE	pcm/pcm_softvol.c	326;"	d	file:
GET_VOL_SCALE	pcm/pcm_softvol.c	327;"	d	file:
HW_PARAM	pcm/pcm.c	1474;"	d	file:
HW_PARAM	pcm/pcm_params.c	1248;"	d	file:
HintDescriptor	pcm/ladspa.h	/^  LADSPA_PortRangeHintDescriptor HintDescriptor;$/;"	m	struct:_LADSPA_PortRangeHint
IFACE	control/control.c	944;"	d	file:
IFACE	control/namehint.c	394;"	d	file:
IFACE1	control/control.c	945;"	d	file:
INTERVAL_INLINE	pcm/interval_inline.h	22;"	d
IS_CONCURRENT	pcm/pcm_dmix_generic.c	47;"	d	file:
ImplementationData	pcm/ladspa.h	/^  void * ImplementationData;$/;"	m	struct:_LADSPA_Descriptor
IndexAdjust	pcm/pcm_adpcm.c	/^static const char IndexAdjust[8] = { -1, -1, -1, -1, 2, 4, 6, 8 };$/;"	v	file:
LADSPA_Data	pcm/ladspa.h	/^typedef float LADSPA_Data;$/;"	t
LADSPA_Descriptor	pcm/ladspa.h	/^} LADSPA_Descriptor;$/;"	t	typeref:struct:_LADSPA_Descriptor
LADSPA_Descriptor_Function	pcm/ladspa.h	/^(*LADSPA_Descriptor_Function)(unsigned long Index);$/;"	t
LADSPA_HINT_BOUNDED_ABOVE	pcm/ladspa.h	216;"	d
LADSPA_HINT_BOUNDED_BELOW	pcm/ladspa.h	208;"	d
LADSPA_HINT_DEFAULT_0	pcm/ladspa.h	295;"	d
LADSPA_HINT_DEFAULT_1	pcm/ladspa.h	300;"	d
LADSPA_HINT_DEFAULT_100	pcm/ladspa.h	303;"	d
LADSPA_HINT_DEFAULT_440	pcm/ladspa.h	308;"	d
LADSPA_HINT_DEFAULT_HIGH	pcm/ladspa.h	286;"	d
LADSPA_HINT_DEFAULT_LOW	pcm/ladspa.h	272;"	d
LADSPA_HINT_DEFAULT_MASK	pcm/ladspa.h	258;"	d
LADSPA_HINT_DEFAULT_MAXIMUM	pcm/ladspa.h	290;"	d
LADSPA_HINT_DEFAULT_MIDDLE	pcm/ladspa.h	279;"	d
LADSPA_HINT_DEFAULT_MINIMUM	pcm/ladspa.h	265;"	d
LADSPA_HINT_DEFAULT_NONE	pcm/ladspa.h	261;"	d
LADSPA_HINT_INTEGER	pcm/ladspa.h	245;"	d
LADSPA_HINT_LOGARITHMIC	pcm/ladspa.h	237;"	d
LADSPA_HINT_SAMPLE_RATE	pcm/ladspa.h	232;"	d
LADSPA_HINT_TOGGLED	pcm/ladspa.h	224;"	d
LADSPA_Handle	pcm/ladspa.h	/^typedef void * LADSPA_Handle;$/;"	t
LADSPA_INCLUDED	pcm/ladspa.h	23;"	d
LADSPA_IS_HARD_RT_CAPABLE	pcm/ladspa.h	136;"	d
LADSPA_IS_HINT_BOUNDED_ABOVE	pcm/ladspa.h	311;"	d
LADSPA_IS_HINT_BOUNDED_BELOW	pcm/ladspa.h	310;"	d
LADSPA_IS_HINT_DEFAULT_0	pcm/ladspa.h	328;"	d
LADSPA_IS_HINT_DEFAULT_1	pcm/ladspa.h	330;"	d
LADSPA_IS_HINT_DEFAULT_100	pcm/ladspa.h	332;"	d
LADSPA_IS_HINT_DEFAULT_440	pcm/ladspa.h	334;"	d
LADSPA_IS_HINT_DEFAULT_HIGH	pcm/ladspa.h	324;"	d
LADSPA_IS_HINT_DEFAULT_LOW	pcm/ladspa.h	320;"	d
LADSPA_IS_HINT_DEFAULT_MAXIMUM	pcm/ladspa.h	326;"	d
LADSPA_IS_HINT_DEFAULT_MIDDLE	pcm/ladspa.h	322;"	d
LADSPA_IS_HINT_DEFAULT_MINIMUM	pcm/ladspa.h	318;"	d
LADSPA_IS_HINT_HAS_DEFAULT	pcm/ladspa.h	317;"	d
LADSPA_IS_HINT_INTEGER	pcm/ladspa.h	315;"	d
LADSPA_IS_HINT_LOGARITHMIC	pcm/ladspa.h	314;"	d
LADSPA_IS_HINT_SAMPLE_RATE	pcm/ladspa.h	313;"	d
LADSPA_IS_HINT_TOGGLED	pcm/ladspa.h	312;"	d
LADSPA_IS_INPLACE_BROKEN	pcm/ladspa.h	135;"	d
LADSPA_IS_PORT_AUDIO	pcm/ladspa.h	171;"	d
LADSPA_IS_PORT_CONTROL	pcm/ladspa.h	170;"	d
LADSPA_IS_PORT_INPUT	pcm/ladspa.h	168;"	d
LADSPA_IS_PORT_OUTPUT	pcm/ladspa.h	169;"	d
LADSPA_IS_REALTIME	pcm/ladspa.h	134;"	d
LADSPA_PORT_AUDIO	pcm/ladspa.h	166;"	d
LADSPA_PORT_CONTROL	pcm/ladspa.h	162;"	d
LADSPA_PORT_INPUT	pcm/ladspa.h	155;"	d
LADSPA_PORT_OUTPUT	pcm/ladspa.h	158;"	d
LADSPA_PROPERTY_HARD_RT_CAPABLE	pcm/ladspa.h	132;"	d
LADSPA_PROPERTY_INPLACE_BROKEN	pcm/ladspa.h	106;"	d
LADSPA_PROPERTY_REALTIME	pcm/ladspa.h	99;"	d
LADSPA_PortDescriptor	pcm/ladspa.h	/^typedef int LADSPA_PortDescriptor;$/;"	t
LADSPA_PortRangeHint	pcm/ladspa.h	/^} LADSPA_PortRangeHint;$/;"	t	typeref:struct:_LADSPA_PortRangeHint
LADSPA_PortRangeHintDescriptor	pcm/ladspa.h	/^typedef int LADSPA_PortRangeHintDescriptor;$/;"	t
LADSPA_Properties	pcm/ladspa.h	/^typedef int LADSPA_Properties;$/;"	t
LADSPA_VERSION	pcm/ladspa.h	25;"	d
LADSPA_VERSION_MAJOR	pcm/ladspa.h	26;"	d
LADSPA_VERSION_MINOR	pcm/ladspa.h	27;"	d
LEADING_KEY	pcm/pcm_file.c	44;"	d	file:
LINEAR_DIV	pcm/pcm_rate_linear.c	34;"	d	file:
LINEAR_DIV_SHIFT	pcm/pcm_rate_linear.c	33;"	d	file:
LOCAL_ERROR	conf.c	454;"	d	file:
LOCAL_STR_BUFSIZE	conf.c	681;"	d	file:
LOCAL_UNEXPECTED_CHAR	conf.c	458;"	d	file:
LOCAL_UNEXPECTED_EOF	conf.c	459;"	d	file:
LOCAL_UNTERMINATED_QUOTE	conf.c	457;"	d	file:
LOCAL_UNTERMINATED_STRING	conf.c	456;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_i386.c	10;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_i386.c	19;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_i386.c	28;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_i386.c	37;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_i386.c	46;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_i386.c	55;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_i386.c	64;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_i386.c	73;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_x86_64.c	15;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_x86_64.c	22;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_x86_64.c	29;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_x86_64.c	36;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_x86_64.c	43;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_x86_64.c	50;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_x86_64.c	57;"	d	file:
LOCK_PREFIX	pcm/pcm_dmix_x86_64.c	8;"	d	file:
Label	pcm/ladspa.h	/^  const char * Label;$/;"	m	struct:_LADSPA_Descriptor
LowerBound	pcm/ladspa.h	/^  LADSPA_Data LowerBound;$/;"	m	struct:_LADSPA_PortRangeHint
MASK_BIT	pcm/mask_inline.h	30;"	d
MASK_INLINE	pcm/mask_inline.h	24;"	d
MASK_MAX	pcm/mask_inline.h	26;"	d
MASK_OFS	pcm/mask_inline.h	29;"	d
MASK_SIZE	pcm/mask_inline.h	27;"	d
MAX_DB_UPPER_LIMIT	pcm/pcm_softvol.c	62;"	d	file:
MAX_TLV_RANGE_SIZE	control/tlv.c	42;"	d	file:
MIXER_COMPARE_WEIGHT_NEXT_BASE	mixer/simple_none.c	48;"	d	file:
MIXER_COMPARE_WEIGHT_NOT_FOUND	mixer/simple_none.c	49;"	d	file:
MIXER_COMPARE_WEIGHT_SIMPLE_BASE	mixer/simple_none.c	47;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_i386.c	14;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_i386.c	23;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_i386.c	32;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_i386.c	41;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_i386.c	50;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_i386.c	59;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_i386.c	5;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_i386.c	68;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_i386.h	/^static void MIX_AREAS_16(unsigned int size,$/;"	f
MIX_AREAS_16	pcm/pcm_dmix_x86_64.c	12;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_x86_64.c	19;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_x86_64.c	26;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_x86_64.c	33;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_x86_64.c	40;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_x86_64.c	47;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_x86_64.c	54;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_x86_64.c	5;"	d	file:
MIX_AREAS_16	pcm/pcm_dmix_x86_64.h	/^static void MIX_AREAS_16(unsigned int size,$/;"	f
MIX_AREAS_16_MMX	pcm/pcm_dmix_i386.c	15;"	d	file:
MIX_AREAS_16_MMX	pcm/pcm_dmix_i386.c	24;"	d	file:
MIX_AREAS_16_MMX	pcm/pcm_dmix_i386.c	33;"	d	file:
MIX_AREAS_16_MMX	pcm/pcm_dmix_i386.c	42;"	d	file:
MIX_AREAS_16_MMX	pcm/pcm_dmix_i386.c	51;"	d	file:
MIX_AREAS_16_MMX	pcm/pcm_dmix_i386.c	60;"	d	file:
MIX_AREAS_16_MMX	pcm/pcm_dmix_i386.c	69;"	d	file:
MIX_AREAS_16_MMX	pcm/pcm_dmix_i386.c	6;"	d	file:
MIX_AREAS_16_MMX	pcm/pcm_dmix_i386.h	/^static void MIX_AREAS_16_MMX(unsigned int size,$/;"	f
MIX_AREAS_24	pcm/pcm_dmix_i386.c	17;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_i386.c	26;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_i386.c	35;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_i386.c	44;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_i386.c	53;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_i386.c	62;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_i386.c	71;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_i386.c	8;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_i386.h	/^static void MIX_AREAS_24(unsigned int size,$/;"	f
MIX_AREAS_24	pcm/pcm_dmix_x86_64.c	14;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_x86_64.c	21;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_x86_64.c	28;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_x86_64.c	35;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_x86_64.c	42;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_x86_64.c	49;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_x86_64.c	56;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_x86_64.c	7;"	d	file:
MIX_AREAS_24	pcm/pcm_dmix_x86_64.h	/^static void MIX_AREAS_24(unsigned int size,$/;"	f
MIX_AREAS_24_CMOV	pcm/pcm_dmix_i386.c	18;"	d	file:
MIX_AREAS_24_CMOV	pcm/pcm_dmix_i386.c	27;"	d	file:
MIX_AREAS_24_CMOV	pcm/pcm_dmix_i386.c	36;"	d	file:
MIX_AREAS_24_CMOV	pcm/pcm_dmix_i386.c	45;"	d	file:
MIX_AREAS_24_CMOV	pcm/pcm_dmix_i386.c	54;"	d	file:
MIX_AREAS_24_CMOV	pcm/pcm_dmix_i386.c	63;"	d	file:
MIX_AREAS_24_CMOV	pcm/pcm_dmix_i386.c	72;"	d	file:
MIX_AREAS_24_CMOV	pcm/pcm_dmix_i386.c	9;"	d	file:
MIX_AREAS_24_CMOV	pcm/pcm_dmix_i386.h	/^static void MIX_AREAS_24_CMOV(unsigned int size,$/;"	f
MIX_AREAS_32	pcm/pcm_dmix_i386.c	16;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_i386.c	25;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_i386.c	34;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_i386.c	43;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_i386.c	52;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_i386.c	61;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_i386.c	70;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_i386.c	7;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_i386.h	/^static void MIX_AREAS_32(unsigned int size,$/;"	f
MIX_AREAS_32	pcm/pcm_dmix_x86_64.c	13;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_x86_64.c	20;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_x86_64.c	27;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_x86_64.c	34;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_x86_64.c	41;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_x86_64.c	48;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_x86_64.c	55;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_x86_64.c	6;"	d	file:
MIX_AREAS_32	pcm/pcm_dmix_x86_64.h	/^static void MIX_AREAS_32(unsigned int size,$/;"	f
MULTI_DIV_24	pcm/pcm_softvol.c	/^static inline int MULTI_DIV_24(int a, unsigned int b)$/;"	f	file:
MULTI_DIV_32x16	pcm/pcm_softvol.c	/^static inline int MULTI_DIV_32x16(int a, unsigned short b)$/;"	f	file:
MULTI_DIV_int	pcm/pcm_softvol.c	/^static inline int MULTI_DIV_int(int a, unsigned int b, int swap)$/;"	f	file:
MULTI_DIV_short	pcm/pcm_softvol.c	/^static inline short MULTI_DIV_short(short a, unsigned int b, int swap)$/;"	f	file:
Maker	pcm/ladspa.h	/^  const char * Maker;$/;"	m	struct:_LADSPA_Descriptor
NOT_FOUND	control/hcontrol.c	57;"	d	file:
NO_ASSIGN	pcm/pcm_ladspa.c	50;"	d	file:
NO_CONCURRENT_ACCESS	pcm/pcm_dmix_generic.c	46;"	d	file:
Name	pcm/ladspa.h	/^  const char * Name;$/;"	m	struct:_LADSPA_Descriptor
OBSOLETE1	pcm/pcm.c	6976;"	d	file:
OBSOLETE1	pcm/pcm.c	6982;"	d	file:
PCMTYPE	pcm/pcm.c	1465;"	d	file:
PEAK_MS	pcm/scopes/level.c	29;"	d	file:
PLUG_ROUTE_POLICY_AVERAGE	pcm/pcm_plug.c	/^	PLUG_ROUTE_POLICY_AVERAGE,$/;"	e	enum:snd_pcm_plug_route_policy	file:
PLUG_ROUTE_POLICY_COPY	pcm/pcm_plug.c	/^	PLUG_ROUTE_POLICY_COPY,$/;"	e	enum:snd_pcm_plug_route_policy	file:
PLUG_ROUTE_POLICY_DEFAULT	pcm/pcm_plug.c	/^	PLUG_ROUTE_POLICY_DEFAULT,$/;"	e	enum:snd_pcm_plug_route_policy	file:
PLUG_ROUTE_POLICY_DUP	pcm/pcm_plug.c	/^	PLUG_ROUTE_POLICY_DUP,$/;"	e	enum:snd_pcm_plug_route_policy	file:
PLUG_ROUTE_POLICY_NONE	pcm/pcm_plug.c	/^	PLUG_ROUTE_POLICY_NONE,$/;"	e	enum:snd_pcm_plug_route_policy	file:
PREAMBLE_X	pcm/pcm_iec958.c	/^enum { PREAMBLE_Z, PREAMBLE_X, PREAMBLE_Y };$/;"	e	enum:__anon38	file:
PREAMBLE_Y	pcm/pcm_iec958.c	/^enum { PREAMBLE_Z, PREAMBLE_X, PREAMBLE_Y };$/;"	e	enum:__anon38	file:
PREAMBLE_Z	pcm/pcm_iec958.c	/^enum { PREAMBLE_Z, PREAMBLE_X, PREAMBLE_Y };$/;"	e	enum:__anon38	file:
PRESET_MIN_DB	pcm/pcm_softvol.c	60;"	d	file:
PRESET_RESOLUTION	pcm/pcm_softvol.c	59;"	d	file:
PUT16_END	pcm/pcm_adpcm.c	254;"	d	file:
PUT16_END	pcm/pcm_adpcm.c	256;"	d	file:
PUT16_END	pcm/pcm_alaw.c	171;"	d	file:
PUT16_END	pcm/pcm_alaw.c	173;"	d	file:
PUT16_END	pcm/pcm_mulaw.c	188;"	d	file:
PUT16_END	pcm/pcm_mulaw.c	190;"	d	file:
PUT16_END	pcm/pcm_rate.c	496;"	d	file:
PUT16_END	pcm/pcm_rate.c	498;"	d	file:
PUT16_END	pcm/pcm_rate_linear.c	122;"	d	file:
PUT16_END	pcm/pcm_rate_linear.c	124;"	d	file:
PUT16_END	pcm/pcm_rate_linear.c	243;"	d	file:
PUT16_END	pcm/pcm_rate_linear.c	245;"	d	file:
PUT16_LABELS	pcm/pcm_adpcm.c	224;"	d	file:
PUT16_LABELS	pcm/pcm_adpcm.c	226;"	d	file:
PUT16_LABELS	pcm/pcm_alaw.c	151;"	d	file:
PUT16_LABELS	pcm/pcm_alaw.c	153;"	d	file:
PUT16_LABELS	pcm/pcm_mulaw.c	168;"	d	file:
PUT16_LABELS	pcm/pcm_mulaw.c	170;"	d	file:
PUT16_LABELS	pcm/pcm_rate.c	474;"	d	file:
PUT16_LABELS	pcm/pcm_rate.c	476;"	d	file:
PUT16_LABELS	pcm/pcm_rate_linear.c	197;"	d	file:
PUT16_LABELS	pcm/pcm_rate_linear.c	200;"	d	file:
PUT16_LABELS	pcm/pcm_rate_linear.c	75;"	d	file:
PUT16_LABELS	pcm/pcm_rate_linear.c	78;"	d	file:
PUT32F_END	pcm/pcm_lfloat.c	131;"	d	file:
PUT32F_END	pcm/pcm_lfloat.c	133;"	d	file:
PUT32F_LABELS	pcm/pcm_lfloat.c	102;"	d	file:
PUT32F_LABELS	pcm/pcm_lfloat.c	104;"	d	file:
PUT32_END	pcm/pcm_iec958.c	171;"	d	file:
PUT32_END	pcm/pcm_iec958.c	173;"	d	file:
PUT32_END	pcm/pcm_lfloat.c	176;"	d	file:
PUT32_END	pcm/pcm_lfloat.c	178;"	d	file:
PUT32_END	pcm/pcm_route.c	466;"	d	file:
PUT32_END	pcm/pcm_route.c	468;"	d	file:
PUT32_END	pcm/plugin_ops.h	526;"	d
PUT32_END	pcm/plugin_ops.h	602;"	d
PUT32_LABELS	pcm/pcm_iec958.c	151;"	d	file:
PUT32_LABELS	pcm/pcm_iec958.c	153;"	d	file:
PUT32_LABELS	pcm/pcm_lfloat.c	146;"	d	file:
PUT32_LABELS	pcm/pcm_lfloat.c	150;"	d	file:
PUT32_LABELS	pcm/pcm_route.c	235;"	d	file:
PUT32_LABELS	pcm/pcm_route.c	238;"	d	file:
PUT32_LABELS	pcm/plugin_ops.h	451;"	d
PUT32_LABELS	pcm/plugin_ops.h	566;"	d
PortCount	pcm/ladspa.h	/^  unsigned long PortCount;$/;"	m	struct:_LADSPA_Descriptor
PortDescriptors	pcm/ladspa.h	/^  const LADSPA_PortDescriptor * PortDescriptors;$/;"	m	struct:_LADSPA_Descriptor
PortNames	pcm/ladspa.h	/^  const char * const * PortNames;$/;"	m	struct:_LADSPA_Descriptor
PortRangeHints	pcm/ladspa.h	/^  const LADSPA_PortRangeHint * PortRangeHints;$/;"	m	struct:_LADSPA_Descriptor
Properties	pcm/ladspa.h	/^  LADSPA_Properties Properties;$/;"	m	struct:_LADSPA_Descriptor
Pthread_mutex_lock	pcm/pcm_share.c	52;"	d	file:
Pthread_mutex_unlock	pcm/pcm_share.c	64;"	d	file:
RATE_KEY	pcm/pcm_file.c	45;"	d	file:
READY	pcm/pcm.c	1468;"	d	file:
REFINE_DEBUG	pcm/pcm_direct.c	656;"	d	file:
RULES	pcm/pcm_params.c	1927;"	d	file:
SCONF_MANDATORY	pcm/pcm_local.h	842;"	d
SCONF_UNCHANGED	pcm/pcm_local.h	843;"	d
SERVER_JOB_DEBUG	pcm/pcm_direct.c	246;"	d	file:
SILENCE	pcm/pcm.c	1470;"	d	file:
SNDRV_CTL_VERSION_MAX	control/control_hw.c	43;"	d	file:
SNDRV_FILE_ALOADSEQ	seq/seq_hw.c	34;"	d	file:
SNDRV_FILE_CONTROL	control/control_hw.c	42;"	d	file:
SNDRV_FILE_HWDEP	hwdep/hwdep_hw.c	35;"	d	file:
SNDRV_FILE_PCM_STREAM_CAPTURE	pcm/pcm_hw.c	110;"	d	file:
SNDRV_FILE_PCM_STREAM_PLAYBACK	pcm/pcm_hw.c	109;"	d	file:
SNDRV_FILE_RAWMIDI	rawmidi/rawmidi_hw.c	37;"	d	file:
SNDRV_FILE_SEQ	seq/seq_hw.c	33;"	d	file:
SNDRV_FILE_TIMER	timer/timer_hw.c	35;"	d	file:
SNDRV_FILE_TIMER	timer/timer_query_hw.c	35;"	d	file:
SNDRV_HWDEP_VERSION_MAX	hwdep/hwdep_hw.c	36;"	d	file:
SNDRV_PCM_VERSION_MAX	pcm/pcm_hw.c	111;"	d	file:
SNDRV_RAWMIDI_VERSION_MAX	rawmidi/rawmidi_hw.c	38;"	d	file:
SNDRV_SEQ_VERSION_MAX	seq/seq_hw.c	35;"	d	file:
SNDRV_TIMER_IOCTL_CONTINUE_OLD	timer/timer_hw.c	/^	SNDRV_TIMER_IOCTL_CONTINUE_OLD = _IO('T', 0x22),$/;"	e	enum:__anon64	file:
SNDRV_TIMER_IOCTL_PAUSE_OLD	timer/timer_hw.c	/^	SNDRV_TIMER_IOCTL_PAUSE_OLD = _IO('T', 0x23),$/;"	e	enum:__anon64	file:
SNDRV_TIMER_IOCTL_START_OLD	timer/timer_hw.c	/^	SNDRV_TIMER_IOCTL_START_OLD = _IO('T', 0x20),$/;"	e	enum:__anon64	file:
SNDRV_TIMER_IOCTL_STATUS_OLD	timer/timer_hw.c	38;"	d	file:
SNDRV_TIMER_IOCTL_STOP_OLD	timer/timer_hw.c	/^	SNDRV_TIMER_IOCTL_STOP_OLD = _IO('T', 0x21),$/;"	e	enum:__anon64	file:
SNDRV_TIMER_VERSION_MAX	timer/timer_hw.c	36;"	d	file:
SNDRV_TIMER_VERSION_MAX	timer/timer_query_hw.c	36;"	d	file:
SND_CONFIG_SEARCH	conf.c	2688;"	d	file:
SND_CONFIG_SEARCHA	conf.c	2710;"	d	file:
SND_CONFIG_SEARCHV	conf.c	2737;"	d	file:
SND_CONFIG_SEARCHVA	conf.c	2759;"	d	file:
SND_CONFIG_SEARCH_ALIAS	conf.c	2781;"	d	file:
SND_CONFIG_WALK_PASS_LEAF	conf.c	/^	SND_CONFIG_WALK_PASS_LEAF,$/;"	e	enum:_snd_config_walk_pass	file:
SND_CONFIG_WALK_PASS_POST	conf.c	/^	SND_CONFIG_WALK_PASS_POST,$/;"	e	enum:_snd_config_walk_pass	file:
SND_CONFIG_WALK_PASS_PRE	conf.c	/^	SND_CONFIG_WALK_PASS_PRE,$/;"	e	enum:_snd_config_walk_pass	file:
SND_FILE_CONTROL	control/cards.c	38;"	d	file:
SND_FILE_LOAD	control/cards.c	39;"	d	file:
SND_INTERVAL_C	pcm/interval.c	22;"	d	file:
SND_INTERVAL_INLINE	pcm/interval.c	23;"	d	file:
SND_INTERVAL_INLINE	pcm/pcm_local.h	35;"	d
SND_MASK_C	pcm/mask.c	22;"	d	file:
SND_MASK_INLINE	pcm/mask.c	23;"	d	file:
SND_MASK_INLINE	pcm/pcm_local.h	38;"	d
SND_MASK_MAX	pcm/mask.h	24;"	d
SND_PCM_ACCBIT_MMAP	pcm/pcm_local.h	889;"	d
SND_PCM_ACCBIT_MMAPC	pcm/pcm_local.h	894;"	d
SND_PCM_ACCBIT_MMAPI	pcm/pcm_local.h	892;"	d
SND_PCM_ACCBIT_MMAPN	pcm/pcm_local.h	893;"	d
SND_PCM_ACCBIT_SHM	pcm/pcm_local.h	896;"	d
SND_PCM_ACCBIT_SHMI	pcm/pcm_local.h	900;"	d
SND_PCM_ACCBIT_SHMN	pcm/pcm_local.h	902;"	d
SND_PCM_APPEND	pcm/pcm_local.h	848;"	d
SND_PCM_AREA_LOCAL	pcm/pcm_local.h	/^	enum { SND_PCM_AREA_SHM, SND_PCM_AREA_MMAP, SND_PCM_AREA_LOCAL } type;$/;"	e	enum:_snd_pcm_channel_info::__anon46
SND_PCM_AREA_MMAP	pcm/pcm_local.h	/^	enum { SND_PCM_AREA_SHM, SND_PCM_AREA_MMAP, SND_PCM_AREA_LOCAL } type;$/;"	e	enum:_snd_pcm_channel_info::__anon46
SND_PCM_AREA_SHM	pcm/pcm_local.h	/^	enum { SND_PCM_AREA_SHM, SND_PCM_AREA_MMAP, SND_PCM_AREA_LOCAL } type;$/;"	e	enum:_snd_pcm_channel_info::__anon46
SND_PCM_DIRECT_MAGIC	pcm/pcm_direct.c	85;"	d	file:
SND_PCM_FILE_FORMAT_RAW	pcm/pcm_file.c	/^	SND_PCM_FILE_FORMAT_RAW,$/;"	e	enum:_snd_pcm_file_format	file:
SND_PCM_FILE_FORMAT_WAV	pcm/pcm_file.c	/^	SND_PCM_FILE_FORMAT_WAV$/;"	e	enum:_snd_pcm_file_format	file:
SND_PCM_FMTBIT_FLOAT	pcm/pcm_local.h	934;"	d
SND_PCM_FMTBIT_LINEAR	pcm/pcm_local.h	905;"	d
SND_PCM_HW_PARAMS_EXPORT_BUFFER	pcm/pcm_local.h	96;"	d
SND_PCM_HW_PARAMS_NORESAMPLE	pcm/pcm_local.h	95;"	d
SND_PCM_HW_PARAM_ACCESS	pcm/pcm_local.h	42;"	d
SND_PCM_HW_PARAM_BUFFER_BYTES	pcm/pcm_local.h	58;"	d
SND_PCM_HW_PARAM_BUFFER_SIZE	pcm/pcm_local.h	57;"	d
SND_PCM_HW_PARAM_BUFFER_TIME	pcm/pcm_local.h	56;"	d
SND_PCM_HW_PARAM_CHANNELS	pcm/pcm_local.h	50;"	d
SND_PCM_HW_PARAM_FIRST_INTERVAL	pcm/pcm_local.h	48;"	d
SND_PCM_HW_PARAM_FIRST_INTERVAL	pcm/pcm_local.h	64;"	d
SND_PCM_HW_PARAM_FIRST_MASK	pcm/pcm_local.h	43;"	d
SND_PCM_HW_PARAM_FIRST_MASK	pcm/pcm_local.h	62;"	d
SND_PCM_HW_PARAM_FORMAT	pcm/pcm_local.h	44;"	d
SND_PCM_HW_PARAM_FRAME_BITS	pcm/pcm_local.h	49;"	d
SND_PCM_HW_PARAM_LAST_INTERVAL	pcm/pcm_local.h	60;"	d
SND_PCM_HW_PARAM_LAST_INTERVAL	pcm/pcm_local.h	63;"	d
SND_PCM_HW_PARAM_LAST_MASK	pcm/pcm_local.h	46;"	d
SND_PCM_HW_PARAM_LAST_MASK	pcm/pcm_local.h	61;"	d
SND_PCM_HW_PARAM_PERIODS	pcm/pcm_local.h	55;"	d
SND_PCM_HW_PARAM_PERIOD_BYTES	pcm/pcm_local.h	54;"	d
SND_PCM_HW_PARAM_PERIOD_SIZE	pcm/pcm_local.h	53;"	d
SND_PCM_HW_PARAM_PERIOD_TIME	pcm/pcm_local.h	52;"	d
SND_PCM_HW_PARAM_RATE	pcm/pcm_local.h	51;"	d
SND_PCM_HW_PARAM_SAMPLE_BITS	pcm/pcm_local.h	47;"	d
SND_PCM_HW_PARAM_SUBFORMAT	pcm/pcm_local.h	45;"	d
SND_PCM_HW_PARAM_TICK_TIME	pcm/pcm_local.h	59;"	d
SND_PCM_HW_PARBIT_ACCESS	pcm/pcm_local.h	872;"	d
SND_PCM_HW_PARBIT_BUFFER_BYTES	pcm/pcm_local.h	885;"	d
SND_PCM_HW_PARBIT_BUFFER_SIZE	pcm/pcm_local.h	881;"	d
SND_PCM_HW_PARBIT_BUFFER_TIME	pcm/pcm_local.h	880;"	d
SND_PCM_HW_PARBIT_CHANNELS	pcm/pcm_local.h	875;"	d
SND_PCM_HW_PARBIT_FORMAT	pcm/pcm_local.h	873;"	d
SND_PCM_HW_PARBIT_FRAME_BITS	pcm/pcm_local.h	883;"	d
SND_PCM_HW_PARBIT_PERIODS	pcm/pcm_local.h	879;"	d
SND_PCM_HW_PARBIT_PERIOD_BYTES	pcm/pcm_local.h	884;"	d
SND_PCM_HW_PARBIT_PERIOD_SIZE	pcm/pcm_local.h	878;"	d
SND_PCM_HW_PARBIT_PERIOD_TIME	pcm/pcm_local.h	877;"	d
SND_PCM_HW_PARBIT_RATE	pcm/pcm_local.h	876;"	d
SND_PCM_HW_PARBIT_SAMPLE_BITS	pcm/pcm_local.h	882;"	d
SND_PCM_HW_PARBIT_SUBFORMAT	pcm/pcm_local.h	874;"	d
SND_PCM_HW_PARBIT_TICK_TIME	pcm/pcm_local.h	886;"	d
SND_PCM_INFO_BATCH	pcm/pcm_local.h	73;"	d
SND_PCM_INFO_BLOCK_TRANSFER	pcm/pcm_local.h	81;"	d
SND_PCM_INFO_COMPLEX	pcm/pcm_local.h	79;"	d
SND_PCM_INFO_DOUBLE	pcm/pcm_local.h	71;"	d
SND_PCM_INFO_HALF_DUPLEX	pcm/pcm_local.h	89;"	d
SND_PCM_INFO_INTERLEAVED	pcm/pcm_local.h	75;"	d
SND_PCM_INFO_JOINT_DUPLEX	pcm/pcm_local.h	91;"	d
SND_PCM_INFO_MMAP	pcm/pcm_local.h	67;"	d
SND_PCM_INFO_MMAP_VALID	pcm/pcm_local.h	69;"	d
SND_PCM_INFO_MONOTONIC	pcm/pcm_local.h	98;"	d
SND_PCM_INFO_NONINTERLEAVED	pcm/pcm_local.h	77;"	d
SND_PCM_INFO_OVERRANGE	pcm/pcm_local.h	83;"	d
SND_PCM_INFO_PAUSE	pcm/pcm_local.h	87;"	d
SND_PCM_INFO_RESUME	pcm/pcm_local.h	85;"	d
SND_PCM_INFO_SYNC_START	pcm/pcm_local.h	93;"	d
SND_PCM_IOCTL_HW_PARAMS_OLD	pcm/pcm_hw.c	78;"	d	file:
SND_PCM_IOCTL_HW_REFINE_OLD	pcm/pcm_hw.c	77;"	d	file:
SND_PCM_LADSPA_POLICY_DUPLICATE	pcm/pcm_ladspa.c	/^	SND_PCM_LADSPA_POLICY_DUPLICATE		\/* duplicate bindings for all channels *\/$/;"	e	enum:_snd_pcm_ladspa_policy	file:
SND_PCM_LADSPA_POLICY_NONE	pcm/pcm_ladspa.c	/^	SND_PCM_LADSPA_POLICY_NONE,		\/* use bindings only *\/$/;"	e	enum:_snd_pcm_ladspa_policy	file:
SND_PCM_RATE_PLUGIN_VERSION_OLD	pcm/pcm_rate.c	76;"	d	file:
SND_SEQ_IBUF_SIZE	seq/seq_local.h	32;"	d
SND_SEQ_OBUF_SIZE	seq/seq_local.h	31;"	d
SO_PATH	mixer/simple_abst.c	44;"	d	file:
START	pcm/pcm.c	1473;"	d	file:
STATE	pcm/pcm.c	1466;"	d	file:
STATE_RUN_PENDING	pcm/pcm_dmix.c	55;"	d	file:
STATE_RUN_PENDING	pcm/pcm_dshare.c	55;"	d	file:
STREAM	pcm/pcm.c	1467;"	d	file:
ST_INVALID	seq/seq_midi_event.c	50;"	d	file:
ST_SPECIAL	seq/seq_midi_event.c	51;"	d	file:
ST_SYSEX	seq/seq_midi_event.c	52;"	d	file:
SUBFORMAT	pcm/pcm.c	1477;"	d	file:
SUBFORMATD	pcm/pcm.c	1480;"	d	file:
SW_PARAM	pcm/pcm.c	1475;"	d	file:
SX_INLINES	pcm/plugin_ops.h	23;"	d
StepSize	pcm/pcm_adpcm.c	/^static const short StepSize[89] = {$/;"	v	file:
TEMP_TLV_SIZE	control/tlv.c	370;"	d	file:
TO_LE16	pcm/pcm_file.c	95;"	d	file:
TO_LE16	pcm/pcm_file.c	98;"	d	file:
TO_LE32	pcm/pcm_file.c	94;"	d	file:
TO_LE32	pcm/pcm_file.c	97;"	d	file:
TSTAMP	pcm/pcm.c	1471;"	d	file:
TYPE	control/control.c	943;"	d	file:
UINT32	pcm/pcm_route.c	/^	enum {UINT32=0, UINT64=1, FLOAT=2} sum_idx;$/;"	e	enum:__anon18::__anon19	file:
UINT64	pcm/pcm_route.c	/^	enum {UINT32=0, UINT64=1, FLOAT=2} sum_idx;$/;"	e	enum:__anon18::__anon19	file:
UniqueID	pcm/ladspa.h	/^  unsigned long UniqueID;$/;"	m	struct:_LADSPA_Descriptor
UpperBound	pcm/ladspa.h	/^  LADSPA_Data UpperBound;$/;"	m	struct:_LADSPA_PortRangeHint
VALUE_MAXLEN	pcm/pcm_file.c	51;"	d	file:
VOL_SCALE_MASK	pcm/pcm_softvol.c	57;"	d	file:
VOL_SCALE_SHIFT	pcm/pcm_softvol.c	56;"	d	file:
XADD	pcm/pcm_dmix_i386.c	11;"	d	file:
XADD	pcm/pcm_dmix_i386.c	20;"	d	file:
XADD	pcm/pcm_dmix_i386.c	29;"	d	file:
XADD	pcm/pcm_dmix_i386.c	38;"	d	file:
XADD	pcm/pcm_dmix_i386.c	47;"	d	file:
XADD	pcm/pcm_dmix_i386.c	56;"	d	file:
XADD	pcm/pcm_dmix_i386.c	65;"	d	file:
XADD	pcm/pcm_dmix_i386.c	74;"	d	file:
XADD	pcm/pcm_dmix_x86_64.c	16;"	d	file:
XADD	pcm/pcm_dmix_x86_64.c	23;"	d	file:
XADD	pcm/pcm_dmix_x86_64.c	30;"	d	file:
XADD	pcm/pcm_dmix_x86_64.c	37;"	d	file:
XADD	pcm/pcm_dmix_x86_64.c	44;"	d	file:
XADD	pcm/pcm_dmix_x86_64.c	51;"	d	file:
XADD	pcm/pcm_dmix_x86_64.c	58;"	d	file:
XADD	pcm/pcm_dmix_x86_64.c	9;"	d	file:
XRUN	pcm/pcm.c	1469;"	d	file:
XSUB	pcm/pcm_dmix_i386.c	12;"	d	file:
XSUB	pcm/pcm_dmix_i386.c	21;"	d	file:
XSUB	pcm/pcm_dmix_i386.c	30;"	d	file:
XSUB	pcm/pcm_dmix_i386.c	39;"	d	file:
XSUB	pcm/pcm_dmix_i386.c	48;"	d	file:
XSUB	pcm/pcm_dmix_i386.c	57;"	d	file:
XSUB	pcm/pcm_dmix_i386.c	66;"	d	file:
XSUB	pcm/pcm_dmix_i386.c	75;"	d	file:
XSUB	pcm/pcm_dmix_x86_64.c	10;"	d	file:
XSUB	pcm/pcm_dmix_x86_64.c	17;"	d	file:
XSUB	pcm/pcm_dmix_x86_64.c	24;"	d	file:
XSUB	pcm/pcm_dmix_x86_64.c	31;"	d	file:
XSUB	pcm/pcm_dmix_x86_64.c	38;"	d	file:
XSUB	pcm/pcm_dmix_x86_64.c	45;"	d	file:
XSUB	pcm/pcm_dmix_x86_64.c	52;"	d	file:
XSUB	pcm/pcm_dmix_x86_64.c	59;"	d	file:
ZERO_DB	pcm/pcm_softvol.c	61;"	d	file:
_ENTRY	compat/hsearch_r.c	/^_ENTRY;$/;"	t	typeref:struct:_ENTRY	file:
_ENTRY	compat/hsearch_r.c	/^typedef struct _ENTRY$/;"	s	file:
_GNU_SOURCE	dlmisc.c	30;"	d	file:
_LADSPA_Descriptor	pcm/ladspa.h	/^typedef struct _LADSPA_Descriptor { $/;"	s
_LADSPA_PortRangeHint	pcm/ladspa.h	/^typedef struct _LADSPA_PortRangeHint {$/;"	s
__NEW_TO_OLD_MASK	pcm/pcm_hw.c	1510;"	d	file:
__OLD_GET	pcm/pcm.c	7005;"	d	file:
__OLD_GET1	pcm/pcm.c	7006;"	d	file:
__OLD_GET_SW	pcm/pcm.c	7120;"	d	file:
__OLD_NEAR	pcm/pcm.c	7054;"	d	file:
__OLD_NEAR1	pcm/pcm.c	7055;"	d	file:
__OLD_SET_FL	pcm/pcm.c	7084;"	d	file:
__OLD_SET_FL1	pcm/pcm.c	7085;"	d	file:
__OLD_TO_NEW_MASK	pcm/pcm_hw.c	1509;"	d	file:
__P_OLD_GET	pcm/pcm.c	6987;"	d	file:
__P_OLD_GET1	pcm/pcm.c	6996;"	d	file:
__P_OLD_GET_SW	pcm/pcm.c	7111;"	d	file:
__P_OLD_NEAR	pcm/pcm.c	7038;"	d	file:
__P_OLD_NEAR1	pcm/pcm.c	7046;"	d	file:
__P_OLD_SET_FL	pcm/pcm.c	7066;"	d	file:
__P_OLD_SET_FL1	pcm/pcm.c	7075;"	d	file:
__SEQ_LOCAL_H	seq/seq_local.h	24;"	d
__USE_GNU	compat/hsearch_r.c	24;"	d	file:
__buf	pcm/pcm_direct.c	/^	struct seminfo  *__buf;  \/* Buffer for IPC_INFO (Linux specific) *\/$/;"	m	union:semun	typeref:struct:semun::seminfo	file:
__set_errno	compat/hsearch_r.c	26;"	d	file:
__snd_pcm_mmap_emul_open	pcm/pcm_mmap_emul.c	/^int __snd_pcm_mmap_emul_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_bag1	mixer/mixer_local.h	/^typedef struct _bag1 {$/;"	s
_class_priv	mixer/simple_abst.c	/^typedef struct _class_priv {$/;"	s	file:
_get_triple	pcm/plugin_ops.h	1073;"	d
_get_triple	pcm/plugin_ops.h	78;"	d
_get_triple	pcm/plugin_ops.h	83;"	d
_get_triple_be	pcm/plugin_ops.h	1076;"	d
_get_triple_be	pcm/plugin_ops.h	61;"	d
_get_triple_le	pcm/plugin_ops.h	1075;"	d
_get_triple_le	pcm/plugin_ops.h	60;"	d
_get_triple_s	pcm/plugin_ops.h	1074;"	d
_get_triple_s	pcm/plugin_ops.h	79;"	d
_get_triple_s	pcm/plugin_ops.h	84;"	d
_norms	pcm/plugin_ops.h	/^static inline void _norms(const void *src, void *dst,$/;"	f
_put_triple	pcm/plugin_ops.h	1077;"	d
_put_triple	pcm/plugin_ops.h	80;"	d
_put_triple	pcm/plugin_ops.h	85;"	d
_put_triple_be	pcm/plugin_ops.h	1080;"	d
_put_triple_be	pcm/plugin_ops.h	69;"	d
_put_triple_le	pcm/plugin_ops.h	1079;"	d
_put_triple_le	pcm/plugin_ops.h	62;"	d
_put_triple_s	pcm/plugin_ops.h	1078;"	d
_put_triple_s	pcm/plugin_ops.h	81;"	d
_put_triple_s	pcm/plugin_ops.h	86;"	d
_selem_ctl	mixer/simple_none.c	/^typedef struct _selem_ctl {$/;"	s	file:
_selem_ctl_type	mixer/simple_none.c	/^typedef enum _selem_ctl_type {$/;"	g	file:
_selem_none	mixer/simple_none.c	/^typedef struct _selem_none {$/;"	s	file:
_snd_config	conf.c	/^struct _snd_config {$/;"	s	file:
_snd_config_copy	conf.c	/^static int _snd_config_copy(snd_config_t *src,$/;"	f	file:
_snd_config_evaluate	conf.c	/^static int _snd_config_evaluate(snd_config_t *src,$/;"	f	file:
_snd_config_expand	conf.c	/^static int _snd_config_expand(snd_config_t *src,$/;"	f	file:
_snd_config_make	conf.c	/^static int _snd_config_make(snd_config_t **config, char **id, snd_config_type_t type)$/;"	f	file:
_snd_config_make_add	conf.c	/^static int _snd_config_make_add(snd_config_t **config, char **id,$/;"	f	file:
_snd_config_save_children	conf.c	/^static int _snd_config_save_children(snd_config_t *config, snd_output_t *out,$/;"	f	file:
_snd_config_save_node_value	conf.c	/^static int _snd_config_save_node_value(snd_config_t *n, snd_output_t *out,$/;"	f	file:
_snd_config_search	conf.c	/^static int _snd_config_search(snd_config_t *config, $/;"	f	file:
_snd_config_update	conf.c	/^struct _snd_config_update {$/;"	s	file:
_snd_config_walk_pass	conf.c	/^typedef enum _snd_config_walk_pass {$/;"	g	file:
_snd_ctl	control/control_local.h	/^struct _snd_ctl {$/;"	s
_snd_ctl_async_descriptor	control/control_local.h	97;"	d
_snd_ctl_hw_open	control/control_hw.c	/^int _snd_ctl_hw_open(snd_ctl_t **handlep, char *name, snd_config_t *root ATTRIBUTE_UNUSED, snd_config_t *conf, int mode)$/;"	f
_snd_ctl_ops	control/control_local.h	/^typedef struct _snd_ctl_ops {$/;"	s
_snd_ctl_poll_descriptor	control/control.c	/^int _snd_ctl_poll_descriptor(snd_ctl_t *ctl)$/;"	f
_snd_ctl_shm_open	control/control_shm.c	/^int _snd_ctl_shm_open(snd_ctl_t **handlep, char *name, snd_config_t *root, snd_config_t *conf, int mode)$/;"	f
_snd_hctl	control/control_local.h	/^struct _snd_hctl {$/;"	s
_snd_hctl_elem	control/control_local.h	/^struct _snd_hctl_elem {$/;"	s
_snd_hctl_find_elem	control/hcontrol.c	/^static int _snd_hctl_find_elem(snd_hctl_t *hctl, const snd_ctl_elem_id_t *id, int *dir)$/;"	f	file:
_snd_hwdep	hwdep/hwdep_local.h	/^struct _snd_hwdep {$/;"	s
_snd_hwdep_hw_open	hwdep/hwdep_hw.c	/^int _snd_hwdep_hw_open(snd_hwdep_t **hwdep, char *name,$/;"	f
_snd_input	input.c	/^struct _snd_input {$/;"	s	file:
_snd_input_buffer	input.c	/^typedef struct _snd_input_buffer {$/;"	s	file:
_snd_input_ops	input.c	/^typedef struct _snd_input_ops {$/;"	s	file:
_snd_input_stdio	input.c	/^typedef struct _snd_input_stdio {$/;"	s	file:
_snd_mask	pcm/pcm_local.h	28;"	d
_snd_mixer	mixer/mixer_local.h	/^struct _snd_mixer {$/;"	s
_snd_mixer_class	mixer/mixer_local.h	/^struct _snd_mixer_class {$/;"	s
_snd_mixer_elem	mixer/mixer_local.h	/^struct _snd_mixer_elem {$/;"	s
_snd_mixer_find_elem	mixer/mixer.c	/^static int _snd_mixer_find_elem(snd_mixer_t *mixer, snd_mixer_elem_t *elem, int *dir)$/;"	f	file:
_snd_mixer_selem_id	mixer/mixer_local.h	/^struct _snd_mixer_selem_id {$/;"	s
_snd_mixer_selem_set_switch	mixer/simple_none.c	/^static int _snd_mixer_selem_set_switch(snd_mixer_elem_t *elem, int dir, snd_mixer_selem_channel_id_t channel, int value)$/;"	f	file:
_snd_mixer_selem_set_volume	mixer/simple_none.c	/^static int _snd_mixer_selem_set_volume(snd_mixer_elem_t *elem, int dir, snd_mixer_selem_channel_id_t channel, long value)$/;"	f	file:
_snd_mixer_slave	mixer/mixer.c	/^typedef struct _snd_mixer_slave {$/;"	s	file:
_snd_module_control_ext	control/control_ext.c	/^const char *_snd_module_control_ext = "";$/;"	v
_snd_module_control_hw	control/control_hw.c	/^const char *_snd_module_control_hw = "";$/;"	v
_snd_module_control_shm	control/control_shm.c	/^const char *_snd_module_control_shm = "";$/;"	v
_snd_module_hwdep_hw	hwdep/hwdep_hw.c	/^const char *_snd_module_hwdep_hw = "";$/;"	v
_snd_module_pcm_adpcm	pcm/pcm_adpcm.c	/^const char *_snd_module_pcm_adpcm = "";$/;"	v
_snd_module_pcm_alaw	pcm/pcm_alaw.c	/^const char *_snd_module_pcm_alaw = "";$/;"	v
_snd_module_pcm_asym	pcm/pcm_asym.c	/^const char *_snd_module_pcm_asym = "";$/;"	v
_snd_module_pcm_copy	pcm/pcm_copy.c	/^const char *_snd_module_pcm_copy = "";$/;"	v
_snd_module_pcm_dmix	pcm/pcm_dmix.c	/^const char *_snd_module_pcm_dmix = "";$/;"	v
_snd_module_pcm_dshare	pcm/pcm_dshare.c	/^const char *_snd_module_pcm_dshare = "";$/;"	v
_snd_module_pcm_dsnoop	pcm/pcm_dsnoop.c	/^const char *_snd_module_pcm_dsnoop = "";$/;"	v
_snd_module_pcm_empty	pcm/pcm_empty.c	/^const char *_snd_module_pcm_empty = "";$/;"	v
_snd_module_pcm_extplug	pcm/pcm_extplug.c	/^const char *_snd_module_pcm_extplug = "";$/;"	v
_snd_module_pcm_file	pcm/pcm_file.c	/^const char *_snd_module_pcm_file = "";$/;"	v
_snd_module_pcm_hooks	pcm/pcm_hooks.c	/^const char *_snd_module_pcm_hooks = "";$/;"	v
_snd_module_pcm_hw	pcm/pcm_hw.c	/^const char *_snd_module_pcm_hw = "";$/;"	v
_snd_module_pcm_iec958	pcm/pcm_iec958.c	/^const char *_snd_module_pcm_iec958 = "";$/;"	v
_snd_module_pcm_ioplug	pcm/pcm_ioplug.c	/^const char *_snd_module_pcm_ioplug = "";$/;"	v
_snd_module_pcm_ladspa	pcm/pcm_ladspa.c	/^const char *_snd_module_pcm_ladspa = "";$/;"	v
_snd_module_pcm_lfloat	pcm/pcm_lfloat.c	/^const char *_snd_module_pcm_lfloat = "";$/;"	v
_snd_module_pcm_linear	pcm/pcm_linear.c	/^const char *_snd_module_pcm_linear = "";$/;"	v
_snd_module_pcm_meter	pcm/pcm_meter.c	/^const char *_snd_module_pcm_meter = "";$/;"	v
_snd_module_pcm_mmap_emul	pcm/pcm_mmap_emul.c	/^const char *_snd_module_pcm_mmap_emul = "";$/;"	v
_snd_module_pcm_mulaw	pcm/pcm_mulaw.c	/^const char *_snd_module_pcm_mulaw = "";$/;"	v
_snd_module_pcm_multi	pcm/pcm_multi.c	/^const char *_snd_module_pcm_multi = "";$/;"	v
_snd_module_pcm_null	pcm/pcm_null.c	/^const char *_snd_module_pcm_null = "";$/;"	v
_snd_module_pcm_plug	pcm/pcm_plug.c	/^const char *_snd_module_pcm_plug = "";$/;"	v
_snd_module_pcm_rate	pcm/pcm_rate.c	/^const char *_snd_module_pcm_rate = "";$/;"	v
_snd_module_pcm_route	pcm/pcm_route.c	/^const char *_snd_module_pcm_route = "";$/;"	v
_snd_module_pcm_share	pcm/pcm_share.c	/^const char *_snd_module_pcm_share = "";$/;"	v
_snd_module_pcm_shm	pcm/pcm_shm.c	/^const char *_snd_module_pcm_shm = "";$/;"	v
_snd_module_pcm_softvol	pcm/pcm_softvol.c	/^const char *_snd_module_pcm_softvol = "";$/;"	v
_snd_module_rawmidi_hw	rawmidi/rawmidi_hw.c	/^const char *_snd_module_rawmidi_hw = "";$/;"	v
_snd_module_rawmidi_virt	rawmidi/rawmidi_virt.c	/^const char *_snd_module_rawmidi_virt = "";$/;"	v
_snd_module_seq_hw	seq/seq_hw.c	/^const char *_snd_module_seq_hw = "";$/;"	v
_snd_module_timer_hw	timer/timer_hw.c	/^const char *_snd_module_timer_hw = "";$/;"	v
_snd_module_timer_query_hw	timer/timer_query_hw.c	/^const char *_snd_module_timer_query_hw = "";$/;"	v
_snd_output	output.c	/^struct _snd_output {$/;"	s	file:
_snd_output_buffer	output.c	/^typedef struct _snd_output_buffer {$/;"	s	file:
_snd_output_ops	output.c	/^typedef struct _snd_output_ops {$/;"	s	file:
_snd_output_stdio	output.c	/^typedef struct _snd_output_stdio {$/;"	s	file:
_snd_pcm	pcm/pcm_local.h	/^struct _snd_pcm {$/;"	s
_snd_pcm_access_mask	pcm/pcm_local.h	29;"	d
_snd_pcm_adpcm_open	pcm/pcm_adpcm.c	/^int _snd_pcm_adpcm_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_adpcm_state	pcm/pcm_plugin.h	/^typedef struct _snd_pcm_adpcm_state {$/;"	s
_snd_pcm_alaw_open	pcm/pcm_alaw.c	/^int _snd_pcm_alaw_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_asym_open	pcm/pcm_asym.c	/^int _snd_pcm_asym_open(snd_pcm_t **pcmp, const char *name ATTRIBUTE_UNUSED,$/;"	f
_snd_pcm_async_descriptor	pcm/pcm_local.h	394;"	d
_snd_pcm_boundary	pcm/pcm.c	/^snd_pcm_uframes_t _snd_pcm_boundary(snd_pcm_t *pcm)$/;"	f
_snd_pcm_channel_info	pcm/pcm_local.h	/^typedef struct _snd_pcm_channel_info {$/;"	s
_snd_pcm_copy_open	pcm/pcm_copy.c	/^int _snd_pcm_copy_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_direct_get_slave_ipc_offset	pcm/pcm_direct.c	/^static int _snd_pcm_direct_get_slave_ipc_offset(snd_config_t *root,$/;"	f	file:
_snd_pcm_direct_shm_discard	pcm/pcm_direct.c	/^static int _snd_pcm_direct_shm_discard(snd_pcm_direct_t *dmix)$/;"	f	file:
_snd_pcm_dmix_open	pcm/pcm_dmix.c	/^int _snd_pcm_dmix_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_dshare_open	pcm/pcm_dshare.c	/^int _snd_pcm_dshare_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_dsnoop_open	pcm/pcm_dsnoop.c	/^int _snd_pcm_dsnoop_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_empty_open	pcm/pcm_empty.c	/^int _snd_pcm_empty_open(snd_pcm_t **pcmp, const char *name ATTRIBUTE_UNUSED,$/;"	f
_snd_pcm_file_format	pcm/pcm_file.c	/^typedef enum _snd_pcm_file_format {$/;"	g	file:
_snd_pcm_file_open	pcm/pcm_file.c	/^int _snd_pcm_file_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_format_mask	pcm/pcm_local.h	30;"	d
_snd_pcm_hook	pcm/pcm_hooks.c	/^struct _snd_pcm_hook {$/;"	s	file:
_snd_pcm_hook_ctl_elems_install	pcm/pcm_hooks.c	/^int _snd_pcm_hook_ctl_elems_install(snd_pcm_t *pcm, snd_config_t *conf)$/;"	f
_snd_pcm_hooks_open	pcm/pcm_hooks.c	/^int _snd_pcm_hooks_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_hw_open	pcm/pcm_hw.c	/^int _snd_pcm_hw_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_hw_param_any	pcm/pcm_params.c	/^static void _snd_pcm_hw_param_any(snd_pcm_hw_params_t *params, snd_pcm_hw_param_t var)$/;"	f	file:
_snd_pcm_hw_param_refine	pcm/pcm_params.c	/^int _snd_pcm_hw_param_refine(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_param_set	pcm/pcm_params.c	/^int _snd_pcm_hw_param_set(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_param_set_empty	pcm/pcm_params.c	/^void _snd_pcm_hw_param_set_empty(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_param_set_first	pcm/pcm_params.c	/^static int _snd_pcm_hw_param_set_first(snd_pcm_hw_params_t *params,$/;"	f	file:
_snd_pcm_hw_param_set_integer	pcm/pcm_params.c	/^static int _snd_pcm_hw_param_set_integer(snd_pcm_hw_params_t *params,$/;"	f	file:
_snd_pcm_hw_param_set_interval	pcm/pcm_params.c	/^int _snd_pcm_hw_param_set_interval(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_param_set_last	pcm/pcm_params.c	/^static int _snd_pcm_hw_param_set_last(snd_pcm_hw_params_t *params,$/;"	f	file:
_snd_pcm_hw_param_set_mask	pcm/pcm_params.c	/^int _snd_pcm_hw_param_set_mask(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_param_set_max	pcm/pcm_params.c	/^int _snd_pcm_hw_param_set_max(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_param_set_min	pcm/pcm_params.c	/^int _snd_pcm_hw_param_set_min(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_param_set_minmax	pcm/pcm_params.c	/^int _snd_pcm_hw_param_set_minmax(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_params	pcm/pcm_params.c	/^int _snd_pcm_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
_snd_pcm_hw_params_any	pcm/pcm_params.c	/^void _snd_pcm_hw_params_any(snd_pcm_hw_params_t *params)$/;"	f
_snd_pcm_hw_params_refine	pcm/pcm_params.c	/^int _snd_pcm_hw_params_refine(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_params_set_format	pcm/pcm_local.h	/^static inline int _snd_pcm_hw_params_set_format(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_params_set_subformat	pcm/pcm_local.h	/^static inline int _snd_pcm_hw_params_set_subformat(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_rule	pcm/pcm_params.c	/^struct _snd_pcm_hw_rule {$/;"	s	file:
_snd_pcm_iec958_open	pcm/pcm_iec958.c	/^int _snd_pcm_iec958_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_ladspa_open	pcm/pcm_ladspa.c	/^int _snd_pcm_ladspa_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_ladspa_policy	pcm/pcm_ladspa.c	/^typedef enum _snd_pcm_ladspa_policy {$/;"	g	file:
_snd_pcm_lfloat_open	pcm/pcm_lfloat.c	/^int _snd_pcm_lfloat_open(snd_pcm_t **pcmp ATTRIBUTE_UNUSED,$/;"	f
_snd_pcm_lfloat_open	pcm/pcm_lfloat.c	/^int _snd_pcm_lfloat_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_linear_open	pcm/pcm_linear.c	/^int _snd_pcm_linear_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_link_descriptor	pcm/pcm_local.h	393;"	d
_snd_pcm_meter	pcm/pcm_meter.c	/^typedef struct _snd_pcm_meter {$/;"	s	file:
_snd_pcm_meter_open	pcm/pcm_meter.c	/^int _snd_pcm_meter_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_mmap_emul_open	pcm/pcm_mmap_emul.c	/^int _snd_pcm_mmap_emul_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_mmap_hw_ptr	pcm/pcm.c	/^snd_pcm_uframes_t _snd_pcm_mmap_hw_ptr(snd_pcm_t *pcm)$/;"	f
_snd_pcm_mulaw_open	pcm/pcm_mulaw.c	/^int _snd_pcm_mulaw_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_multi_open	pcm/pcm_multi.c	/^int _snd_pcm_multi_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_null_open	pcm/pcm_null.c	/^int _snd_pcm_null_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_plug_open	pcm/pcm_plug.c	/^int _snd_pcm_plug_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_poll_descriptor	pcm/pcm.c	/^int _snd_pcm_poll_descriptor(snd_pcm_t *pcm)$/;"	f
_snd_pcm_rate	pcm/pcm_rate.c	/^struct _snd_pcm_rate {$/;"	s	file:
_snd_pcm_rate_open	pcm/pcm_rate.c	/^int _snd_pcm_rate_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_rbptr	pcm/pcm_local.h	/^typedef struct _snd_pcm_rbptr {$/;"	s
_snd_pcm_readi	pcm/pcm_local.h	/^static inline snd_pcm_sframes_t _snd_pcm_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f
_snd_pcm_readn	pcm/pcm_local.h	/^static inline snd_pcm_sframes_t _snd_pcm_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
_snd_pcm_route_open	pcm/pcm_route.c	/^int _snd_pcm_route_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_scope	pcm/pcm_meter.c	/^struct _snd_pcm_scope {$/;"	s	file:
_snd_pcm_scope_level	pcm/scopes/level.c	/^typedef struct _snd_pcm_scope_level {$/;"	s	file:
_snd_pcm_scope_level_channel	pcm/scopes/level.c	/^typedef struct _snd_pcm_scope_level_channel {$/;"	s	file:
_snd_pcm_scope_level_open	pcm/scopes/level.c	/^int _snd_pcm_scope_level_open(snd_pcm_t *pcm, const char *name,$/;"	f
_snd_pcm_scope_s16	pcm/pcm_meter.c	/^typedef struct _snd_pcm_scope_s16 {$/;"	s	file:
_snd_pcm_share_delay	pcm/pcm_share.c	/^static int _snd_pcm_share_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
_snd_pcm_share_forward	pcm/pcm_share.c	/^static snd_pcm_sframes_t _snd_pcm_share_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
_snd_pcm_share_hwsync	pcm/pcm_share.c	/^static int _snd_pcm_share_hwsync(snd_pcm_t *pcm)$/;"	f	file:
_snd_pcm_share_missing	pcm/pcm_share.c	/^static snd_pcm_uframes_t _snd_pcm_share_missing(snd_pcm_t *pcm)$/;"	f	file:
_snd_pcm_share_mmap_commit	pcm/pcm_share.c	/^static snd_pcm_sframes_t _snd_pcm_share_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
_snd_pcm_share_open	pcm/pcm_share.c	/^int _snd_pcm_share_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_share_rewind	pcm/pcm_share.c	/^static snd_pcm_sframes_t _snd_pcm_share_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
_snd_pcm_share_slave_forward	pcm/pcm_share.c	/^static snd_pcm_uframes_t _snd_pcm_share_slave_forward(snd_pcm_share_slave_t *slave)$/;"	f	file:
_snd_pcm_share_slave_missing	pcm/pcm_share.c	/^static snd_pcm_uframes_t _snd_pcm_share_slave_missing(snd_pcm_share_slave_t *slave)$/;"	f	file:
_snd_pcm_share_stop	pcm/pcm_share.c	/^static void _snd_pcm_share_stop(snd_pcm_t *pcm, snd_pcm_state_t state)$/;"	f	file:
_snd_pcm_share_update	pcm/pcm_share.c	/^static void _snd_pcm_share_update(snd_pcm_t *pcm)$/;"	f	file:
_snd_pcm_shm_open	pcm/pcm_shm.c	/^int _snd_pcm_shm_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_softvol_open	pcm/pcm_softvol.c	/^int _snd_pcm_softvol_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_subformat_mask	pcm/pcm_local.h	31;"	d
_snd_pcm_writei	pcm/pcm_local.h	/^static inline snd_pcm_sframes_t _snd_pcm_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f
_snd_pcm_writen	pcm/pcm_local.h	/^static inline snd_pcm_sframes_t _snd_pcm_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
_snd_rawmidi	rawmidi/rawmidi_local.h	/^struct _snd_rawmidi {$/;"	s
_snd_rawmidi_hw_open	rawmidi/rawmidi_hw.c	/^int _snd_rawmidi_hw_open(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f
_snd_rawmidi_virtual_open	rawmidi/rawmidi_virt.c	/^int _snd_rawmidi_virtual_open(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f
_snd_sctl	control/setup.c	/^struct _snd_sctl {$/;"	s	file:
_snd_send_fd	pcm/pcm_direct.c	/^static int _snd_send_fd(int sock, void *data, size_t len, int fd)$/;"	f	file:
_snd_seq	seq/seq_local.h	/^struct _snd_seq {$/;"	s
_snd_seq_hw_open	seq/seq_hw.c	/^int _snd_seq_hw_open(snd_seq_t **handlep, char *name,$/;"	f
_snd_seq_open_lconf	seq/seq.c	/^int _snd_seq_open_lconf(snd_seq_t **seqp, const char *name, $/;"	f
_snd_timer	timer/timer_local.h	/^struct _snd_timer {$/;"	s
_snd_timer_hw_open	timer/timer_hw.c	/^int _snd_timer_hw_open(snd_timer_t **timer, char *name,$/;"	f
_snd_timer_query	timer/timer_local.h	/^struct _snd_timer_query {$/;"	s
_snd_timer_query_hw_open	timer/timer_query_hw.c	/^int _snd_timer_query_hw_open(snd_timer_query_t **timer, char *name,$/;"	f
acall_compar	alisp/alisp_snd.c	/^static int acall_compar(const void *p1, const void *p2)$/;"	f	file:
acall_table	alisp/alisp_snd.c	/^static const struct acall_table acall_table[] = {$/;"	v	typeref:struct:acall_table	file:
acall_table	alisp/alisp_snd.c	/^struct acall_table {$/;"	s	file:
access	pcm/pcm_direct.h	/^		snd_pcm_access_t access;$/;"	m	struct:__anon27::__anon29
access	pcm/pcm_local.h	/^	snd_pcm_access_t access;	\/* access mode *\/$/;"	m	struct:_snd_pcm
access	pcm/pcm_plug.c	/^	snd_pcm_access_t access;$/;"	m	struct:__anon15	file:
activate	pcm/ladspa.h	/^  void (*activate)(LADSPA_Handle Instance);$/;"	m	struct:_LADSPA_Descriptor
active	pcm/pcm_ext_parm.h	/^	unsigned int active: 1;$/;"	m	struct:snd_ext_parm
add	pcm/interval.c	/^static inline unsigned int add(unsigned int a, unsigned int b)$/;"	f	file:
add_card	control/namehint.c	/^static int add_card(struct hint_list *list, int card)$/;"	f	file:
add_char_local_string	conf.c	/^static int add_char_local_string(struct local_string *s, int c)$/;"	f	file:
add_cons	alisp/alisp_snd.c	/^static struct alisp_object * add_cons(struct alisp_instance * instance,$/;"	f	file:
add_cons2	alisp/alisp_snd.c	/^static struct alisp_object * add_cons2(struct alisp_instance * instance,$/;"	f	file:
add_elem	control/setup.c	/^static int add_elem(snd_sctl_t *h, snd_config_t *_conf, snd_config_t *private_data)$/;"	f	file:
add_software_devices	control/namehint.c	/^static int add_software_devices(struct hint_list *list)$/;"	f	file:
add_tlv_info	pcm/pcm_softvol.c	/^static int add_tlv_info(snd_pcm_softvol_t *svol, snd_ctl_elem_info_t *cinfo)$/;"	f	file:
add_user_ctl	pcm/pcm_softvol.c	/^static int add_user_ctl(snd_pcm_softvol_t *svol, snd_ctl_elem_info_t *cinfo, int count)$/;"	f	file:
addr	pcm/pcm_local.h	/^	void *addr;			\/* base address of channel samples *\/$/;"	m	struct:_snd_pcm_channel_info
adpcm_decoder	pcm/pcm_adpcm.c	/^static int adpcm_decoder(unsigned char code, snd_pcm_adpcm_state_t * state)$/;"	f	file:
adpcm_encoder	pcm/pcm_adpcm.c	/^static char adpcm_encoder(int sl, snd_pcm_adpcm_state_t * state)$/;"	f	file:
adpcm_f	pcm/pcm_adpcm.c	/^typedef void (*adpcm_f)(const snd_pcm_channel_area_t *dst_areas,$/;"	t	file:
adpcm_states	pcm/pcm_meter.c	/^	snd_pcm_adpcm_state_t *adpcm_states;$/;"	m	struct:_snd_pcm_scope_s16	file:
alaw_f	pcm/pcm_alaw.c	/^typedef void (*alaw_f)(const snd_pcm_channel_area_t *dst_areas,$/;"	t	file:
alaw_to_s16	pcm/pcm_alaw.c	/^static int alaw_to_s16(unsigned char a_val)$/;"	f	file:
alisp_compare_type	alisp/alisp_local.h	/^static inline int alisp_compare_type(struct alisp_object *p, enum alisp_objects type)$/;"	f
alisp_dec_refs	alisp/alisp_local.h	/^static inline unsigned int alisp_dec_refs(struct alisp_object *p)$/;"	f
alisp_get_refs	alisp/alisp_local.h	/^static inline unsigned int alisp_get_refs(struct alisp_object *p)$/;"	f
alisp_get_type	alisp/alisp_local.h	/^static inline enum alisp_objects alisp_get_type(struct alisp_object *p)$/;"	f
alisp_inc_refs	alisp/alisp_local.h	/^static inline unsigned int alisp_inc_refs(struct alisp_object *p)$/;"	f
alisp_include_file	alisp/alisp.c	/^static int alisp_include_file(struct alisp_instance *instance, const char *filename)$/;"	f	file:
alisp_instance	alisp/alisp_local.h	/^struct alisp_instance {$/;"	s
alisp_object	alisp/alisp_local.h	/^struct alisp_object {$/;"	s
alisp_object_pair	alisp/alisp_local.h	/^struct alisp_object_pair {$/;"	s
alisp_objects	alisp/alisp_local.h	/^enum alisp_objects {$/;"	g
alisp_seq_iterator	alisp/alisp.c	34;"	d	file:
alisp_set_refs	alisp/alisp_local.h	/^static inline void alisp_set_refs(struct alisp_object *p, unsigned int refs)$/;"	f
alisp_set_type	alisp/alisp_local.h	/^static inline void alisp_set_type(struct alisp_object *p, enum alisp_objects type)$/;"	f
alisp_tokens	alisp/alisp_local.h	/^enum alisp_tokens {$/;"	g
alloc	conf.c	/^	size_t alloc;$/;"	m	struct:local_string	file:
alloc	control/control_local.h	/^	unsigned int alloc;	$/;"	m	struct:_snd_hctl
alloc	mixer/mixer_local.h	/^	unsigned int alloc;$/;"	m	struct:_snd_mixer
alloc	output.c	/^	size_t alloc;$/;"	m	struct:_snd_output_buffer	file:
alloc_tmpbuf	seq/seq.c	/^static int alloc_tmpbuf(snd_seq_t *seq, size_t len)$/;"	f	file:
allocated	control/namehint.c	/^	unsigned int allocated;$/;"	m	struct:hint_list	file:
allocated	pcm/pcm_ladspa.c	/^	unsigned int allocated;			\/* count of allocated samples *\/$/;"	m	struct:__anon54	file:
alsa_lisp	alisp/alisp.c	/^int alsa_lisp(struct alisp_cfg *cfg, struct alisp_instance **_instance)$/;"	f
alsa_lisp_default_cfg	alisp/alisp.c	/^struct alisp_cfg *alsa_lisp_default_cfg(snd_input_t *input)$/;"	f
alsa_lisp_default_cfg_free	alisp/alisp.c	/^void alsa_lisp_default_cfg_free(struct alisp_cfg *cfg)$/;"	f
alsa_lisp_free	alisp/alisp.c	/^void alsa_lisp_free(struct alisp_instance *instance)$/;"	f
alsa_lisp_function	alisp/alisp.c	/^int alsa_lisp_function(struct alisp_instance *instance, struct alisp_seq_iterator **result,$/;"	f
alsa_lisp_init_objects	alisp/alisp.c	/^void alsa_lisp_init_objects(void)$/;"	f
alsa_lisp_nil	alisp/alisp.c	/^struct alisp_object alsa_lisp_nil;$/;"	v	typeref:struct:alisp_object
alsa_lisp_result_free	alisp/alisp.c	/^void alsa_lisp_result_free(struct alisp_instance *instance,$/;"	f
alsa_lisp_seq_count	alisp/alisp.c	/^int alsa_lisp_seq_count(struct alisp_seq_iterator *seq)$/;"	f
alsa_lisp_seq_first	alisp/alisp.c	/^int alsa_lisp_seq_first(struct alisp_instance *instance, const char *id,$/;"	f
alsa_lisp_seq_integer	alisp/alisp.c	/^int alsa_lisp_seq_integer(struct alisp_seq_iterator *seq, long *val)$/;"	f
alsa_lisp_seq_next	alisp/alisp.c	/^int alsa_lisp_seq_next(struct alisp_seq_iterator **seq)$/;"	f
alsa_lisp_seq_pointer	alisp/alisp.c	/^int alsa_lisp_seq_pointer(struct alisp_seq_iterator *seq, const char *ptr_id, void **ptr)$/;"	f
alsa_lisp_t	alisp/alisp.c	/^struct alisp_object alsa_lisp_t;$/;"	v	typeref:struct:alisp_object
append_to_string	alisp/alisp.c	/^static int append_to_string(char **s, int *len, char *from, int size)$/;"	f	file:
appl	pcm/pcm_local.h	/^	snd_pcm_rbptr_t appl;$/;"	m	struct:_snd_pcm
appl_ptr	pcm/pcm_direct.h	/^	snd_pcm_uframes_t appl_ptr;$/;"	m	struct:snd_pcm_direct
appl_ptr	pcm/pcm_file.c	/^	snd_pcm_uframes_t appl_ptr;$/;"	m	struct:__anon11	file:
appl_ptr	pcm/pcm_hw.c	/^	snd_pcm_uframes_t appl_ptr;$/;"	m	struct:__anon36	file:
appl_ptr	pcm/pcm_mmap_emul.c	/^	snd_pcm_uframes_t appl_ptr;$/;"	m	struct:__anon13	file:
appl_ptr	pcm/pcm_null.c	/^	snd_pcm_uframes_t appl_ptr;$/;"	m	struct:__anon26	file:
appl_ptr	pcm/pcm_plugin.h	/^	snd_pcm_uframes_t appl_ptr, hw_ptr;$/;"	m	struct:__anon53
appl_ptr	pcm/pcm_rate.c	/^	snd_pcm_uframes_t appl_ptr, hw_ptr;$/;"	m	struct:_snd_pcm_rate	file:
appl_ptr	pcm/pcm_share.c	/^	snd_pcm_uframes_t appl_ptr;$/;"	m	struct:__anon25	file:
area	pcm/pcm_local.h	/^			struct snd_shm_area *area;$/;"	m	struct:_snd_pcm_channel_info::__anon47::__anon48	typeref:struct:_snd_pcm_channel_info::__anon47::__anon48::snd_shm_area
array	pcm/pcm_direct.c	/^	unsigned short  *array;  \/* Array for GETALL, SETALL *\/$/;"	m	union:semun	file:
array	pcm/pcm_ladspa.c	/^        unsigned int *array;$/;"	m	struct:__anon55	file:
as_double	pcm/plugin_ops.h	1062;"	d
as_double	pcm/plugin_ops.h	47;"	d
as_doublec	pcm/plugin_ops.h	1071;"	d
as_doublec	pcm/plugin_ops.h	58;"	d
as_float	pcm/pcm_route.c	/^	float as_float;$/;"	m	struct:__anon17	file:
as_float	pcm/pcm_route.c	/^	float as_float;$/;"	m	union:__anon20	file:
as_float	pcm/plugin_ops.h	1061;"	d
as_float	pcm/plugin_ops.h	46;"	d
as_floatc	pcm/plugin_ops.h	1070;"	d
as_floatc	pcm/plugin_ops.h	57;"	d
as_int	pcm/pcm_route.c	/^	int as_int;$/;"	m	struct:__anon17	file:
as_s16	pcm/plugin_ops.h	1059;"	d
as_s16	pcm/plugin_ops.h	43;"	d
as_s16c	pcm/plugin_ops.h	1068;"	d
as_s16c	pcm/plugin_ops.h	54;"	d
as_s32	pcm/plugin_ops.h	1060;"	d
as_s32	pcm/plugin_ops.h	44;"	d
as_s32c	pcm/plugin_ops.h	1069;"	d
as_s32c	pcm/plugin_ops.h	55;"	d
as_s64	pcm/plugin_ops.h	45;"	d
as_s64c	pcm/plugin_ops.h	56;"	d
as_s8	pcm/plugin_ops.h	1058;"	d
as_s8	pcm/plugin_ops.h	42;"	d
as_s8c	pcm/plugin_ops.h	1067;"	d
as_s8c	pcm/plugin_ops.h	53;"	d
as_sint32	pcm/pcm_route.c	/^	int32_t as_sint32;$/;"	m	union:__anon20	file:
as_sint64	pcm/pcm_route.c	/^	int64_t as_sint64;$/;"	m	union:__anon20	file:
as_u16	pcm/plugin_ops.h	1056;"	d
as_u16	pcm/plugin_ops.h	39;"	d
as_u16c	pcm/plugin_ops.h	1065;"	d
as_u16c	pcm/plugin_ops.h	50;"	d
as_u32	pcm/plugin_ops.h	1057;"	d
as_u32	pcm/plugin_ops.h	40;"	d
as_u32c	pcm/plugin_ops.h	1066;"	d
as_u32c	pcm/plugin_ops.h	51;"	d
as_u64	pcm/plugin_ops.h	41;"	d
as_u64c	pcm/plugin_ops.h	52;"	d
as_u8	pcm/plugin_ops.h	1055;"	d
as_u8	pcm/plugin_ops.h	38;"	d
as_u8c	pcm/plugin_ops.h	1064;"	d
as_u8c	pcm/plugin_ops.h	49;"	d
ask_dB_vol_ops	mixer/simple_none.c	/^static int ask_dB_vol_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
ask_vol_dB_ops	mixer/simple_none.c	/^static int ask_vol_dB_ops(snd_mixer_elem_t *elem,$/;"	f	file:
async	control/control_local.h	/^	int (*async)(snd_ctl_t *handle, int sig, pid_t pid);$/;"	m	struct:_snd_ctl_ops
async	pcm/pcm_local.h	/^	int (*async)(snd_pcm_t *pcm, int sig, pid_t pid);$/;"	m	struct:__anon50
async	timer/timer_local.h	/^	int (*async)(snd_timer_t *timer, int sig, pid_t pid);$/;"	m	struct:__anon65
async_handlers	control/control_local.h	/^	struct list_head async_handlers;$/;"	m	struct:_snd_ctl	typeref:struct:_snd_ctl::list_head
async_handlers	pcm/pcm_local.h	/^	struct list_head async_handlers;$/;"	m	struct:_snd_pcm	typeref:struct:_snd_pcm::list_head
async_handlers	timer/timer_local.h	/^	struct list_head async_handlers;$/;"	m	struct:_snd_timer	typeref:struct:_snd_timer::list_head
att	pcm/pcm_route.c	/^	int att;	\/* Attenuated *\/$/;"	m	struct:snd_pcm_route_ttable_dst	file:
attach_flag	mixer/simple_abst.c	/^	int attach_flag;$/;"	m	struct:_class_priv	file:
avail_max	pcm/pcm_direct.h	/^	snd_pcm_uframes_t avail_max;$/;"	m	struct:snd_pcm_direct
avail_max	pcm/pcm_ioplug.c	/^	snd_pcm_uframes_t avail_max;$/;"	m	struct:snd_pcm_ioplug_priv	file:
avail_min	pcm/pcm_direct.h	/^		unsigned int avail_min;$/;"	m	struct:__anon27::__anon29
avail_min	pcm/pcm_local.h	/^	snd_pcm_uframes_t avail_min;	\/* min avail frames for wakeup *\/$/;"	m	struct:_snd_pcm
avail_min	rawmidi/rawmidi_local.h	/^	size_t avail_min;$/;"	m	struct:_snd_rawmidi
avail_update	pcm/pcm_local.h	/^	snd_pcm_sframes_t (*avail_update)(snd_pcm_t *pcm);$/;"	m	struct:__anon51
bag1_t	mixer/mixer_local.h	/^} bag1_t;$/;"	t	typeref:struct:_bag1
bag_add	mixer/bag.c	/^int bag_add(bag_t *bag, void *ptr)$/;"	f
bag_del	mixer/bag.c	/^int bag_del(bag_t *bag, void *ptr)$/;"	f
bag_del_all	mixer/bag.c	/^void bag_del_all(bag_t *bag)$/;"	f
bag_empty	mixer/bag.c	/^int bag_empty(bag_t *bag)$/;"	f
bag_for_each	mixer/mixer_local.h	42;"	d
bag_for_each_safe	mixer/mixer_local.h	43;"	d
bag_free	mixer/bag.c	/^void bag_free(bag_t *bag)$/;"	f
bag_iterator_entry	mixer/mixer_local.h	41;"	d
bag_iterator_t	mixer/mixer_local.h	/^typedef struct list_head *bag_iterator_t;$/;"	t	typeref:struct:list_head
bag_new	mixer/bag.c	/^int bag_new(bag_t **bag)$/;"	f
bag_t	mixer/mixer_local.h	/^typedef struct list_head bag_t;$/;"	t	typeref:struct:list_head
bar_width	pcm/scopes/level.c	/^	unsigned int bar_width;$/;"	m	struct:_snd_pcm_scope_level	file:
base_len	mixer/simple_none.c	/^static int base_len(const char *name, selem_ctl_type_t *type)$/;"	f	file:
bindings	pcm/pcm_direct.h	/^	snd_config_t *bindings;$/;"	m	struct:snd_pcm_direct_open_conf
bindings	pcm/pcm_direct.h	/^	unsigned int *bindings;$/;"	m	struct:snd_pcm_direct
bits	pcm/pcm_file.c	/^	short bits;$/;"	m	struct:wav_fmt	file:
boundary	pcm/pcm_direct.h	/^		unsigned long long boundary;$/;"	m	struct:__anon27::__anon29
boundary	pcm/pcm_local.h	/^	snd_pcm_uframes_t boundary;	\/* pointers wrap point *\/$/;"	m	struct:_snd_pcm
boundary_lt	pcm/interval.c	/^int boundary_lt(unsigned int a, int adir, unsigned int b, int bdir)$/;"	f
boundary_nearer	pcm/interval.c	/^int boundary_nearer(int min, int mindir, int best, int bestdir, int max, int maxdir)$/;"	f
boundary_sub	pcm/interval.c	/^void boundary_sub(int a, int adir, int b, int bdir, int *c, int *cdir)$/;"	f
bps	pcm/pcm_file.c	/^	int bps;$/;"	m	struct:wav_fmt	file:
buf	conf.c	/^	char *buf;$/;"	m	struct:local_string	file:
buf	control/tlv.c	/^	unsigned int buf[TEMP_TLV_SIZE];$/;"	m	struct:tlv_info	file:
buf	input.c	/^	unsigned char *buf;$/;"	m	struct:_snd_input_buffer	file:
buf	output.c	/^	unsigned char *buf;$/;"	m	struct:_snd_output_buffer	file:
buf	pcm/pcm_direct.c	/^	struct semid_ds *buf;    \/* Buffer for IPC_STAT, IPC_SET *\/$/;"	m	union:semun	typeref:struct:semun::semid_ds	file:
buf	pcm/pcm_meter.c	/^	int16_t *buf;$/;"	m	struct:_snd_pcm_scope_s16	file:
buf	pcm/pcm_meter.c	/^	unsigned char *buf;$/;"	m	struct:_snd_pcm_meter	file:
buf	seq/seq_midi_event.c	/^	unsigned char *buf;	\/* input buffer *\/$/;"	m	struct:snd_midi_event	file:
buf_areas	pcm/pcm_meter.c	/^	snd_pcm_channel_area_t *buf_areas;$/;"	m	struct:_snd_pcm_meter	file:
buf_areas	pcm/pcm_meter.c	/^	snd_pcm_channel_area_t *buf_areas;$/;"	m	struct:_snd_pcm_scope_s16	file:
buf_size	pcm/pcm_meter.c	/^	snd_pcm_uframes_t buf_size;$/;"	m	struct:_snd_pcm_meter	file:
buffer_bytes	pcm/pcm_file.c	/^	size_t buffer_bytes;$/;"	m	struct:__anon11	file:
buffer_size	pcm/pcm_direct.h	/^		snd_interval_t buffer_size;$/;"	m	struct:__anon27::__anon28
buffer_size	pcm/pcm_direct.h	/^		unsigned int buffer_size;$/;"	m	struct:__anon27::__anon29
buffer_size	pcm/pcm_direct.h	/^	snd_pcm_sframes_t buffer_size;$/;"	m	struct:slave_params
buffer_size	pcm/pcm_local.h	/^	snd_pcm_uframes_t buffer_size;$/;"	m	struct:_snd_pcm
buffer_size	rawmidi/rawmidi_local.h	/^	size_t buffer_size;$/;"	m	struct:_snd_rawmidi
buffer_time	pcm/pcm_direct.h	/^		snd_interval_t buffer_time;$/;"	m	struct:__anon27::__anon28
buffer_time	pcm/pcm_direct.h	/^		snd_interval_t buffer_time;$/;"	m	struct:__anon27::__anon29
buffer_time	pcm/pcm_direct.h	/^	int buffer_time;$/;"	m	struct:slave_params
buffer_time	pcm/pcm_local.h	/^	snd_interval_t buffer_time;$/;"	m	struct:_snd_pcm
buffer_time	pcm/pcm_share.c	/^	snd_pcm_sframes_t buffer_time;$/;"	m	struct:__anon24	file:
bufsize	seq/seq_midi_event.c	/^	size_t bufsize;$/;"	m	struct:snd_midi_event	file:
build_in_ctls	control/control.c	/^static const char *const build_in_ctls[] = {$/;"	v	file:
build_in_pcms	pcm/pcm.c	/^static const char *const build_in_pcms[] = {$/;"	v	file:
bwidth	pcm/pcm_file.c	/^	short bwidth;$/;"	m	struct:wav_fmt	file:
byteswap	pcm/pcm_iec958.c	/^	unsigned int byteswap;$/;"	m	struct:snd_pcm_iec958	file:
c	alisp/alisp_local.h	/^		} c;$/;"	m	union:alisp_object::__anon1	typeref:struct:alisp_object::__anon1::__anon2
callback	control/control_local.h	/^	snd_hctl_callback_t callback;$/;"	m	struct:_snd_hctl
callback	control/control_local.h	/^	snd_hctl_elem_callback_t callback;$/;"	m	struct:_snd_hctl_elem
callback	mixer/mixer_local.h	/^	snd_mixer_callback_t callback;$/;"	m	struct:_snd_mixer
callback	mixer/mixer_local.h	/^	snd_mixer_elem_callback_t callback;$/;"	m	struct:_snd_mixer_elem
callback_private	control/control_local.h	/^	void *callback_private;$/;"	m	struct:_snd_hctl
callback_private	control/control_local.h	/^	void *callback_private;$/;"	m	struct:_snd_hctl_elem
callback_private	mixer/mixer_local.h	/^	void *callback_private;$/;"	m	struct:_snd_mixer
callback_private	mixer/mixer_local.h	/^	void *callback_private;$/;"	m	struct:_snd_mixer_elem
capture_item	mixer/simple_none.c	/^	unsigned int capture_item;$/;"	m	struct:_selem_none	file:
car	alisp/alisp.c	/^static inline struct alisp_object * car(struct alisp_object * p)$/;"	f	file:
car	alisp/alisp_local.h	/^			struct alisp_object *car;$/;"	m	struct:alisp_object::__anon1::__anon2	typeref:struct:alisp_object::__anon1::__anon2::alisp_object
card	control/control_hw.c	/^	int card;$/;"	m	struct:__anon7	file:
card	control/namehint.c	/^	int card;$/;"	m	struct:hint_list	file:
card	pcm/pcm_hw.c	/^	int card, device, subdevice;$/;"	m	struct:__anon36	file:
card	rawmidi/rawmidi_hw.c	/^	int card, device, subdevice;$/;"	m	struct:__anon59	file:
card_info	control/control_local.h	/^	int (*card_info)(snd_ctl_t *handle, snd_ctl_card_info_t *info);$/;"	m	struct:_snd_ctl_ops
cardname	control/namehint.c	/^	char *cardname;$/;"	m	struct:hint_list	file:
cchannels	pcm/pcm_softvol.c	/^	unsigned int cchannels;$/;"	m	struct:__anon43	file:
cdr	alisp/alisp.c	/^static inline struct alisp_object * cdr(struct alisp_object * p)$/;"	f	file:
cdr	alisp/alisp_local.h	/^			struct alisp_object *cdr;$/;"	m	struct:alisp_object::__anon1::__anon2	typeref:struct:alisp_object::__anon1::__anon2::alisp_object
ch	conf.c	/^	int ch;$/;"	m	struct:__anon5	file:
chan	pcm/pcm_file.c	/^	short chan;$/;"	m	struct:wav_fmt	file:
changed	pcm/pcm_local.h	/^	void (*changed)(snd_pcm_t *pcm, snd_pcm_t *src);$/;"	m	struct:_snd_pcm_rbptr
channel	pcm/pcm_local.h	/^	unsigned int channel;$/;"	m	struct:_snd_pcm_channel_info
channel	pcm/pcm_route.c	/^	int channel;$/;"	m	struct:__anon17	file:
channel_info	pcm/pcm_local.h	/^	int (*channel_info)(snd_pcm_t *pcm, snd_pcm_channel_info_t *info);$/;"	m	struct:__anon50
channels	mixer/simple_none.c	/^		unsigned int channels;$/;"	m	struct:_selem_none::selem_str	file:
channels	pcm/pcm_direct.h	/^		unsigned int channels;$/;"	m	struct:__anon27::__anon29
channels	pcm/pcm_direct.h	/^	int channels;$/;"	m	struct:slave_params
channels	pcm/pcm_direct.h	/^	unsigned int channels;		\/* client's channels *\/$/;"	m	struct:snd_pcm_direct
channels	pcm/pcm_hw.c	/^	int channels;$/;"	m	struct:__anon36	file:
channels	pcm/pcm_ladspa.c	/^	unsigned int channels;			\/* forced input channels, 0 = auto *\/$/;"	m	struct:__anon54	file:
channels	pcm/pcm_ladspa.c	/^        snd_pcm_ladspa_array_t channels;$/;"	m	struct:__anon56	file:
channels	pcm/pcm_local.h	/^	unsigned int channels;		\/* channels *\/$/;"	m	struct:_snd_pcm
channels	pcm/pcm_multi.c	/^	snd_pcm_multi_channel_t *channels;$/;"	m	struct:__anon41	file:
channels	pcm/pcm_plug.c	/^	unsigned int channels;$/;"	m	struct:__anon15	file:
channels	pcm/pcm_rate_linear.c	/^	unsigned int channels;$/;"	m	struct:rate_linear	file:
channels	pcm/pcm_share.c	/^	unsigned int channels;$/;"	m	struct:__anon24	file:
channels	pcm/pcm_share.c	/^	unsigned int channels;$/;"	m	struct:__anon25	file:
channels	pcm/scopes/level.c	/^	snd_pcm_scope_level_channel_t *channels;$/;"	m	struct:_snd_pcm_scope_level	file:
channels_count	pcm/pcm_multi.c	/^	unsigned int channels_count;$/;"	m	struct:__anon39	file:
channels_count	pcm/pcm_multi.c	/^	unsigned int channels_count;$/;"	m	struct:__anon41	file:
charno	alisp/alisp_local.h	/^	int charno;$/;"	m	struct:alisp_instance
check_access_change	pcm/pcm_plug.c	/^static int check_access_change(snd_pcm_hw_params_t *cparams,$/;"	f	file:
check_access_mask	pcm/pcm_softvol.c	/^static int check_access_mask(snd_pcm_hw_params_t *src,$/;"	f	file:
check_linear_format	pcm/pcm_plug.c	/^static int check_linear_format(const snd_pcm_format_mask_t *format_mask, int wid, int sgn, int ed)$/;"	f	file:
check_set_object	alisp/alisp.c	/^static int check_set_object(struct alisp_instance * instance, struct alisp_object * name)$/;"	f	file:
chn_mask	pcm/pcm_direct.h	/^			unsigned long long chn_mask;$/;"	m	struct:__anon27::__anon30::__anon31
chn_mask	pcm/pcm_direct.h	/^			unsigned long long chn_mask;$/;"	m	struct:snd_pcm_direct::__anon32::__anon35
class_priv_t	mixer/simple_abst.c	/^} class_priv_t;$/;"	t	typeref:struct:_class_priv	file:
classes	mixer/mixer_local.h	/^	struct list_head classes;	\/* list of all elem classes *\/$/;"	m	struct:_snd_mixer	typeref:struct:_snd_mixer::list_head
cleanup	pcm/ladspa.h	/^  void (*cleanup)(LADSPA_Handle Instance);$/;"	m	struct:_LADSPA_Descriptor
clear_ext_params	pcm/pcm_extplug.c	/^static void clear_ext_params(extplug_priv_t *ext)$/;"	f	file:
clear_io_params	pcm/pcm_ioplug.c	/^static void clear_io_params(ioplug_priv_t *io)$/;"	f	file:
client	pcm/pcm_direct.h	/^	int server, client;$/;"	m	struct:snd_pcm_direct
client	seq/seq_local.h	/^	int client;		\/* client number *\/$/;"	m	struct:_snd_seq
client_frames	pcm/pcm_plugin.h	/^	snd_pcm_sframes_t (*client_frames)(snd_pcm_t *pcm, snd_pcm_sframes_t frames);$/;"	m	struct:__anon53
client_socket	pcm/pcm_share.c	/^	int client_socket;$/;"	m	struct:__anon25	file:
clients	pcm/pcm_share.c	/^	struct list_head clients;$/;"	m	struct:__anon24	typeref:struct:__anon24::list_head	file:
close	control/control_local.h	/^	int (*close)(snd_ctl_t *handle);$/;"	m	struct:_snd_ctl_ops
close	hwdep/hwdep_local.h	/^	int (*close)(snd_hwdep_t *hwdep);$/;"	m	struct:__anon9
close	input.c	/^	int (*close)(snd_input_t *input);$/;"	m	struct:_snd_input_ops	file:
close	input.c	/^	int close;$/;"	m	struct:_snd_input_stdio	file:
close	output.c	/^	int (*close)(snd_output_t *output);$/;"	m	struct:_snd_output_ops	file:
close	output.c	/^	int close;$/;"	m	struct:_snd_output_stdio	file:
close	pcm/pcm_local.h	/^	int (*close)(snd_pcm_t *pcm);$/;"	m	struct:__anon50
close	rawmidi/rawmidi_local.h	/^	int (*close)(snd_rawmidi_t *rawmidi);$/;"	m	struct:__anon61
close	seq/seq_local.h	/^	int (*close)(snd_seq_t *seq);$/;"	m	struct:__anon63
close	timer/timer_local.h	/^	int (*close)(snd_timer_query_t *timer);$/;"	m	struct:__anon66
close	timer/timer_local.h	/^	int (*close)(snd_timer_t *timer);$/;"	m	struct:__anon65
close_slave	pcm/pcm_generic.h	/^	int close_slave;$/;"	m	struct:__anon22
close_slave	pcm/pcm_multi.c	/^	int close_slave;$/;"	m	struct:__anon39	file:
closed	pcm/pcm_meter.c	/^	int closed;$/;"	m	struct:_snd_pcm_meter	file:
cmask	pcm/pcm_hw.c	/^	unsigned int cmask;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
column	conf.c	/^	unsigned int line, column;$/;"	m	struct:filedesc	file:
comm_fd	pcm/pcm_direct.h	/^	int comm_fd;			\/* communication file descriptor (socket) *\/$/;"	m	struct:snd_pcm_direct
common_error	alisp/alisp_snd.c	/^static int common_error(snd_output_t **rout, struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
compar	alisp/alisp.c	/^static int compar(const void *p1, const void *p2)$/;"	f	file:
compare	control/control_local.h	/^	snd_hctl_compare_t compare;$/;"	m	struct:_snd_hctl
compare	mixer/mixer_local.h	/^	snd_mixer_compare_t compare;$/;"	m	struct:_snd_mixer
compare	mixer/mixer_local.h	/^	snd_mixer_compare_t compare;$/;"	m	struct:_snd_mixer_class
compare_hctl	control/hcontrol.c	/^static snd_hctl_t *compare_hctl;$/;"	v	file:
compare_mixer_priority_lookup	mixer/simple_none.c	/^static int compare_mixer_priority_lookup(const char **name, const char * const *names, int coef)$/;"	f	file:
compare_weight	control/control_local.h	/^	int compare_weight;		\/* compare weight (reversed) *\/$/;"	m	struct:_snd_hctl_elem
compare_weight	mixer/mixer_local.h	/^	int compare_weight;		\/* compare weight (reversed) *\/$/;"	m	struct:_snd_mixer_elem
compound	conf.c	/^		} compound;$/;"	m	union:_snd_config::__anon3	typeref:struct:_snd_config::__anon3::__anon4	file:
connect_port	pcm/ladspa.h	/^   void (*connect_port)(LADSPA_Handle Instance,$/;"	m	struct:_LADSPA_Descriptor
controls	pcm/pcm_ladspa.c	/^	LADSPA_Data *controls;			\/* index = LADSPA control port index *\/$/;"	m	struct:__anon57	file:
controls_initialized	pcm/pcm_ladspa.c	/^	unsigned char *controls_initialized;	\/* initialized by ALSA user *\/$/;"	m	struct:__anon57	file:
controls_size	pcm/pcm_ladspa.c	/^	unsigned int controls_size;		\/* size of array *\/$/;"	m	struct:__anon57	file:
conv_idx	pcm/pcm_linear.c	/^	unsigned int conv_idx;$/;"	m	struct:__anon12	file:
conv_idx	pcm/pcm_route.c	/^	unsigned int conv_idx;$/;"	m	struct:__anon18	file:
conv_labels	pcm/plugin_ops.h	/^static void *const conv_labels[4 * 2 * 2 * 4 * 2] = {$/;"	v
convert_from_dB	mixer/simple_none.c	/^static int convert_from_dB(snd_hctl_elem_t *ctl, struct selem_str *rec,$/;"	f	file:
convert_from_s16	pcm/pcm_rate.c	/^static void convert_from_s16(snd_pcm_rate_t *rate, const int16_t *buf,$/;"	f	file:
convert_to_dB	mixer/simple_none.c	/^static int convert_to_dB(snd_hctl_elem_t *ctl, struct selem_str *rec,$/;"	f	file:
convert_to_s16	pcm/pcm_rate.c	/^static void convert_to_s16(snd_pcm_rate_t *rate, int16_t *buf,$/;"	f	file:
copy_labels	pcm/plugin_ops.h	/^static void *copy_labels[5] = {$/;"	v
copy_local_string	conf.c	/^static char *copy_local_string(struct local_string *s)$/;"	f	file:
copy_slave_setting	pcm/pcm_direct.c	/^static void copy_slave_setting(snd_pcm_direct_t *dmix, snd_pcm_t *spcm)$/;"	f	file:
count	conf.c	/^	unsigned int count;$/;"	m	struct:_snd_config_update	file:
count	control/control_local.h	/^	unsigned int count;$/;"	m	struct:_snd_hctl
count	control/namehint.c	/^	unsigned int count;$/;"	m	struct:hint_list	file:
count	mixer/mixer_local.h	/^	unsigned int count;$/;"	m	struct:_snd_mixer
count_list	alisp/alisp.c	/^static int count_list(struct alisp_object * p)$/;"	f	file:
counter	pcm/pcm_iec958.c	/^	unsigned int counter;$/;"	m	struct:snd_pcm_iec958	file:
cplugins	pcm/pcm_ladspa.c	/^	struct list_head cplugins;$/;"	m	struct:__anon54	typeref:struct:__anon54::list_head	file:
create_ctl_elem_id	alisp/alisp_snd.c	/^static struct alisp_object * create_ctl_elem_id(struct alisp_instance * instance, snd_ctl_elem_id_t * id, struct alisp_object * cons)$/;"	f	file:
create_port	seq/seq_local.h	/^	int (*create_port)(snd_seq_t *seq, snd_seq_port_info_t * port);$/;"	m	struct:__anon63
create_queue	seq/seq_local.h	/^	int (*create_queue)(snd_seq_t *seq, snd_seq_queue_info_t *info);$/;"	m	struct:__anon63
ctl	control/control_local.h	/^	snd_ctl_t *ctl;$/;"	m	struct:_snd_hctl
ctl	control/namehint.c	/^	snd_ctl_t *ctl;$/;"	m	struct:hint_list	file:
ctl	control/setup.c	/^	snd_ctl_t *ctl;$/;"	m	struct:_snd_sctl	file:
ctl	mixer/simple_abst.c	/^	snd_ctl_t *ctl;$/;"	m	struct:_class_priv	file:
ctl	pcm/pcm_softvol.c	/^	snd_ctl_t *ctl;$/;"	m	struct:__anon43	file:
ctls	mixer/simple_none.c	/^	selem_ctl_t ctls[CTL_LAST + 1];$/;"	m	struct:_selem_none	file:
ctrl	control/control_shm.c	/^	volatile snd_ctl_shm_ctrl_t *ctrl;$/;"	m	struct:__anon8	file:
ctrl	pcm/pcm_shm.c	/^	volatile snd_pcm_shm_ctrl_t *ctrl;$/;"	m	struct:__anon42	file:
cur_vol	pcm/pcm_softvol.c	/^	unsigned int cur_vol[2];$/;"	m	struct:__anon43	file:
current	conf.c	/^	struct filedesc *current;$/;"	m	struct:__anon5	typeref:struct:__anon5::filedesc	file:
d	pcm/pcm_local.h	/^	double d;$/;"	m	union:snd_tmp_double
dB_value	pcm/pcm_softvol.c	/^	unsigned int *dB_value;$/;"	m	struct:__anon43	file:
data	pcm/pcm_extplug.c	/^	snd_pcm_extplug_t *data;$/;"	m	struct:snd_pcm_extplug_priv	file:
data	pcm/pcm_ioplug.c	/^	snd_pcm_ioplug_t *data;$/;"	m	struct:snd_pcm_ioplug_priv	file:
data	pcm/pcm_ladspa.c	/^        LADSPA_Data **data;$/;"	m	struct:__anon56	file:
db_info	mixer/simple_none.c	/^		unsigned int *db_info;$/;"	m	struct:_selem_none::selem_str	file:
db_init_error	mixer/simple_none.c	/^		unsigned int db_init_error: 1;$/;"	m	struct:_selem_none::selem_str	file:
db_initialized	mixer/simple_none.c	/^		unsigned int db_initialized: 1;$/;"	m	struct:_selem_none::selem_str	file:
deactivate	pcm/ladspa.h	/^  void (*deactivate)(LADSPA_Handle Instance);$/;"	m	struct:_LADSPA_Descriptor
debug	alisp/alisp_local.h	/^	    debug: 1;$/;"	m	struct:alisp_instance
decay_ms	pcm/scopes/level.c	/^	unsigned int decay_ms;$/;"	m	struct:_snd_pcm_scope_level	file:
decode	seq/seq_midi_event.c	/^	event_decode_t decode;$/;"	m	struct:status_event_list_t	file:
decode	seq/seq_midi_event.c	/^	int (*decode)(snd_midi_event_t *dev, unsigned char *buf, int len, const snd_seq_event_t *ev);$/;"	m	struct:extra_event_list_t	file:
default_rate_plugins	pcm/pcm_rate.c	/^static const char *const default_rate_plugins[] = {$/;"	v	file:
delay	pcm/pcm_local.h	/^	int (*delay)(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp);$/;"	m	struct:__anon51
delay	pcm/pcm_meter.c	/^	struct timespec delay;$/;"	m	struct:_snd_pcm_meter	typeref:struct:_snd_pcm_meter::timespec	file:
delete_object	alisp/alisp.c	/^static void delete_object(struct alisp_instance *instance, struct alisp_object * p)$/;"	f	file:
delete_port	seq/seq_local.h	/^	int (*delete_port)(snd_seq_t *seq, snd_seq_port_info_t * port);$/;"	m	struct:__anon63
delete_queue	seq/seq_local.h	/^	int (*delete_queue)(snd_seq_t *seq, snd_seq_queue_info_t *info);$/;"	m	struct:__anon63
delete_tree	alisp/alisp.c	/^static void delete_tree(struct alisp_instance *instance, struct alisp_object * p)$/;"	f	file:
deps	pcm/pcm_params.c	/^	int deps[4];$/;"	m	struct:_snd_pcm_hw_rule	file:
depth	pcm/pcm_ladspa.c	/^	unsigned int depth;$/;"	m	struct:snd_pcm_ladspa_instance	file:
desc	pcm/pcm_ladspa.c	/^	const LADSPA_Descriptor *desc;$/;"	m	struct:__anon58	file:
desc	pcm/pcm_ladspa.c	/^	const LADSPA_Descriptor *desc;$/;"	m	struct:snd_pcm_ladspa_instance	file:
dev	conf.c	/^	dev_t dev;$/;"	m	struct:finfo	file:
device	control/namehint.c	/^	int device;$/;"	m	struct:hint_list	file:
device	mixer/simple_abst.c	/^	char *device;$/;"	m	struct:_class_priv	file:
device	pcm/pcm_hw.c	/^	int card, device, subdevice;$/;"	m	struct:__anon36	file:
device	rawmidi/rawmidi_hw.c	/^	int card, device, subdevice;$/;"	m	struct:__anon59	file:
device_input	control/namehint.c	/^	long device_input;$/;"	m	struct:hint_list	file:
device_output	control/namehint.c	/^	long device_output;$/;"	m	struct:hint_list	file:
div	pcm/pcm_route.c	45;"	d	file:
div	pcm/pcm_route.c	47;"	d	file:
div32	pcm/interval.c	/^static inline unsigned int div32(unsigned int a, unsigned int b, $/;"	f	file:
div64_32	pcm/interval.c	/^static inline void div64_32(u_int64_t *n, u_int32_t d, u_int32_t *rem)$/;"	f	file:
div_down	pcm/interval.c	/^static inline unsigned int div_down(unsigned int a, unsigned int b)$/;"	f	file:
div_up	pcm/interval.c	/^static inline unsigned int div_up(unsigned int a, unsigned int b)$/;"	f	file:
dl_handle	control/control_local.h	/^	void *dl_handle;$/;"	m	struct:_snd_ctl
dl_handle	hwdep/hwdep_local.h	/^	void *dl_handle;$/;"	m	struct:_snd_hwdep
dl_handle	pcm/pcm_ladspa.c	/^	void *dl_handle;$/;"	m	struct:__anon58	file:
dl_handle	pcm/pcm_local.h	/^	void *dl_handle;$/;"	m	struct:_snd_pcm
dl_handle	pcm/pcm_meter.c	/^	void *dl_handle;$/;"	m	struct:_snd_pcm_meter	file:
dl_handle	rawmidi/rawmidi_local.h	/^	void *dl_handle;$/;"	m	struct:_snd_rawmidi
dl_handle	seq/seq_local.h	/^	void *dl_handle;$/;"	m	struct:_snd_seq
dl_handle	timer/timer_local.h	/^	void *dl_handle;$/;"	m	struct:_snd_timer
dl_handle	timer/timer_local.h	/^	void *dl_handle;$/;"	m	struct:_snd_timer_query
dlhandle	mixer/simple_abst.c	/^	void *dlhandle;$/;"	m	struct:_class_priv	file:
dllist	pcm/pcm_hooks.c	/^	struct list_head dllist;$/;"	m	struct:__anon37	typeref:struct:__anon37::list_head	file:
dlobj	pcm/pcm_hooks.c	/^	void *dlobj;$/;"	m	struct:snd_pcm_hook_dllist	file:
dlobj_cache	dlmisc.c	/^struct dlobj_cache {$/;"	s	file:
dmix	pcm/pcm_direct.h	/^		} dmix;$/;"	m	union:snd_pcm_direct::__anon32	typeref:struct:snd_pcm_direct::__anon32::__anon33
dmix_down_sem	pcm/pcm_dmix.c	296;"	d	file:
dmix_down_sem	pcm/pcm_dmix.c	299;"	d	file:
dmix_server_free	pcm/pcm_dmix.c	/^static void dmix_server_free(snd_pcm_direct_t *dmix)$/;"	f	file:
dmix_supported_format	pcm/pcm_dmix.c	150;"	d	file:
dmix_supported_format	pcm/pcm_dmix_i386.c	83;"	d	file:
dmix_supported_format	pcm/pcm_dmix_x86_64.c	66;"	d	file:
dmix_up_sem	pcm/pcm_dmix.c	297;"	d	file:
dmix_up_sem	pcm/pcm_dmix.c	300;"	d	file:
do_convert	pcm/pcm_rate.c	/^static void do_convert(const snd_pcm_channel_area_t *dst_areas,$/;"	f	file:
do_silence	pcm/pcm_dshare.c	/^static void do_silence(snd_pcm_t *pcm)$/;"	f	file:
done_lex	alisp/alisp.c	/^static void done_lex(struct alisp_instance *instance)$/;"	f	file:
donot_close	pcm/pcm_local.h	/^	unsigned int donot_close: 1;	\/* don't close this PCM *\/$/;"	m	struct:_snd_pcm
double_t	pcm/pcm_lfloat.c	/^typedef double double_t;$/;"	t	file:
dout	alisp/alisp_local.h	/^	snd_output_t *dout;	\/* debug output *\/$/;"	m	struct:alisp_instance
drain	pcm/pcm_local.h	/^	int (*drain)(snd_pcm_t *pcm);$/;"	m	struct:__anon51
drain	rawmidi/rawmidi_local.h	/^	int (*drain)(snd_rawmidi_t *rawmidi);$/;"	m	struct:__anon61
drain_silenced	pcm/pcm_share.c	/^	int drain_silenced;$/;"	m	struct:__anon25	file:
drop	pcm/pcm_local.h	/^	int (*drop)(snd_pcm_t *pcm);$/;"	m	struct:__anon51
drop	rawmidi/rawmidi_local.h	/^	int (*drop)(snd_rawmidi_t *rawmidi);$/;"	m	struct:__anon61
dshare	pcm/pcm_direct.h	/^		} dshare;$/;"	m	union:__anon27::__anon30	typeref:struct:__anon27::__anon30::__anon31
dshare	pcm/pcm_direct.h	/^		} dshare;$/;"	m	union:snd_pcm_direct::__anon32	typeref:struct:snd_pcm_direct::__anon32::__anon35
dsnoop	pcm/pcm_direct.h	/^		} dsnoop;$/;"	m	union:snd_pcm_direct::__anon32	typeref:struct:snd_pcm_direct::__anon32::__anon34
dst	pcm/plugin_ops.h	/^		   as_u32(dst) = bswap_32(tmp_float.i); goto PUT32F_END;$/;"	v
dst	pcm/plugin_ops.h	/^		   as_u64(dst) = bswap_64(tmp_double.l); goto PUT32F_END;$/;"	v
dst	pcm/plugin_ops.h	/^put32f_1234_1234F: as_float(dst) = (float_t)((int32_t)sample) \/ (float_t)0x80000000UL; goto PUT32F_END;$/;"	v
dst	pcm/plugin_ops.h	/^put_1_1: as_s8(dst) = sample; goto PUT_END;$/;"	v
dst_buf	pcm/pcm_rate.c	/^	int16_t *dst_buf;$/;"	m	struct:_snd_pcm_rate	file:
dst_sfmt	pcm/pcm_route.c	/^	snd_pcm_format_t dst_sfmt;$/;"	m	struct:__anon18	file:
dsts	pcm/pcm_route.c	/^	snd_pcm_route_ttable_dst_t *dsts;$/;"	m	struct:__anon18	file:
dump	pcm/pcm_local.h	/^	void (*dump)(snd_pcm_t *pcm, snd_output_t *out);$/;"	m	struct:__anon50
dump_hw_params	pcm/pcm_params.c	/^static inline void dump_hw_params(snd_pcm_hw_params_t *params, const char *type,$/;"	f	file:
dump_hw_params	pcm/pcm_params.c	/^static void dump_hw_params(snd_pcm_hw_params_t *params, const char *type,$/;"	f	file:
dump_obj_lists	alisp/alisp.c	/^static void dump_obj_lists(struct alisp_instance *instance, const char *fname)$/;"	f	file:
dump_objects	alisp/alisp.c	/^static void dump_objects(struct alisp_instance *instance, const char *fname)$/;"	f	file:
dump_one_param	pcm/pcm.c	/^static void dump_one_param(snd_pcm_hw_params_t *params, unsigned int k, snd_output_t *out)$/;"	f	file:
elem	mixer/simple_none.c	/^	snd_hctl_elem_t *elem;$/;"	m	struct:_selem_ctl	file:
elem	pcm/pcm_softvol.c	/^	snd_ctl_elem_value_t elem;$/;"	m	struct:__anon43	file:
elem_read_enum	mixer/simple_none.c	/^static int elem_read_enum(selem_none_t *s)$/;"	f	file:
elem_read_route	mixer/simple_none.c	/^static int elem_read_route(selem_none_t *s, int dir, selem_ctl_type_t type)$/;"	f	file:
elem_read_switch	mixer/simple_none.c	/^static int elem_read_switch(selem_none_t *s, int dir, selem_ctl_type_t type)$/;"	f	file:
elem_read_volume	mixer/simple_none.c	/^static int elem_read_volume(selem_none_t *s, int dir, selem_ctl_type_t type)$/;"	f	file:
elem_write_enum	mixer/simple_none.c	/^static int elem_write_enum(selem_none_t *s)$/;"	f	file:
elem_write_route	mixer/simple_none.c	/^static int elem_write_route(selem_none_t *s, int dir, selem_ctl_type_t type)$/;"	f	file:
elem_write_switch	mixer/simple_none.c	/^static int elem_write_switch(selem_none_t *s, int dir, selem_ctl_type_t type)$/;"	f	file:
elem_write_switch_constant	mixer/simple_none.c	/^static int elem_write_switch_constant(selem_none_t *s, selem_ctl_type_t type, int val)$/;"	f	file:
elem_write_volume	mixer/simple_none.c	/^static int elem_write_volume(selem_none_t *s, int dir, selem_ctl_type_t type)$/;"	f	file:
element_add	control/control_local.h	/^	int (*element_add)(snd_ctl_t *handle, snd_ctl_elem_info_t *info);$/;"	m	struct:_snd_ctl_ops
element_info	control/control_local.h	/^	int (*element_info)(snd_ctl_t *handle, snd_ctl_elem_info_t *info);$/;"	m	struct:_snd_ctl_ops
element_list	control/control_local.h	/^	int (*element_list)(snd_ctl_t *handle, snd_ctl_elem_list_t *list);$/;"	m	struct:_snd_ctl_ops
element_lock	control/control_local.h	/^	int (*element_lock)(snd_ctl_t *handle, snd_ctl_elem_id_t *lock);$/;"	m	struct:_snd_ctl_ops
element_read	control/control_local.h	/^	int (*element_read)(snd_ctl_t *handle, snd_ctl_elem_value_t *control);$/;"	m	struct:_snd_ctl_ops
element_remove	control/control_local.h	/^	int (*element_remove)(snd_ctl_t *handle, snd_ctl_elem_id_t *id);$/;"	m	struct:_snd_ctl_ops
element_replace	control/control_local.h	/^	int (*element_replace)(snd_ctl_t *handle, snd_ctl_elem_info_t *info);$/;"	m	struct:_snd_ctl_ops
element_tlv	control/control_local.h	/^	int (*element_tlv)(snd_ctl_t *handle, int op_flag, unsigned int numid,$/;"	m	struct:_snd_ctl_ops
element_unlock	control/control_local.h	/^	int (*element_unlock)(snd_ctl_t *handle, snd_ctl_elem_id_t *unlock);$/;"	m	struct:_snd_ctl_ops
element_write	control/control_local.h	/^	int (*element_write)(snd_ctl_t *handle, snd_ctl_elem_value_t *control);$/;"	m	struct:_snd_ctl_ops
elems	control/control_local.h	/^	struct list_head elems;		\/* list of all controls *\/$/;"	m	struct:_snd_hctl	typeref:struct:_snd_hctl::list_head
elems	control/setup.c	/^	struct list_head elems;$/;"	m	struct:_snd_sctl	typeref:struct:_snd_sctl::list_head	file:
elems	mixer/mixer_local.h	/^	struct list_head elems;		\/* list of all elems *\/$/;"	m	struct:_snd_mixer	typeref:struct:_snd_mixer::list_head
enabled	pcm/pcm_meter.c	/^	int enabled;$/;"	m	struct:_snd_pcm_scope	file:
encode	seq/seq_midi_event.c	/^	event_encode_t encode;$/;"	m	struct:status_event_list_t	file:
entry	compat/hsearch_r.c	/^  ENTRY entry;$/;"	m	struct:_ENTRY	file:
enum_item_name_ops	mixer/simple_none.c	/^static int enum_item_name_ops(snd_mixer_elem_t *elem,$/;"	f	file:
eout	alisp/alisp_local.h	/^	snd_output_t *eout;	\/* error output *\/$/;"	m	struct:alisp_instance
eq	alisp/alisp.c	/^static inline int eq(struct alisp_object * p1, struct alisp_object * p2)$/;"	f	file:
equal	alisp/alisp.c	/^static int equal(struct alisp_object * p1, struct alisp_object * p2)$/;"	f	file:
eval	alisp/alisp.c	/^static struct alisp_object * eval(struct alisp_instance *instance, struct alisp_object * p)$/;"	f	file:
eval_cons	alisp/alisp.c	/^static inline struct alisp_object * eval_cons(struct alisp_instance *instance, struct alisp_object * p)$/;"	f	file:
eval_cons1	alisp/alisp.c	/^static inline struct alisp_object * eval_cons1(struct alisp_instance *instance, struct alisp_object * p1, struct alisp_object * p2)$/;"	f	file:
eval_func	alisp/alisp.c	/^static struct alisp_object * eval_func(struct alisp_instance *instance, struct alisp_object * p, struct alisp_object * args)$/;"	f	file:
event	mixer/mixer_local.h	/^	snd_mixer_event_t event;$/;"	m	struct:_snd_mixer_class
event	seq/seq_midi_event.c	/^	int event;$/;"	m	struct:extra_event_list_t	file:
event	seq/seq_midi_event.c	/^	int event;$/;"	m	struct:status_event_list_t	file:
event_decode_t	seq/seq_midi_event.c	/^typedef void (*event_decode_t)(const snd_seq_event_t *ev, unsigned char *buf);$/;"	t	file:
event_encode_t	seq/seq_midi_event.c	/^typedef void (*event_encode_t)(snd_midi_event_t *dev, snd_seq_event_t *ev);$/;"	t	file:
events	mixer/mixer_local.h	/^	unsigned int events;$/;"	m	struct:_snd_mixer
excl_parbits	pcm/pcm_extplug.c	/^static const unsigned int excl_parbits[SND_PCM_EXTPLUG_HW_PARAMS] = {$/;"	v	file:
extend_buf	alisp/alisp.c	/^static char * extend_buf(struct alisp_instance *instance, char *p)$/;"	f	file:
extplug_hw_refine	pcm/pcm_extplug.c	/^static int extplug_hw_refine(snd_pcm_hw_params_t *hw_params,$/;"	f	file:
extplug_priv_t	pcm/pcm_extplug.c	/^} extplug_priv_t;$/;"	t	typeref:struct:snd_pcm_extplug_priv	file:
extra_decode_ctrl14	seq/seq_midi_event.c	/^static int extra_decode_ctrl14(snd_midi_event_t *dev, unsigned char *buf, int count, const snd_seq_event_t *ev)$/;"	f	file:
extra_decode_xrpn	seq/seq_midi_event.c	/^static int extra_decode_xrpn(snd_midi_event_t *dev, unsigned char *buf, int count, const snd_seq_event_t *ev)$/;"	f	file:
extra_event	seq/seq_midi_event.c	/^} extra_event[] = {$/;"	v	typeref:struct:extra_event_list_t	file:
extra_event_list_t	seq/seq_midi_event.c	/^static const struct extra_event_list_t {$/;"	s	file:
f	alisp/alisp_local.h	/^		double	f;$/;"	m	union:alisp_object::__anon1
f	pcm/pcm_local.h	/^	float f;$/;"	m	union:snd_tmp_float
fast_op_arg	pcm/pcm_local.h	/^	snd_pcm_t *fast_op_arg;$/;"	m	struct:_snd_pcm
fast_ops	pcm/pcm_local.h	/^	const snd_pcm_fast_ops_t *fast_ops;$/;"	m	struct:_snd_pcm
fd	control/control_hw.c	/^	int fd;$/;"	m	struct:__anon7	file:
fd	pcm/pcm_file.c	/^	int fd;$/;"	m	struct:__anon11	file:
fd	pcm/pcm_hw.c	/^	int fd;$/;"	m	struct:__anon36	file:
fd	pcm/pcm_local.h	/^			int fd;$/;"	m	struct:_snd_pcm_channel_info::__anon47::__anon49
fd	pcm/pcm_local.h	/^	int fd;$/;"	m	struct:_snd_pcm_rbptr
fd	rawmidi/rawmidi_hw.c	/^	int fd;$/;"	m	struct:__anon59	file:
fd	seq/seq_hw.c	/^	int fd;$/;"	m	struct:__anon62	file:
fields	conf.c	/^			struct list_head fields;$/;"	m	struct:_snd_config::__anon3::__anon4	typeref:struct:_snd_config::__anon3::__anon4::list_head	file:
fifo_size	pcm/pcm_direct.h	/^		unsigned int fifo_size;$/;"	m	struct:__anon27::__anon29
fifo_size	pcm/pcm_hw.c	/^	sndrv_pcm_uframes_t fifo_size;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
fifo_size	pcm/pcm_local.h	/^	snd_pcm_uframes_t fifo_size;	\/* chip FIFO size in frames *\/$/;"	m	struct:_snd_pcm
file_ptr_bytes	pcm/pcm_file.c	/^	snd_pcm_uframes_t file_ptr_bytes;$/;"	m	struct:__anon11	file:
filedesc	conf.c	/^struct filedesc {$/;"	s	file:
filelen	pcm/pcm_file.c	/^	size_t filelen;$/;"	m	struct:__anon11	file:
filename	pcm/pcm_ladspa.c	/^	char *filename;$/;"	m	struct:__anon58	file:
final_fname	pcm/pcm_file.c	/^	char *final_fname;$/;"	m	struct:__anon11	file:
find_full	mixer/simple_abst.c	/^static int find_full(snd_mixer_class_t *class, snd_mixer_t *mixer,$/;"	f	file:
find_module	mixer/simple_abst.c	/^static int find_module(snd_mixer_class_t *class, snd_config_t *top)$/;"	f	file:
finfo	conf.c	/^	struct finfo *finfo;$/;"	m	struct:_snd_config_update	typeref:struct:_snd_config_update::finfo	file:
finfo	conf.c	/^struct finfo {$/;"	s	file:
first	pcm/pcm_local.h	/^	unsigned int first;		\/* offset to first sample in bits *\/$/;"	m	struct:_snd_pcm_channel_info
fixup_wav_header	pcm/pcm_file.c	/^static void fixup_wav_header(snd_pcm_t *pcm)$/;"	f	file:
flags	alisp/alisp_snd.c	/^struct flags {$/;"	s	file:
flags	pcm/pcm_hw.c	/^	unsigned int flags;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
float32_idx	pcm/pcm_lfloat.c	/^	unsigned int float32_idx;$/;"	m	struct:__anon16	file:
float_preferred_formats	pcm/pcm_plug.c	/^static const snd_pcm_format_t float_preferred_formats[] = {$/;"	v	file:
float_t	pcm/pcm_lfloat.c	/^typedef float float_t;$/;"	t	file:
flush	output.c	/^	int (*flush)(snd_output_t *output);$/;"	m	struct:_snd_output_ops	file:
fmt	pcm/pcm_file.c	/^	short fmt;$/;"	m	struct:wav_fmt	file:
fname	pcm/pcm_file.c	/^	char *fname;$/;"	m	struct:__anon11	file:
format	pcm/pcm_direct.h	/^		snd_pcm_format_t format;$/;"	m	struct:__anon27::__anon29
format	pcm/pcm_direct.h	/^		unsigned int format;$/;"	m	struct:__anon27::__anon28
format	pcm/pcm_direct.h	/^	snd_pcm_format_t format;$/;"	m	struct:slave_params
format	pcm/pcm_file.c	/^	int format;$/;"	m	struct:__anon11	file:
format	pcm/pcm_hw.c	/^	snd_pcm_format_t format;$/;"	m	struct:__anon36	file:
format	pcm/pcm_iec958.c	/^	snd_pcm_format_t format;$/;"	m	struct:snd_pcm_iec958	file:
format	pcm/pcm_local.h	/^	snd_pcm_format_t format;	\/* SND_PCM_FORMAT_* *\/$/;"	m	struct:_snd_pcm
format	pcm/pcm_plug.c	/^	snd_pcm_format_t format;$/;"	m	struct:__anon15	file:
format	pcm/pcm_share.c	/^	snd_pcm_format_t format;$/;"	m	struct:__anon24	file:
format_parse_char	alisp/alisp.c	/^static int format_parse_char(struct alisp_instance *instance, char **s, int *len, struct alisp_object *p)$/;"	f	file:
format_parse_float	alisp/alisp.c	/^static int format_parse_float(struct alisp_instance *instance, char **s, int *len, struct alisp_object *p)$/;"	f	file:
format_parse_integer	alisp/alisp.c	/^static int format_parse_integer(struct alisp_instance *instance, char **s, int *len, struct alisp_object *p)$/;"	f	file:
format_parse_string	alisp/alisp.c	/^static int format_parse_string(struct alisp_instance *instance, char **s, int *len, struct alisp_object *p)$/;"	f	file:
forward	pcm/pcm_local.h	/^	snd_pcm_sframes_t (*forward)(snd_pcm_t *pcm, snd_pcm_uframes_t frames);$/;"	m	struct:__anon51
forwardable	pcm/pcm_local.h	/^	snd_pcm_sframes_t (*forwardable)(snd_pcm_t *pcm);$/;"	m	struct:__anon51
fp	input.c	/^	FILE *fp;$/;"	m	struct:_snd_input_stdio	file:
fp	output.c	/^	FILE *fp;$/;"	m	struct:_snd_output_stdio	file:
frame_bits	pcm/pcm_direct.h	/^		unsigned int frame_bits;$/;"	m	struct:__anon27::__anon29
frame_bits	pcm/pcm_local.h	/^	unsigned int frame_bits;$/;"	m	struct:_snd_pcm
free_elems	control/setup.c	/^static int free_elems(snd_sctl_t *h)$/;"	f	file:
free_local_string	conf.c	/^static void free_local_string(struct local_string *s)$/;"	f	file:
free_object	alisp/alisp.c	/^static void free_object(struct alisp_object * p)$/;"	f	file:
free_objects	alisp/alisp.c	/^static void free_objects(struct alisp_instance *instance)$/;"	f	file:
free_objs	alisp/alisp_local.h	/^	long free_objs;$/;"	m	struct:alisp_instance
free_objs_list	alisp/alisp_local.h	/^	struct list_head free_objs_list;$/;"	m	struct:alisp_instance	typeref:struct:alisp_instance::list_head
from_user	mixer/simple_none.c	/^static long from_user(selem_none_t *s, int dir, selem_ctl_t *c, long value)$/;"	f	file:
func	alisp/alisp.c	/^	struct alisp_object * (*func)(struct alisp_instance *instance, struct alisp_object * args);$/;"	m	struct:intrinsic	typeref:struct:intrinsic::func	file:
func	alisp/alisp_snd.c	/^	struct alisp_object * (*func) (struct alisp_instance *instance, struct acall_table * item, struct alisp_object * args);$/;"	m	struct:acall_table	typeref:struct:acall_table::func	file:
func	dlmisc.c	/^	void *func;$/;"	m	struct:dlobj_cache	file:
func	pcm/pcm_adpcm.c	/^	adpcm_f func;$/;"	m	struct:__anon52	file:
func	pcm/pcm_alaw.c	/^	alaw_f func;$/;"	m	struct:__anon10	file:
func	pcm/pcm_hooks.c	/^	snd_pcm_hook_func_t func;$/;"	m	struct:_snd_pcm_hook	file:
func	pcm/pcm_iec958.c	/^	iec958_f func;$/;"	m	struct:snd_pcm_iec958	file:
func	pcm/pcm_lfloat.c	/^	void (*func)(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset,$/;"	m	struct:__anon16	file:
func	pcm/pcm_mulaw.c	/^	mulaw_f func;$/;"	m	struct:__anon45	file:
func	pcm/pcm_params.c	/^	snd_pcm_hw_rule_func_t func;$/;"	m	struct:_snd_pcm_hw_rule	file:
func	pcm/pcm_rate_linear.c	/^	void (*func)(struct rate_linear *rate,$/;"	m	struct:rate_linear	file:
func	pcm/pcm_route.c	/^	route_f func;$/;"	m	struct:snd_pcm_route_ttable_dst	file:
gen	pcm/pcm_file.c	/^	snd_pcm_generic_t gen;$/;"	m	struct:__anon11	file:
gen	pcm/pcm_hooks.c	/^	snd_pcm_generic_t gen;$/;"	m	struct:__anon37	file:
gen	pcm/pcm_meter.c	/^	snd_pcm_generic_t gen;$/;"	m	struct:_snd_pcm_meter	file:
gen	pcm/pcm_mmap_emul.c	/^	snd_pcm_generic_t gen;$/;"	m	struct:__anon13	file:
gen	pcm/pcm_plug.c	/^	snd_pcm_generic_t gen;$/;"	m	struct:__anon14	file:
gen	pcm/pcm_plugin.h	/^	snd_pcm_generic_t gen;$/;"	m	struct:__anon53
gen	pcm/pcm_rate.c	/^	snd_pcm_generic_t gen;$/;"	m	struct:_snd_pcm_rate	file:
generic_dmix_supported_format	pcm/pcm_dmix_generic.c	122;"	d	file:
generic_mix_areas_16_native	pcm/pcm_dmix_generic.c	/^static void generic_mix_areas_16_native(unsigned int size,$/;"	f	file:
generic_mix_areas_16_swap	pcm/pcm_dmix_generic.c	/^static void generic_mix_areas_16_swap(unsigned int size,$/;"	f	file:
generic_mix_areas_24	pcm/pcm_dmix_generic.c	/^static void generic_mix_areas_24(unsigned int size,$/;"	f	file:
generic_mix_areas_32_native	pcm/pcm_dmix_generic.c	/^static void generic_mix_areas_32_native(unsigned int size,$/;"	f	file:
generic_mix_areas_32_swap	pcm/pcm_dmix_generic.c	/^static void generic_mix_areas_32_swap(unsigned int size,$/;"	f	file:
generic_mix_areas_u8	pcm/pcm_dmix_generic.c	/^static void generic_mix_areas_u8(unsigned int size,$/;"	f	file:
generic_mix_select_callbacks	pcm/pcm_dmix_generic.c	/^static void generic_mix_select_callbacks(snd_pcm_direct_t *dmix)$/;"	f	file:
generic_remix_areas_16_native	pcm/pcm_dmix_generic.c	/^static void generic_remix_areas_16_native(unsigned int size,$/;"	f	file:
generic_remix_areas_16_swap	pcm/pcm_dmix_generic.c	/^static void generic_remix_areas_16_swap(unsigned int size,$/;"	f	file:
generic_remix_areas_24	pcm/pcm_dmix_generic.c	/^static void generic_remix_areas_24(unsigned int size,$/;"	f	file:
generic_remix_areas_32_native	pcm/pcm_dmix_generic.c	/^static void generic_remix_areas_32_native(unsigned int size,$/;"	f	file:
generic_remix_areas_32_swap	pcm/pcm_dmix_generic.c	/^static void generic_remix_areas_32_swap(unsigned int size,$/;"	f	file:
generic_remix_areas_u8	pcm/pcm_dmix_generic.c	/^static void generic_remix_areas_u8(unsigned int size,$/;"	f	file:
get16_labels	pcm/plugin_ops.h	/^static void *const get16_labels[4 * 2 * 2 + 4 * 3] = {$/;"	v
get32_labels	pcm/plugin_ops.h	/^static void *const get32_labels[4 * 2 * 2 + 4 * 3] = {$/;"	v
get32float_labels	pcm/plugin_ops.h	/^static void *const get32float_labels[2 * 2] = {$/;"	v
get_card_name	control/namehint.c	/^static int get_card_name(struct hint_list *list, int card)$/;"	f	file:
get_char	conf.c	/^static int get_char(input_t *input)$/;"	f	file:
get_char_skip_comments	conf.c	/^static int get_char_skip_comments(input_t *input)$/;"	f	file:
get_client_info	seq/seq_local.h	/^	int (*get_client_info)(snd_seq_t *seq, snd_seq_client_info_t * info);$/;"	m	struct:__anon63
get_client_pool	seq/seq_local.h	/^	int (*get_client_pool)(snd_seq_t *seq, snd_seq_client_pool_t *info);$/;"	m	struct:__anon63
get_compare_weight	control/hcontrol.c	/^static int get_compare_weight(const snd_ctl_elem_id_t *id)$/;"	f	file:
get_compare_weight	mixer/simple_none.c	/^static int get_compare_weight(const char *name, unsigned int idx)$/;"	f	file:
get_current_volume	pcm/pcm_softvol.c	/^static void get_current_volume(snd_pcm_softvol_t *svol)$/;"	f	file:
get_dB_ops	mixer/simple_none.c	/^static int get_dB_ops(snd_mixer_elem_t *elem,$/;"	f	file:
get_dB_range	mixer/simple_none.c	/^static int get_dB_range(snd_hctl_elem_t *ctl, struct selem_str *rec,$/;"	f	file:
get_dB_range_ops	mixer/simple_none.c	/^static int get_dB_range_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
get_delimstring	conf.c	/^static int get_delimstring(char **string, int delim, input_t *input)$/;"	f	file:
get_dev_name	control/namehint.c	/^static char *get_dev_name(struct hint_list *list)$/;"	f	file:
get_dev_name1	control/namehint.c	/^static int get_dev_name1(struct hint_list *list, char **res, int device,$/;"	f	file:
get_elem	control/control_ext.c	/^static snd_ctl_ext_key_t get_elem(snd_ctl_ext_t *ext, snd_ctl_elem_id_t *id)$/;"	f	file:
get_enum_item_ops	mixer/simple_none.c	/^static int get_enum_item_ops(snd_mixer_elem_t *elem,$/;"	f	file:
get_flags	alisp/alisp_snd.c	/^static unsigned int get_flags(struct alisp_instance * instance,$/;"	f	file:
get_freestring	conf.c	/^static int get_freestring(char **string, int id, input_t *input)$/;"	f	file:
get_idx	pcm/pcm_linear.c	/^	unsigned int get_idx, put_idx;$/;"	m	struct:__anon12	file:
get_idx	pcm/pcm_rate.c	/^	unsigned int get_idx;$/;"	m	struct:_snd_pcm_rate	file:
get_idx	pcm/pcm_rate_linear.c	/^	unsigned int get_idx;$/;"	m	struct:rate_linear	file:
get_idx	pcm/pcm_route.c	/^	unsigned int get_idx;$/;"	m	struct:__anon18	file:
get_integer	alisp/alisp_snd.c	/^static inline int get_integer(struct alisp_object * obj)$/;"	f	file:
get_links	pcm/pcm_extplug.c	/^static unsigned int get_links(struct snd_ext_parm *params)$/;"	f	file:
get_named_queue	seq/seq_local.h	/^	int (*get_named_queue)(snd_seq_t *seq, snd_seq_queue_info_t *info);$/;"	m	struct:__anon63
get_nonwhite	conf.c	/^static int get_nonwhite(input_t *input)$/;"	f	file:
get_object	alisp/alisp.c	/^static struct alisp_object * get_object(struct alisp_instance *instance, struct alisp_object * name)$/;"	f	file:
get_object1	alisp/alisp.c	/^static struct alisp_object * get_object1(struct alisp_instance *instance, const char *id)$/;"	f	file:
get_pointer	alisp/alisp_snd.c	/^static inline const void *get_pointer(struct alisp_object * obj)$/;"	f	file:
get_port_info	seq/seq_local.h	/^	int (*get_port_info)(snd_seq_t *seq, snd_seq_port_info_t * info);$/;"	m	struct:__anon63
get_port_subscription	seq/seq_local.h	/^	int (*get_port_subscription)(snd_seq_t *seq, snd_seq_port_subscribe_t * sub);$/;"	m	struct:__anon63
get_power_state	control/control_local.h	/^	int (*get_power_state)(snd_ctl_t *handle, unsigned int *state);$/;"	m	struct:_snd_ctl_ops
get_ptr	alisp/alisp_snd.c	/^static const void *get_ptr(struct alisp_instance * instance,$/;"	f	file:
get_queue_client	seq/seq_local.h	/^	int (*get_queue_client)(snd_seq_t *seq, snd_seq_queue_client_t * client);$/;"	m	struct:__anon63
get_queue_info	seq/seq_local.h	/^	int (*get_queue_info)(snd_seq_t *seq, snd_seq_queue_info_t *info);$/;"	m	struct:__anon63
get_queue_status	seq/seq_local.h	/^	int (*get_queue_status)(snd_seq_t *seq, snd_seq_queue_status_t * status);$/;"	m	struct:__anon63
get_queue_tempo	seq/seq_local.h	/^	int (*get_queue_tempo)(snd_seq_t *seq, snd_seq_queue_tempo_t * tempo);$/;"	m	struct:__anon63
get_queue_timer	seq/seq_local.h	/^	int (*get_queue_timer)(snd_seq_t *seq, snd_seq_queue_timer_t * timer);$/;"	m	struct:__anon63
get_quotedchar	conf.c	/^static int get_quotedchar(input_t *input)$/;"	f	file:
get_range_ops	mixer/simple_none.c	/^static int get_range_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
get_selem_ctl	mixer/simple_none.c	/^static selem_ctl_t *get_selem_ctl(selem_none_t *s, int dir)$/;"	f	file:
get_short_name	mixer/simple_none.c	/^static const char *get_short_name(const char *lname)$/;"	f	file:
get_string	alisp/alisp_snd.c	/^static const char *get_string(struct alisp_object * obj, const char * deflt)$/;"	f	file:
get_string	conf.c	/^static int get_string(char **string, int id, input_t *input)$/;"	f	file:
get_string_hash	alisp/alisp.c	/^static int get_string_hash(const char *s)$/;"	f	file:
get_supported_rates	pcm/pcm_rate_linear.c	/^static int get_supported_rates(ATTRIBUTE_UNUSED void *rate,$/;"	f	file:
get_switch_ops	mixer/simple_none.c	/^static int get_switch_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
get_tlv_info	control/tlv.c	/^static int get_tlv_info(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f	file:
get_tmp_name	pcm/pcm_direct.c	/^static int get_tmp_name(char *filename, size_t size)$/;"	f	file:
get_volume_ops	mixer/simple_none.c	/^static int get_volume_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
getch	input.c	/^	int (*getch)(snd_input_t *input);$/;"	m	struct:_snd_input_ops	file:
getput_idx	pcm/pcm_adpcm.c	/^	unsigned int getput_idx;$/;"	m	struct:__anon52	file:
getput_idx	pcm/pcm_alaw.c	/^	unsigned int getput_idx;$/;"	m	struct:__anon10	file:
getput_idx	pcm/pcm_iec958.c	/^	unsigned int getput_idx;$/;"	m	struct:snd_pcm_iec958	file:
getput_idx	pcm/pcm_mulaw.c	/^	unsigned int getput_idx;$/;"	m	struct:__anon45	file:
gets	input.c	/^	char *(*(gets))(snd_input_t *input, char *str, size_t size);$/;"	m	struct:_snd_input_ops	file:
gets_labels	pcm/plugin_ops.h	/^static void *const gets_labels[4 * 2 * 2] = {$/;"	v
gettimestamp	pcm/pcm_local.h	/^static inline void gettimestamp(snd_htimestamp_t *tstamp, int monotonic)$/;"	f
gettoken	alisp/alisp.c	/^static int gettoken(struct alisp_instance *instance)$/;"	f	file:
getu_labels	pcm/plugin_ops.h	/^static void *const getu_labels[4 * 2 * 2] = {$/;"	v
handle	pcm/pcm_ladspa.c	/^	LADSPA_Handle *handle;$/;"	m	struct:snd_pcm_ladspa_instance	file:
handle	rawmidi/rawmidi_virt.c	/^	snd_seq_t *handle;$/;"	m	struct:__anon60	file:
hcreate_r	compat/hsearch_r.c	/^hcreate_r (nel, htab)$/;"	f
hctl	control/control_local.h	/^	snd_hctl_t *hctl;		\/* associated handle *\/$/;"	m	struct:_snd_hctl_elem
hctl	mixer/mixer.c	/^	snd_hctl_t *hctl;$/;"	m	struct:_snd_mixer_slave	file:
hctl	mixer/simple_abst.c	/^	snd_hctl_t *hctl;$/;"	m	struct:_class_priv	file:
hctl_compare	control/hcontrol.c	/^static int hctl_compare(const void *a, const void *b) {$/;"	f	file:
hctl_elem_event_handler	mixer/mixer.c	/^static int hctl_elem_event_handler(snd_hctl_elem_t *helem,$/;"	f	file:
hctl_event_handler	mixer/mixer.c	/^static int hctl_event_handler(snd_hctl_t *hctl, unsigned int mask,$/;"	f	file:
hdestroy_r	compat/hsearch_r.c	/^hdestroy_r (htab)$/;"	f
helems	mixer/mixer_local.h	/^	bag_t helems;$/;"	m	struct:_snd_mixer_elem
hint_list	control/namehint.c	/^struct hint_list {$/;"	s	file:
hint_list_add	control/namehint.c	/^static int hint_list_add(struct hint_list *list,$/;"	f	file:
hook_add_dlobj	pcm/pcm_hooks.c	/^static int hook_add_dlobj(snd_pcm_t *pcm, void *dlobj)$/;"	f	file:
hook_remove_dlobj	pcm/pcm_hooks.c	/^static void hook_remove_dlobj(struct snd_pcm_hook_dllist *dl)$/;"	f	file:
hooks	pcm/pcm_hooks.c	/^	struct list_head hooks[SND_PCM_HOOK_TYPE_LAST + 1];$/;"	m	struct:__anon37	typeref:struct:__anon37::list_head	file:
hop	conf.c	/^	int hop;$/;"	m	struct:_snd_config	file:
hsearch_r	compat/hsearch_r.c	/^hsearch_r (item, action, retval, htab)$/;"	f
htimestamp	pcm/pcm_local.h	/^	int (*htimestamp)(snd_pcm_t *pcm, snd_pcm_uframes_t *avail, snd_htimestamp_t *tstamp);$/;"	m	struct:__anon51
hw	pcm/pcm_direct.h	/^	} hw;$/;"	m	struct:__anon27	typeref:struct:__anon27::__anon28
hw	pcm/pcm_local.h	/^	snd_pcm_rbptr_t hw;$/;"	m	struct:_snd_pcm
hw_fd	pcm/pcm_direct.h	/^	int hw_fd;			\/* hardware file descriptor *\/$/;"	m	struct:snd_pcm_direct
hw_flags	pcm/pcm_direct.h	/^		unsigned int hw_flags;$/;"	m	struct:__anon27::__anon29
hw_flags	pcm/pcm_local.h	/^	unsigned int hw_flags;		\/* actual hardware flags *\/$/;"	m	struct:_snd_pcm
hw_free	pcm/pcm_local.h	/^	int (*hw_free)(snd_pcm_t *pcm);$/;"	m	struct:__anon50
hw_is_interval	pcm/pcm_params.c	/^static inline int hw_is_interval(snd_pcm_hw_param_t var)$/;"	f	file:
hw_is_mask	pcm/pcm_params.c	/^static inline int hw_is_mask(snd_pcm_hw_param_t var)$/;"	f	file:
hw_link	pcm/pcm_hw.c	/^static int hw_link(snd_pcm_t *pcm1, snd_pcm_t *pcm2)$/;"	f	file:
hw_param_interval	pcm/pcm_direct.c	/^static inline snd_interval_t *hw_param_interval(snd_pcm_hw_params_t *params,$/;"	f	file:
hw_param_interval	pcm/pcm_ext_parm.h	/^static inline snd_interval_t *hw_param_interval(snd_pcm_hw_params_t *params,$/;"	f
hw_param_interval	pcm/pcm_params.c	84;"	d	file:
hw_param_interval_c	pcm/pcm_params.c	88;"	d	file:
hw_param_interval_refine_minmax	pcm/pcm_direct.c	/^static int hw_param_interval_refine_minmax(snd_pcm_hw_params_t *params,$/;"	f	file:
hw_param_interval_refine_one	pcm/pcm_direct.c	/^static int hw_param_interval_refine_one(snd_pcm_hw_params_t *params,$/;"	f	file:
hw_param_mask	pcm/pcm_direct.c	/^static inline snd_mask_t *hw_param_mask(snd_pcm_hw_params_t *params,$/;"	f	file:
hw_param_mask	pcm/pcm_ext_parm.h	/^static inline snd_mask_t *hw_param_mask(snd_pcm_hw_params_t *params,$/;"	f
hw_param_mask	pcm/pcm_params.c	81;"	d	file:
hw_param_mask_c	pcm/pcm_params.c	87;"	d	file:
hw_params	pcm/pcm_local.h	/^	int (*hw_params)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params);$/;"	m	struct:__anon50
hw_params_call	pcm/pcm_hw.c	/^static inline int hw_params_call(snd_pcm_hw_t *pcm_hw, snd_pcm_hw_params_t *params)$/;"	f	file:
hw_params_type	pcm/pcm_extplug.c	/^static const int hw_params_type[SND_PCM_EXTPLUG_HW_PARAMS] = {$/;"	v	file:
hw_params_type	pcm/pcm_ioplug.c	/^static const int hw_params_type[SND_PCM_IOPLUG_HW_PARAMS] = {$/;"	v	file:
hw_ptr	pcm/pcm_direct.h	/^	snd_pcm_uframes_t hw_ptr;$/;"	m	struct:snd_pcm_direct
hw_ptr	pcm/pcm_hw.c	/^	snd_pcm_uframes_t hw_ptr;$/;"	m	struct:__anon36	file:
hw_ptr	pcm/pcm_mmap_emul.c	/^	snd_pcm_uframes_t hw_ptr;$/;"	m	struct:__anon13	file:
hw_ptr	pcm/pcm_null.c	/^	snd_pcm_uframes_t hw_ptr;$/;"	m	struct:__anon26	file:
hw_ptr	pcm/pcm_plugin.h	/^	snd_pcm_uframes_t appl_ptr, hw_ptr;$/;"	m	struct:__anon53
hw_ptr	pcm/pcm_rate.c	/^	snd_pcm_uframes_t appl_ptr, hw_ptr;$/;"	m	struct:_snd_pcm_rate	file:
hw_ptr	pcm/pcm_share.c	/^	snd_pcm_uframes_t hw_ptr;$/;"	m	struct:__anon24	file:
hw_ptr	pcm/pcm_share.c	/^	snd_pcm_uframes_t hw_ptr;$/;"	m	struct:__anon25	file:
hw_refine	pcm/pcm_local.h	/^	int (*hw_refine)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params);$/;"	m	struct:__anon50
hw_refine_call	pcm/pcm_hw.c	/^static inline int hw_refine_call(snd_pcm_hw_t *pcm_hw, snd_pcm_hw_params_t *params)$/;"	f	file:
hwdep_info	control/control_local.h	/^	int (*hwdep_info)(snd_ctl_t *handle, snd_hwdep_info_t * info);$/;"	m	struct:_snd_ctl_ops
hwdep_next_device	control/control_local.h	/^	int (*hwdep_next_device)(snd_ctl_t *handle, int *device);$/;"	m	struct:_snd_ctl_ops
hweight32	pcm/mask_inline.h	/^MASK_INLINE unsigned int hweight32(u_int32_t v)$/;"	f
hwsync	pcm/pcm_local.h	/^	int (*hwsync)(snd_pcm_t *pcm);$/;"	m	struct:__anon51
i	alisp/alisp_local.h	/^		long	i;$/;"	m	union:alisp_object::__anon1
i	pcm/pcm_local.h	/^	int32_t i;$/;"	m	union:snd_tmp_float
i	pcm/pcm_softvol.c	/^	int i;$/;"	m	union:__anon44	file:
i386_dmix_supported_format	pcm/pcm_dmix_i386.c	77;"	d	file:
ibuf	seq/seq_local.h	/^	snd_seq_event_t *ibuf;	\/* input buffer *\/$/;"	m	struct:_snd_seq
ibuflen	seq/seq_local.h	/^	size_t ibuflen;		\/* queued length *\/$/;"	m	struct:_snd_seq
ibufptr	seq/seq_local.h	/^	size_t ibufptr;		\/* current pointer of input buffer *\/$/;"	m	struct:_snd_seq
ibufsize	seq/seq_local.h	/^	size_t ibufsize;		\/* input buffer size *\/$/;"	m	struct:_snd_seq
id	conf.c	/^	char *id;$/;"	m	struct:_snd_config	file:
id	control/control_local.h	/^	snd_ctl_elem_id_t id; 		\/* must be always on top *\/$/;"	m	struct:_snd_hctl_elem
id	control/setup.c	/^	snd_ctl_elem_id_t *id;$/;"	m	struct:__anon6	file:
id_print	conf.c	/^static void id_print(snd_config_t *n, snd_output_t *out, unsigned int joins)$/;"	f	file:
idx	conf.c	/^	size_t idx;$/;"	m	struct:local_string	file:
iec958_f	pcm/pcm_iec958.c	/^typedef void (*iec958_f)(snd_pcm_iec958_t *iec,$/;"	t	file:
iec958_parity	pcm/pcm_iec958.c	/^static unsigned int iec958_parity(unsigned int data)$/;"	f	file:
iec958_subframe	pcm/pcm_iec958.c	/^static inline u_int32_t iec958_subframe(snd_pcm_iec958_t *iec, u_int32_t data, int channel)$/;"	f	file:
iec958_to_s32	pcm/pcm_iec958.c	/^static inline int32_t iec958_to_s32(snd_pcm_iec958_t *iec, u_int32_t data)$/;"	f	file:
iface	control/namehint.c	/^	snd_ctl_elem_iface_t iface;$/;"	m	struct:hint_list	file:
ifd	pcm/pcm_file.c	/^	int ifd;$/;"	m	struct:__anon11	file:
ifname	pcm/pcm_file.c	/^	char *ifname;$/;"	m	struct:__anon11	file:
in	alisp/alisp_local.h	/^	snd_input_t *in;$/;"	m	struct:alisp_instance
in	conf.c	/^	snd_input_t *in;$/;"	m	struct:filedesc	file:
in_buf_ofs	rawmidi/rawmidi_virt.c	/^	int in_buf_ofs;$/;"	m	struct:__anon60	file:
in_buf_ptr	rawmidi/rawmidi_virt.c	/^	char *in_buf_ptr;$/;"	m	struct:__anon60	file:
in_buf_size	rawmidi/rawmidi_virt.c	/^	int in_buf_size;$/;"	m	struct:__anon60	file:
in_event	rawmidi/rawmidi_virt.c	/^	snd_seq_event_t *in_event;$/;"	m	struct:__anon60	file:
in_tmp_buf	rawmidi/rawmidi_virt.c	/^	char in_tmp_buf[16];$/;"	m	struct:__anon60	file:
inactive	mixer/simple_none.c	/^	unsigned int inactive: 1;$/;"	m	struct:_selem_ctl	file:
incref_object	alisp/alisp.c	/^static struct alisp_object * incref_object(struct alisp_instance *instance ATTRIBUTE_UNUSED, struct alisp_object * p)$/;"	f	file:
incref_tree	alisp/alisp.c	/^static struct alisp_object * incref_tree(struct alisp_instance *instance, struct alisp_object * p)$/;"	f	file:
index	mixer/mixer_local.h	/^	unsigned int index;$/;"	m	struct:_snd_mixer_selem_id
index	pcm/pcm_meter.c	/^	unsigned int index;$/;"	m	struct:_snd_pcm_scope_s16	file:
info	control/namehint.c	/^	snd_ctl_card_info_t *info;	$/;"	m	struct:hint_list	file:
info	control/setup.c	/^	snd_ctl_elem_info_t *info;$/;"	m	struct:__anon6	file:
info	hwdep/hwdep_local.h	/^	int (*info)(snd_hwdep_t *hwdep, snd_hwdep_info_t *info);$/;"	m	struct:__anon9
info	mixer/simple_abst.c	/^	snd_ctl_card_info_t *info;$/;"	m	struct:_class_priv	file:
info	pcm/pcm_direct.h	/^		unsigned int info;$/;"	m	struct:__anon27::__anon29
info	pcm/pcm_hw.c	/^	unsigned int info;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
info	pcm/pcm_local.h	/^	int (*info)(snd_pcm_t *pcm, snd_pcm_info_t *info);$/;"	m	struct:__anon50
info	pcm/pcm_local.h	/^	unsigned int info;		\/* Info for returned setup *\/$/;"	m	struct:_snd_pcm
info	pcm/pcm_rate.c	/^	snd_pcm_rate_info_t info;$/;"	m	struct:_snd_pcm_rate	file:
info	rawmidi/rawmidi_local.h	/^	int (*info)(snd_rawmidi_t *rawmidi, snd_rawmidi_info_t *info);$/;"	m	struct:__anon61
info	timer/timer_local.h	/^	int (*info)(snd_timer_query_t *timer, snd_timer_ginfo_t *info);$/;"	m	struct:__anon66
info	timer/timer_local.h	/^	int (*info)(snd_timer_t *timer, snd_timer_info_t *info);$/;"	m	struct:__anon65
init	pcm/pcm_plugin.h	/^	int (*init)(snd_pcm_t *pcm);$/;"	m	struct:__anon53
init_db_range	mixer/simple_none.c	/^static int init_db_range(snd_hctl_elem_t *ctl, struct selem_str *rec)$/;"	f	file:
init_lex	alisp/alisp.c	/^static int init_lex(struct alisp_instance *instance)$/;"	f	file:
init_local_string	conf.c	/^static void init_local_string(struct local_string *s)$/;"	f	file:
ino	conf.c	/^	ino_t ino;$/;"	m	struct:finfo	file:
input	pcm/pcm_ladspa.c	/^	snd_pcm_ladspa_eps_t input;$/;"	m	struct:snd_pcm_ladspa_instance	file:
input	pcm/pcm_ladspa.c	/^	snd_pcm_ladspa_plugin_io_t input;$/;"	m	struct:__anon58	file:
input_frames	pcm/pcm_rate_linear.c	/^static snd_pcm_uframes_t input_frames(void *obj, snd_pcm_uframes_t frames)$/;"	f	file:
input_t	conf.c	/^} input_t;$/;"	t	typeref:struct:__anon5	file:
instances	pcm/pcm_ladspa.c	/^	struct list_head instances;		\/* one LADSPA plugin might be used multiple times *\/$/;"	m	struct:__anon58	typeref:struct:__anon58::list_head	file:
instantiate	pcm/ladspa.h	/^  LADSPA_Handle (*instantiate)(const struct _LADSPA_Descriptor * Descriptor,$/;"	m	struct:_LADSPA_Descriptor
int32_idx	pcm/pcm_lfloat.c	/^	unsigned int int32_idx;$/;"	m	struct:__anon16	file:
int_index	control/tlv.c	40;"	d	file:
integer	conf.c	/^		long integer;$/;"	m	union:_snd_config::__anon3	file:
integer	pcm/pcm_ext_parm.h	/^	unsigned int integer: 1;$/;"	m	struct:snd_ext_parm
integer64	conf.c	/^		long long integer64;$/;"	m	union:_snd_config::__anon3	file:
interleaved	pcm/pcm_direct.h	/^	int interleaved;	 	\/* we have interleaved buffer *\/$/;"	m	struct:snd_pcm_direct
intervals	pcm/pcm_hw.c	/^	struct sndrv_interval intervals[SNDRV_PCM_HW_PARAM_TICK_TIME -$/;"	m	struct:sndrv_pcm_hw_params_old	typeref:struct:sndrv_pcm_hw_params_old::sndrv_interval	file:
intrinsic	alisp/alisp.c	/^struct intrinsic {$/;"	s	file:
intrinsics	alisp/alisp.c	/^static const struct intrinsic intrinsics[] = {$/;"	v	typeref:struct:intrinsic	file:
ioctl	hwdep/hwdep_local.h	/^	int (*ioctl)(snd_hwdep_t *hwdep, unsigned int request, void * arg);$/;"	m	struct:__anon9
ioplug_priv_t	pcm/pcm_ioplug.c	/^} ioplug_priv_t;$/;"	t	typeref:struct:snd_pcm_ioplug_priv	file:
ioplug_priv_transfer_areas	pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t ioplug_priv_transfer_areas(snd_pcm_t *pcm,$/;"	f	file:
ipc_gid	pcm/pcm_direct.h	/^	int ipc_gid;			\/* IPC socket gid *\/$/;"	m	struct:snd_pcm_direct
ipc_gid	pcm/pcm_direct.h	/^	int ipc_gid;$/;"	m	struct:snd_pcm_direct_open_conf
ipc_key	pcm/pcm_direct.h	/^	key_t ipc_key;			\/* IPC key for semaphore and memory *\/$/;"	m	struct:snd_pcm_direct
ipc_key	pcm/pcm_direct.h	/^	key_t ipc_key;$/;"	m	struct:snd_pcm_direct_open_conf
ipc_perm	pcm/pcm_direct.h	/^	mode_t ipc_perm;		\/* IPC socket permissions *\/$/;"	m	struct:snd_pcm_direct
ipc_perm	pcm/pcm_direct.h	/^	mode_t ipc_perm;$/;"	m	struct:snd_pcm_direct_open_conf
is_builtin_plugin	pcm/pcm_rate.c	/^static int is_builtin_plugin(const char *type)$/;"	f	file:
is_mask_type	pcm/pcm_extplug.c	53;"	d	file:
is_ops	mixer/simple_none.c	/^static int is_ops(snd_mixer_elem_t *elem, int dir, int cmd, int val)$/;"	f	file:
isprime	compat/hsearch_r.c	/^isprime (unsigned int number)$/;"	f	file:
join	conf.c	/^			int join;$/;"	m	struct:_snd_config::__anon3::__anon4	file:
key	alisp/alisp_snd.c	/^	const char *key;$/;"	m	struct:flags	file:
l	pcm/pcm_local.h	/^	int64_t l;$/;"	m	union:snd_tmp_double
last_appl_ptr	pcm/pcm_direct.h	/^	snd_pcm_uframes_t last_appl_ptr;$/;"	m	struct:snd_pcm_direct
last_commit_ptr	pcm/pcm_rate.c	/^	snd_pcm_uframes_t last_commit_ptr;$/;"	m	struct:_snd_pcm_rate	file:
last_hw	pcm/pcm_ioplug.c	/^	unsigned int last_hw;$/;"	m	struct:snd_pcm_ioplug_priv	file:
lastcmd	seq/seq_midi_event.c	/^	unsigned char lastcmd;$/;"	m	struct:snd_midi_event	file:
ld2	pcm/mask_inline.h	/^MASK_INLINE unsigned int ld2(u_int32_t v)$/;"	f
level	pcm/scopes/level.c	/^	int16_t level;$/;"	m	struct:_snd_pcm_scope_level_channel	file:
level_close	pcm/scopes/level.c	/^static void level_close(snd_pcm_scope_t *scope)$/;"	f	file:
level_disable	pcm/scopes/level.c	/^static void level_disable(snd_pcm_scope_t *scope)$/;"	f	file:
level_enable	pcm/scopes/level.c	/^static int level_enable(snd_pcm_scope_t *scope)$/;"	f	file:
level_ops	pcm/scopes/level.c	/^snd_pcm_scope_ops_t level_ops = {$/;"	v
level_reset	pcm/scopes/level.c	/^static void level_reset(snd_pcm_scope_t *scope)$/;"	f	file:
level_start	pcm/scopes/level.c	/^static void level_start(snd_pcm_scope_t *scope ATTRIBUTE_UNUSED)$/;"	f	file:
level_stop	pcm/scopes/level.c	/^static void level_stop(snd_pcm_scope_t *scope)$/;"	f	file:
level_update	pcm/scopes/level.c	/^static void level_update(snd_pcm_scope_t *scope)$/;"	f	file:
lex_buf	alisp/alisp_local.h	/^	int lex_buf[ALISP_LEX_BUF_MAX];$/;"	m	struct:alisp_instance
lex_bufp	alisp/alisp_local.h	/^	int *lex_bufp;$/;"	m	struct:alisp_instance
line	conf.c	/^	unsigned int line, column;$/;"	m	struct:filedesc	file:
linear	pcm/pcm_rate_linear.c	/^int SND_PCM_RATE_PLUGIN_ENTRY(linear) (ATTRIBUTE_UNUSED unsigned int version,$/;"	f
linear24_formats	pcm/pcm_misc.c	/^static const int linear24_formats[3][2][2] = {$/;"	v	file:
linear_adjust_pitch	pcm/pcm_rate_linear.c	/^static int linear_adjust_pitch(void *obj, snd_pcm_rate_info_t *info)$/;"	f	file:
linear_close	pcm/pcm_rate_linear.c	/^static void linear_close(void *obj)$/;"	f	file:
linear_convert	pcm/pcm_rate_linear.c	/^static void linear_convert(void *obj, $/;"	f	file:
linear_dump	pcm/pcm_rate_linear.c	/^static void linear_dump(ATTRIBUTE_UNUSED void *rate, snd_output_t *out)$/;"	f	file:
linear_expand	pcm/pcm_rate_linear.c	/^static void linear_expand(struct rate_linear *rate,$/;"	f	file:
linear_expand_s16	pcm/pcm_rate_linear.c	/^static void linear_expand_s16(struct rate_linear *rate,$/;"	f	file:
linear_format_widths	pcm/pcm_plug.c	/^static const char linear_format_widths[32] = {$/;"	v	file:
linear_formats	pcm/pcm_misc.c	/^static const int linear_formats[4][2][2] = {$/;"	v	file:
linear_free	pcm/pcm_rate_linear.c	/^static void linear_free(void *obj)$/;"	f	file:
linear_init	pcm/pcm_rate_linear.c	/^static int linear_init(void *obj, snd_pcm_rate_info_t *info)$/;"	f	file:
linear_ops	pcm/pcm_rate_linear.c	/^static const snd_pcm_rate_ops_t linear_ops = {$/;"	v	file:
linear_preferred_formats	pcm/pcm_plug.c	/^static const snd_pcm_format_t linear_preferred_formats[] = {$/;"	v	file:
linear_reset	pcm/pcm_rate_linear.c	/^static void linear_reset(void *obj)$/;"	f	file:
linear_shrink	pcm/pcm_rate_linear.c	/^static void linear_shrink(struct rate_linear *rate,$/;"	f	file:
linear_shrink_s16	pcm/pcm_rate_linear.c	/^static void linear_shrink_s16(struct rate_linear *rate,$/;"	f	file:
lineno	alisp/alisp_local.h	/^	int lineno;$/;"	m	struct:alisp_instance
link	pcm/pcm_local.h	/^	int (*link)(snd_pcm_t *pcm1, snd_pcm_t *pcm2);$/;"	m	struct:__anon51
link_dst	pcm/pcm_local.h	/^	snd_pcm_t **link_dst;$/;"	m	struct:_snd_pcm_rbptr
link_dst_count	pcm/pcm_local.h	/^	int link_dst_count;$/;"	m	struct:_snd_pcm_rbptr
link_slaves	pcm/pcm_local.h	/^	int (*link_slaves)(snd_pcm_t *pcm, snd_pcm_t *master);$/;"	m	struct:__anon51
linked	pcm/pcm_multi.c	/^	snd_pcm_t *linked;$/;"	m	struct:__anon39	file:
lisp_debug	alisp/alisp.c	/^static void lisp_debug(struct alisp_instance *instance, const char *fmt, ...)$/;"	f	file:
lisp_error	alisp/alisp.c	/^static void lisp_error(struct alisp_instance *instance, const char *fmt, ...)$/;"	f	file:
lisp_verbose	alisp/alisp.c	/^static void lisp_verbose(struct alisp_instance *instance, const char *fmt, ...)$/;"	f	file:
lisp_warn	alisp/alisp.c	/^static void lisp_warn(struct alisp_instance *instance, const char *fmt, ...)$/;"	f	file:
list	alisp/alisp_local.h	/^	struct list_head list;$/;"	m	struct:alisp_object	typeref:struct:alisp_object::list_head
list	alisp/alisp_local.h	/^	struct list_head list;$/;"	m	struct:alisp_object_pair	typeref:struct:alisp_object_pair::list_head
list	conf.c	/^	struct list_head list;$/;"	m	struct:_snd_config	typeref:struct:_snd_config::list_head	file:
list	control/control_local.h	/^	struct list_head list;		\/* links for list of all helems *\/$/;"	m	struct:_snd_hctl_elem	typeref:struct:_snd_hctl_elem::list_head
list	control/namehint.c	/^	char **list;$/;"	m	struct:hint_list	file:
list	control/setup.c	/^	struct list_head list;$/;"	m	struct:__anon6	typeref:struct:__anon6::list_head	file:
list	dlmisc.c	/^	struct list_head list;$/;"	m	struct:dlobj_cache	typeref:struct:dlobj_cache::list_head	file:
list	mixer/mixer.c	/^	struct list_head list;$/;"	m	struct:_snd_mixer_slave	typeref:struct:_snd_mixer_slave::list_head	file:
list	mixer/mixer_local.h	/^	struct list_head list;		\/* links for list of all elems *\/$/;"	m	struct:_snd_mixer_elem	typeref:struct:_snd_mixer_elem::list_head
list	mixer/mixer_local.h	/^	struct list_head list;$/;"	m	struct:_bag1	typeref:struct:_bag1::list_head
list	mixer/mixer_local.h	/^	struct list_head list;$/;"	m	struct:_snd_mixer_class	typeref:struct:_snd_mixer_class::list_head
list	pcm/pcm_ext_parm.h	/^	unsigned int *list;$/;"	m	struct:snd_ext_parm
list	pcm/pcm_hooks.c	/^	struct list_head list;$/;"	m	struct:_snd_pcm_hook	typeref:struct:_snd_pcm_hook::list_head	file:
list	pcm/pcm_hooks.c	/^	struct list_head list;$/;"	m	struct:snd_pcm_hook_dllist	typeref:struct:snd_pcm_hook_dllist::list_head	file:
list	pcm/pcm_ladspa.c	/^	struct list_head list;$/;"	m	struct:__anon58	typeref:struct:__anon58::list_head	file:
list	pcm/pcm_ladspa.c	/^	struct list_head list;$/;"	m	struct:snd_pcm_ladspa_instance	typeref:struct:snd_pcm_ladspa_instance::list_head	file:
list	pcm/pcm_meter.c	/^	struct list_head list;$/;"	m	struct:_snd_pcm_scope	typeref:struct:_snd_pcm_scope::list_head	file:
list	pcm/pcm_share.c	/^	struct list_head list;$/;"	m	struct:__anon24	typeref:struct:__anon24::list_head	file:
list	pcm/pcm_share.c	/^	struct list_head list;$/;"	m	struct:__anon25	typeref:struct:__anon25::list_head	file:
list	shmarea.c	/^	struct list_head list;$/;"	m	struct:snd_shm_area	typeref:struct:snd_shm_area::list_head	file:
load_defaults	conf.c	/^static int load_defaults(snd_config_t *subs, snd_config_t *defs)$/;"	f	file:
local_string	conf.c	/^struct local_string {$/;"	s	file:
lock	control/setup.c	/^	unsigned int lock: 1;$/;"	m	struct:__anon6	file:
longname	mixer/simple_none.c	/^	const char *longname;$/;"	m	struct:mixer_name_table	file:
m_data	pcm/pcm_ladspa.c	/^	LADSPA_Data **m_data;$/;"	m	struct:__anon56	file:
magic	pcm/pcm_direct.h	/^	unsigned int magic;			\/* magic number *\/$/;"	m	struct:__anon27
make_local_socket	control/control_shm.c	/^static int make_local_socket(const char *filename)$/;"	f	file:
make_local_socket	pcm/pcm_direct.c	/^static int make_local_socket(const char *filename, int server, mode_t ipc_perm, int ipc_gid)$/;"	f	file:
make_local_socket	pcm/pcm_shm.c	/^static int make_local_socket(const char *filename)$/;"	f	file:
mask	alisp/alisp_snd.c	/^	unsigned int mask;$/;"	m	struct:flags	file:
mask	control/setup.c	/^	snd_ctl_elem_value_t *mask;$/;"	m	struct:__anon6	file:
masks	pcm/pcm_hw.c	/^	unsigned int masks[SNDRV_PCM_HW_PARAM_SUBFORMAT -$/;"	m	struct:sndrv_pcm_hw_params_old	file:
master	pcm/pcm_local.h	/^	snd_pcm_t *master;$/;"	m	struct:_snd_pcm_rbptr
master_slave	pcm/pcm_multi.c	/^	unsigned int master_slave;$/;"	m	struct:__anon41	file:
match	mixer/simple_abst.c	/^static int match(snd_mixer_class_t *class, const char *lib, const char *searchl)$/;"	f	file:
max	mixer/simple_none.c	/^		long min, max;$/;"	m	struct:_selem_none::selem_str	file:
max	mixer/simple_none.c	/^	long min, max;$/;"	m	struct:_selem_ctl	file:
max	pcm/pcm_ext_parm.h	/^	unsigned int min, max;$/;"	m	struct:snd_ext_parm
max_dB	pcm/pcm_softvol.c	/^	double max_dB;$/;"	m	struct:__anon43	file:
max_objs	alisp/alisp_local.h	/^	long max_objs;$/;"	m	struct:alisp_instance
max_periods	pcm/pcm_direct.h	/^	int max_periods;		\/* max periods (-1 = fixed periods, 0 = max buffer size) *\/$/;"	m	struct:snd_pcm_direct
max_periods	pcm/pcm_direct.h	/^	int max_periods;$/;"	m	struct:snd_pcm_direct_open_conf
max_val	pcm/pcm_softvol.c	/^	unsigned int max_val;     \/* max index *\/$/;"	m	struct:__anon43	file:
maxval	control/tlv.c	/^	long minval, maxval;$/;"	m	struct:tlv_info	file:
midi_event	rawmidi/rawmidi_virt.c	/^	snd_midi_event_t *midi_event;$/;"	m	struct:__anon60	file:
min	mixer/simple_none.c	/^		long min, max;$/;"	m	struct:_selem_none::selem_str	file:
min	mixer/simple_none.c	/^	long min, max;$/;"	m	struct:_selem_ctl	file:
min	pcm/pcm_ext_parm.h	/^	unsigned int min, max;$/;"	m	struct:snd_ext_parm
min_align	pcm/pcm_local.h	/^	snd_pcm_uframes_t min_align;$/;"	m	struct:_snd_pcm
min_dB	pcm/pcm_softvol.c	/^	double min_dB;$/;"	m	struct:__anon43	file:
minval	control/tlv.c	/^	long minval, maxval;$/;"	m	struct:tlv_info	file:
mix_areas	pcm/pcm_dmix.c	/^static void mix_areas(snd_pcm_direct_t *dmix,$/;"	f	file:
mix_areas_16	pcm/pcm_direct.h	/^			mix_areas_16_t *mix_areas_16;$/;"	m	struct:snd_pcm_direct::__anon32::__anon33
mix_areas_16	pcm/pcm_dmix_generic.c	/^static void mix_areas_16(unsigned int size,$/;"	f	file:
mix_areas_16_t	pcm/pcm_direct.h	/^typedef void (mix_areas_16_t)(unsigned int size,$/;"	t
mix_areas_24	pcm/pcm_direct.h	/^			mix_areas_24_t *mix_areas_24;$/;"	m	struct:snd_pcm_direct::__anon32::__anon33
mix_areas_24_t	pcm/pcm_direct.h	/^typedef void (mix_areas_24_t)(unsigned int size,$/;"	t
mix_areas_32	pcm/pcm_direct.h	/^			mix_areas_32_t *mix_areas_32;$/;"	m	struct:snd_pcm_direct::__anon32::__anon33
mix_areas_32	pcm/pcm_dmix_generic.c	/^static void mix_areas_32(unsigned int size,$/;"	f	file:
mix_areas_32_t	pcm/pcm_direct.h	/^typedef void (mix_areas_32_t)(unsigned int size,$/;"	t
mix_areas_t	pcm/pcm_direct.h	/^typedef void (mix_areas_t)(unsigned int size,$/;"	t
mix_areas_u8	pcm/pcm_direct.h	/^			mix_areas_u8_t *mix_areas_u8;$/;"	m	struct:snd_pcm_direct::__anon32::__anon33
mix_areas_u8_t	pcm/pcm_direct.h	/^typedef void (mix_areas_u8_t)(unsigned int size,$/;"	t
mix_select_callbacks	pcm/pcm_dmix.c	149;"	d	file:
mix_select_callbacks	pcm/pcm_dmix_generic.c	/^static void mix_select_callbacks(snd_pcm_direct_t *dmix)$/;"	f	file:
mix_select_callbacks	pcm/pcm_dmix_i386.c	/^static void mix_select_callbacks(snd_pcm_direct_t *dmix)$/;"	f	file:
mix_select_callbacks	pcm/pcm_dmix_x86_64.c	/^static void mix_select_callbacks(snd_pcm_direct_t *dmix)$/;"	f	file:
mixer	mixer/mixer_local.h	/^	snd_mixer_t *mixer;$/;"	m	struct:_snd_mixer_class
mixer_compare	mixer/mixer.c	/^static int mixer_compare(const void *a, const void *b)$/;"	f	file:
mixer_name_table	mixer/simple_none.c	/^static const struct mixer_name_table {$/;"	s	file:
mmap	pcm/pcm_local.h	/^		} mmap;$/;"	m	union:_snd_pcm_channel_info::__anon47	typeref:struct:_snd_pcm_channel_info::__anon47::__anon49
mmap	pcm/pcm_local.h	/^	int (*mmap)(snd_pcm_t *pcm);$/;"	m	struct:__anon50
mmap_channels	pcm/pcm_local.h	/^	snd_pcm_channel_info_t *mmap_channels;$/;"	m	struct:_snd_pcm
mmap_commit	pcm/pcm_local.h	/^	snd_pcm_sframes_t (*mmap_commit)(snd_pcm_t *pcm, snd_pcm_uframes_t offset, snd_pcm_uframes_t size);$/;"	m	struct:__anon51
mmap_control	pcm/pcm_hw.c	/^	struct sndrv_pcm_mmap_control *mmap_control;$/;"	m	struct:__anon36	typeref:struct:__anon36::sndrv_pcm_mmap_control	file:
mmap_emul	pcm/pcm_mmap_emul.c	/^	unsigned int mmap_emul :1;$/;"	m	struct:__anon13	file:
mmap_emul_t	pcm/pcm_mmap_emul.c	/^} mmap_emul_t;$/;"	t	typeref:struct:__anon13	file:
mmap_rw	pcm/pcm_local.h	/^	unsigned int mmap_rw: 1;	\/* use always mmapped buffer *\/$/;"	m	struct:_snd_pcm
mmap_shadow	pcm/pcm_local.h	/^	unsigned int mmap_shadow: 1;	\/* don't call actual mmap,$/;"	m	struct:_snd_pcm
mmap_status	pcm/pcm_hw.c	/^	volatile struct sndrv_pcm_mmap_status * mmap_status;$/;"	m	struct:__anon36	typeref:struct:__anon36::sndrv_pcm_mmap_status	file:
mode	control/setup.c	/^	int mode;$/;"	m	struct:_snd_sctl	file:
mode	hwdep/hwdep_local.h	/^	int mode;$/;"	m	struct:_snd_hwdep
mode	pcm/pcm_local.h	/^	int mode;$/;"	m	struct:_snd_pcm
mode	rawmidi/rawmidi_local.h	/^	int mode;$/;"	m	struct:_snd_rawmidi
mode	seq/seq_local.h	/^	int mode;$/;"	m	struct:_snd_seq
mode	timer/timer_local.h	/^	int mode;$/;"	m	struct:_snd_timer
mode	timer/timer_local.h	/^	int mode;$/;"	m	struct:_snd_timer_query
monotonic	pcm/pcm_direct.h	/^		unsigned int monotonic;$/;"	m	struct:__anon27::__anon29
monotonic	pcm/pcm_local.h	/^	    monotonic: 1;$/;"	m	struct:_snd_pcm
msbits	pcm/pcm_direct.h	/^		unsigned int msbits;$/;"	m	struct:__anon27::__anon29
msbits	pcm/pcm_hw.c	/^	unsigned int msbits;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
msbits	pcm/pcm_local.h	/^	unsigned int msbits;		\/* used most significant bits *\/$/;"	m	struct:_snd_pcm
mtime	conf.c	/^	time_t mtime;$/;"	m	struct:finfo	file:
mul	pcm/interval.c	/^static inline unsigned int mul(unsigned int a, unsigned int b)$/;"	f	file:
mulaw_f	pcm/pcm_mulaw.c	/^typedef void (*mulaw_f)(const snd_pcm_channel_area_t *src_areas,$/;"	t	file:
muldiv	pcm/pcm_local.h	/^static inline int muldiv(int a, int b, int c, int *r)$/;"	f
muldiv32	pcm/interval.c	/^static inline unsigned int muldiv32(unsigned int a, unsigned int b,$/;"	f	file:
muldiv_down	pcm/pcm_local.h	/^static inline int muldiv_down(int a, int b, int c)$/;"	f
muldiv_near	pcm/pcm_local.h	/^static inline int muldiv_near(int a, int b, int c)$/;"	f
munmap	pcm/pcm_local.h	/^	int (*munmap)(snd_pcm_t *pcm);$/;"	m	struct:__anon50
mutex	pcm/pcm_share.c	/^	pthread_mutex_t mutex;$/;"	m	struct:__anon24	file:
mutex_holder	pcm/pcm_share.c	/^	char *mutex_holder;$/;"	m	struct:__anon24	file:
name	alisp/alisp.c	/^	const char *name;$/;"	m	struct:intrinsic	file:
name	alisp/alisp_local.h	/^	const char *name;$/;"	m	struct:alisp_object_pair
name	alisp/alisp_snd.c	/^	const char *name;$/;"	m	struct:acall_table	file:
name	conf.c	/^	char *name;$/;"	m	struct:filedesc	file:
name	conf.c	/^	char *name;$/;"	m	struct:finfo	file:
name	control/control_local.h	/^	char *name;$/;"	m	struct:_snd_ctl
name	dlmisc.c	/^	const char *name;$/;"	m	struct:dlobj_cache	file:
name	hwdep/hwdep_local.h	/^	char *name;$/;"	m	struct:_snd_hwdep
name	mixer/mixer_local.h	/^	char name[60];$/;"	m	struct:_snd_mixer_selem_id
name	pcm/pcm_local.h	/^	char *name;$/;"	m	struct:_snd_pcm
name	pcm/pcm_meter.c	/^	char *name;$/;"	m	struct:_snd_pcm_scope	file:
name	rawmidi/rawmidi_local.h	/^	char *name;$/;"	m	struct:_snd_rawmidi
name	seq/seq_local.h	/^	char *name;$/;"	m	struct:_snd_seq
name	timer/timer_local.h	/^	char *name;$/;"	m	struct:_snd_timer
name	timer/timer_local.h	/^	char *name;$/;"	m	struct:_snd_timer_query
name_table	mixer/simple_none.c	/^} name_table[] = {$/;"	v	typeref:struct:mixer_name_table	file:
names	pcm/pcm.c	/^static const char *const names[SND_PCM_HW_PARAM_LAST_INTERVAL + 1] = {$/;"	v	file:
ndsts	pcm/pcm_route.c	/^	unsigned int ndsts;$/;"	m	struct:__anon18	file:
new_cons_pointer	alisp/alisp.c	/^static struct alisp_object * new_cons_pointer(struct alisp_instance * instance, const char *ptr_id, void *ptr)$/;"	f	file:
new_float	alisp/alisp.c	/^static struct alisp_object * new_float(struct alisp_instance *instance, double value)$/;"	f	file:
new_identifier	alisp/alisp.c	/^static struct alisp_object * new_identifier(struct alisp_instance *instance, const char *id)$/;"	f	file:
new_integer	alisp/alisp.c	/^static struct alisp_object * new_integer(struct alisp_instance *instance, long value)$/;"	f	file:
new_lexpr	alisp/alisp_snd.c	/^static struct alisp_object * new_lexpr(struct alisp_instance * instance, int err)$/;"	f	file:
new_object	alisp/alisp.c	/^static struct alisp_object * new_object(struct alisp_instance *instance, int type)$/;"	f	file:
new_pointer	alisp/alisp.c	/^static struct alisp_object * new_pointer(struct alisp_instance *instance, const void *ptr)$/;"	f	file:
new_result1	alisp/alisp_snd.c	/^static struct alisp_object * new_result1(struct alisp_instance * instance,$/;"	f	file:
new_result2	alisp/alisp_snd.c	/^static struct alisp_object * new_result2(struct alisp_instance * instance,$/;"	f	file:
new_result3	alisp/alisp_snd.c	/^static struct alisp_object * new_result3(struct alisp_instance * instance,$/;"	f	file:
new_string	alisp/alisp.c	/^static struct alisp_object * new_string(struct alisp_instance *instance, const char *str)$/;"	f	file:
next	conf.c	/^	struct filedesc *next;$/;"	m	struct:filedesc	typeref:struct:filedesc::filedesc	file:
next	pcm/pcm_ladspa.c	/^	struct snd_pcm_ladspa_instance *next;$/;"	m	struct:snd_pcm_ladspa_instance	typeref:struct:snd_pcm_ladspa_instance::snd_pcm_ladspa_instance	file:
next_device	timer/timer_local.h	/^	int (*next_device)(snd_timer_query_t *timer, snd_timer_id_t *tid);$/;"	m	struct:__anon66
next_devices	control/namehint.c	/^static const next_devices_t next_devices[] = {$/;"	v	file:
next_devices_t	control/namehint.c	/^typedef int (*next_devices_t)(snd_ctl_t *, int *);$/;"	t	file:
no_active_sensing	rawmidi/rawmidi_local.h	/^	unsigned int no_active_sensing: 1;$/;"	m	struct:_snd_rawmidi
nomem	alisp/alisp.c	/^static void nomem(void)$/;"	f	file:
nonblock	control/control_local.h	/^	int (*nonblock)(snd_ctl_t *handle, int nonblock);$/;"	m	struct:_snd_ctl_ops
nonblock	control/control_local.h	/^	int nonblock;$/;"	m	struct:_snd_ctl
nonblock	hwdep/hwdep_local.h	/^	int (*nonblock)(snd_hwdep_t *hwdep, int nonblock);$/;"	m	struct:__anon9
nonblock	pcm/pcm_local.h	/^	int (*nonblock)(snd_pcm_t *pcm, int nonblock);$/;"	m	struct:__anon50
nonblock	rawmidi/rawmidi_local.h	/^	int (*nonblock)(snd_rawmidi_t *rawmidi, int nonblock);$/;"	m	struct:__anon61
nonblock	seq/seq_local.h	/^	int (*nonblock)(snd_seq_t *seq, int nonblock);$/;"	m	struct:__anon63
nonblock	timer/timer_local.h	/^	int (*nonblock)(snd_timer_t *timer, int nonblock);$/;"	m	struct:__anon65
nonlinear_preferred_formats	pcm/pcm_plug.c	/^static const snd_pcm_format_t nonlinear_preferred_formats[] = {$/;"	v	file:
norms_labels	pcm/plugin_ops.h	/^static void *const norms_labels[4 * 2 * 4 * 2] = {$/;"	v
nostat	seq/seq_midi_event.c	/^	unsigned char nostat;$/;"	m	struct:snd_midi_event	file:
note_decode	seq/seq_midi_event.c	/^static void note_decode(const snd_seq_event_t *ev, unsigned char *buf)$/;"	f	file:
note_event	seq/seq_midi_event.c	/^static void note_event(snd_midi_event_t *dev, snd_seq_event_t *ev)$/;"	f	file:
now	pcm/pcm_meter.c	/^	snd_pcm_uframes_t now;$/;"	m	struct:_snd_pcm_meter	file:
nsrcs	pcm/pcm_route.c	/^	unsigned int nsrcs;$/;"	m	struct:snd_pcm_route_ttable_dst	file:
num_list	pcm/pcm_ext_parm.h	/^	unsigned int num_list;$/;"	m	struct:snd_ext_parm
numberof	seq/seq_midi_event.c	128;"	d	file:
obj	dlmisc.c	/^	void *obj;$/;"	m	struct:dlobj_cache	file:
obj	pcm/pcm_rate.c	/^	void *obj;$/;"	m	struct:_snd_pcm_rate	file:
obj_type_str	alisp/alisp.c	/^static const char *obj_type_str(struct alisp_object * p)$/;"	f	file:
obuf	seq/seq_local.h	/^	char *obuf;		\/* output buffer *\/$/;"	m	struct:_snd_seq
obufsize	seq/seq_local.h	/^	size_t obufsize;		\/* output buffer size *\/$/;"	m	struct:_snd_seq
obufused	seq/seq_local.h	/^	size_t obufused;		\/* output buffer used size *\/$/;"	m	struct:_snd_seq
offset	pcm/pcm_local.h	/^			off_t offset;$/;"	m	struct:_snd_pcm_channel_info::__anon47::__anon49
offset	pcm/pcm_local.h	/^	off_t offset;$/;"	m	struct:_snd_pcm_rbptr
old	control/setup.c	/^	snd_ctl_elem_value_t *old;$/;"	m	struct:__anon6	file:
old	pcm/pcm_meter.c	/^	snd_pcm_uframes_t old;$/;"	m	struct:_snd_pcm_scope_s16	file:
old	pcm/scopes/level.c	/^	snd_pcm_uframes_t old;$/;"	m	struct:_snd_pcm_scope_level	file:
old_sample	pcm/pcm_rate_linear.c	/^	int16_t *old_sample;$/;"	m	struct:rate_linear	file:
one_param_ctrl_event	seq/seq_midi_event.c	/^static void one_param_ctrl_event(snd_midi_event_t *dev, snd_seq_event_t *ev)$/;"	f	file:
one_param_decode	seq/seq_midi_event.c	/^static void one_param_decode(const snd_seq_event_t *ev, unsigned char *buf)$/;"	f	file:
one_param_event	seq/seq_midi_event.c	/^static void one_param_event(snd_midi_event_t *dev, snd_seq_event_t *ev)$/;"	f	file:
op_arg	pcm/pcm_local.h	/^	snd_pcm_t *op_arg;$/;"	m	struct:_snd_pcm
open	rawmidi/rawmidi_hw.c	/^	int open;$/;"	m	struct:__anon59	file:
open	rawmidi/rawmidi_virt.c	/^	int open;$/;"	m	struct:__anon60	file:
open_count	pcm/pcm_share.c	/^	unsigned int open_count;$/;"	m	struct:__anon24	file:
open_ctl	confmisc.c	/^static int open_ctl(long card, snd_ctl_t **ctl)$/;"	f	file:
ops	control/control_local.h	/^	const snd_ctl_ops_t *ops;$/;"	m	struct:_snd_ctl
ops	hwdep/hwdep_local.h	/^	const snd_hwdep_ops_t *ops;$/;"	m	struct:_snd_hwdep
ops	input.c	/^	const snd_input_ops_t *ops;$/;"	m	struct:_snd_input	file:
ops	output.c	/^	const snd_output_ops_t *ops;$/;"	m	struct:_snd_output	file:
ops	pcm/pcm_local.h	/^	const snd_pcm_ops_t *ops;$/;"	m	struct:_snd_pcm
ops	pcm/pcm_meter.c	/^	const snd_pcm_scope_ops_t *ops;$/;"	m	struct:_snd_pcm_scope	file:
ops	pcm/pcm_rate.c	/^	snd_pcm_rate_ops_t ops;$/;"	m	struct:_snd_pcm_rate	file:
ops	rawmidi/rawmidi_local.h	/^	const snd_rawmidi_ops_t *ops;$/;"	m	struct:_snd_rawmidi
ops	seq/seq_local.h	/^	const snd_seq_ops_t *ops;$/;"	m	struct:_snd_seq
ops	timer/timer_local.h	/^	const snd_timer_ops_t *ops;$/;"	m	struct:_snd_timer
ops	timer/timer_local.h	/^	const snd_timer_query_ops_t *ops;$/;"	m	struct:_snd_timer_query
orig_avail_min	pcm/pcm_rate.c	/^	snd_pcm_uframes_t orig_avail_min;$/;"	m	struct:_snd_pcm_rate	file:
out	alisp/alisp_local.h	/^	snd_output_t *out;$/;"	m	struct:alisp_instance
out_event	rawmidi/rawmidi_virt.c	/^	snd_seq_event_t out_event;$/;"	m	struct:__anon60	file:
output	pcm/pcm_ladspa.c	/^	snd_pcm_ladspa_eps_t output;$/;"	m	struct:snd_pcm_ladspa_instance	file:
output	pcm/pcm_ladspa.c	/^	snd_pcm_ladspa_plugin_io_t output;$/;"	m	struct:__anon58	file:
output_frames	pcm/pcm_rate_linear.c	/^static snd_pcm_uframes_t output_frames(void *obj, snd_pcm_uframes_t frames)$/;"	f	file:
page_align	pcm/pcm_mmap.c	/^size_t page_align(size_t size)$/;"	f
page_ptr	pcm/pcm_mmap.c	/^size_t page_ptr(size_t object_offset, size_t object_size, size_t *offset, size_t *mmap_offset)$/;"	f
page_size	pcm/pcm_mmap.c	/^size_t page_size(void)$/;"	f
params	pcm/pcm_extplug.c	/^	struct snd_ext_parm params[SND_PCM_EXTPLUG_HW_PARAMS];$/;"	m	struct:snd_pcm_extplug_priv	typeref:struct:snd_pcm_extplug_priv::snd_ext_parm	file:
params	pcm/pcm_ioplug.c	/^	struct snd_ext_parm params[SND_PCM_IOPLUG_HW_PARAMS];$/;"	m	struct:snd_pcm_ioplug_priv	typeref:struct:snd_pcm_ioplug_priv::snd_ext_parm	file:
params	pcm/pcm_route.c	/^	snd_pcm_route_params_t params;$/;"	m	struct:__anon21	file:
params	rawmidi/rawmidi_local.h	/^	int (*params)(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params);$/;"	m	struct:__anon61
params	timer/timer_local.h	/^	int (*params)(snd_timer_query_t *timer, snd_timer_gparams_t *info);$/;"	m	struct:__anon66
params	timer/timer_local.h	/^	int (*params)(snd_timer_t *timer, snd_timer_params_t *params);$/;"	m	struct:__anon65
pareas	pcm/pcm_rate.c	/^	snd_pcm_channel_area_t *pareas;	\/* areas for splitted period (rate pcm) *\/$/;"	m	struct:_snd_pcm_rate	file:
parent	conf.c	/^	snd_config_t *parent;$/;"	m	struct:_snd_config	file:
parse_arg	conf.c	/^static int parse_arg(const char **ptr, unsigned int *varlen, char **val)$/;"	f	file:
parse_args	conf.c	/^static int parse_args(snd_config_t *subs, const char *str, snd_config_t *defs)$/;"	f	file:
parse_array_def	conf.c	/^static int parse_array_def(snd_config_t *parent, input_t *input, int idx, int skip, int override)$/;"	f	file:
parse_array_defs	conf.c	/^static int parse_array_defs(snd_config_t *parent, input_t *input, int skip, int override)$/;"	f	file:
parse_card	confmisc.c	/^static int parse_card(snd_config_t *root, snd_config_t *src,$/;"	f	file:
parse_char	conf.c	/^static int parse_char(const char **ptr)$/;"	f	file:
parse_ctl_elem_id	alisp/alisp_snd.c	/^static int parse_ctl_elem_id(struct alisp_instance * instance,$/;"	f	file:
parse_def	conf.c	/^static int parse_def(snd_config_t *parent, input_t *input, int skip, int override)$/;"	f	file:
parse_defs	conf.c	/^static int parse_defs(snd_config_t *parent, input_t *input, int skip, int override)$/;"	f	file:
parse_form	alisp/alisp.c	/^static struct alisp_object * parse_form(struct alisp_instance *instance)$/;"	f	file:
parse_id	conf.c	/^static int parse_id(const char **ptr)$/;"	f	file:
parse_object	alisp/alisp.c	/^static struct alisp_object * parse_object(struct alisp_instance *instance, int havetoken)$/;"	f	file:
parse_quote	alisp/alisp.c	/^static inline struct alisp_object * parse_quote(struct alisp_instance *instance)$/;"	f	file:
parse_string	conf.c	/^static int parse_string(const char **ptr, char **val)$/;"	f	file:
parse_value	conf.c	/^static int parse_value(snd_config_t **_n, snd_config_t *parent, input_t *input, char **id, int skip)$/;"	f	file:
pause	pcm/pcm_local.h	/^	int (*pause)(snd_pcm_t *pcm, int enable);$/;"	m	struct:__anon51
pcm	pcm/pcm_hooks.c	/^	snd_pcm_t *pcm;$/;"	m	struct:_snd_pcm_hook	file:
pcm	pcm/pcm_meter.c	/^	snd_pcm_t *pcm;$/;"	m	struct:_snd_pcm_scope_s16	file:
pcm	pcm/pcm_multi.c	/^	snd_pcm_t *pcm;$/;"	m	struct:__anon39	file:
pcm	pcm/pcm_share.c	/^	snd_pcm_t *pcm;$/;"	m	struct:__anon24	file:
pcm	pcm/pcm_share.c	/^	snd_pcm_t *pcm;$/;"	m	struct:__anon25	file:
pcm	pcm/scopes/level.c	/^	snd_pcm_t *pcm;$/;"	m	struct:_snd_pcm_scope_level	file:
pcm_info	control/control_local.h	/^	int (*pcm_info)(snd_ctl_t *handle, snd_pcm_info_t * info);$/;"	m	struct:_snd_ctl_ops
pcm_next_device	control/control_local.h	/^	int (*pcm_next_device)(snd_ctl_t *handle, int *device);$/;"	m	struct:_snd_ctl_ops
pcm_prefer_subdevice	control/control_local.h	/^	int (*pcm_prefer_subdevice)(snd_ctl_t *handle, int subdev);$/;"	m	struct:_snd_ctl_ops
pdesc	pcm/pcm_ladspa.c	/^	LADSPA_PortDescriptor pdesc;		\/* port description *\/$/;"	m	struct:__anon57	file:
peak	pcm/scopes/level.c	/^	int16_t peak;$/;"	m	struct:_snd_pcm_scope_level_channel	file:
peak_age	pcm/scopes/level.c	/^	unsigned int peak_age;$/;"	m	struct:_snd_pcm_scope_level_channel	file:
peak_ms	pcm/scopes/level.c	/^	unsigned int peak_ms;$/;"	m	struct:_snd_pcm_scope_level	file:
pelems	control/control_local.h	/^	snd_hctl_elem_t **pelems;$/;"	m	struct:_snd_hctl
pelems	mixer/mixer_local.h	/^	snd_mixer_elem_t **pelems;	\/* array of all elems *\/$/;"	m	struct:_snd_mixer
pending	rawmidi/rawmidi_virt.c	/^	int pending;$/;"	m	struct:__anon60	file:
period_event	pcm/pcm_hw.c	/^	int period_event;$/;"	m	struct:__anon36	file:
period_event	pcm/pcm_local.h	/^	int period_event;$/;"	m	struct:_snd_pcm
period_size	pcm/pcm_direct.h	/^		snd_interval_t period_size;$/;"	m	struct:__anon27::__anon28
period_size	pcm/pcm_direct.h	/^		unsigned int period_size;$/;"	m	struct:__anon27::__anon29
period_size	pcm/pcm_direct.h	/^	snd_pcm_sframes_t period_size;$/;"	m	struct:slave_params
period_size	pcm/pcm_local.h	/^	snd_pcm_uframes_t period_size;$/;"	m	struct:_snd_pcm
period_step	pcm/pcm_direct.h	/^		unsigned int period_step;$/;"	m	struct:__anon27::__anon29
period_step	pcm/pcm_local.h	/^	unsigned int period_step;$/;"	m	struct:_snd_pcm
period_time	pcm/pcm_direct.h	/^		snd_interval_t period_time;$/;"	m	struct:__anon27::__anon28
period_time	pcm/pcm_direct.h	/^		unsigned int period_time;$/;"	m	struct:__anon27::__anon29
period_time	pcm/pcm_direct.h	/^	int period_time;$/;"	m	struct:slave_params
period_time	pcm/pcm_local.h	/^	unsigned int period_time;	\/* period duration *\/$/;"	m	struct:_snd_pcm
period_time	pcm/pcm_share.c	/^	snd_pcm_sframes_t period_time;$/;"	m	struct:__anon24	file:
period_timer	pcm/pcm_hw.c	/^	snd_timer_t *period_timer;$/;"	m	struct:__anon36	file:
period_timer_need_poll	pcm/pcm_hw.c	/^	int period_timer_need_poll;$/;"	m	struct:__anon36	file:
period_timer_pfd	pcm/pcm_hw.c	/^	struct pollfd period_timer_pfd;$/;"	m	struct:__anon36	typeref:struct:__anon36::pollfd	file:
periods	pcm/pcm_direct.h	/^		snd_interval_t periods;$/;"	m	struct:__anon27::__anon28
periods	pcm/pcm_direct.h	/^		snd_interval_t periods;$/;"	m	struct:__anon27::__anon29
periods	pcm/pcm_direct.h	/^	unsigned int periods;$/;"	m	struct:slave_params
periods	pcm/pcm_local.h	/^	snd_interval_t periods;$/;"	m	struct:_snd_pcm
perm	pcm/pcm_file.c	/^	int perm;$/;"	m	struct:__anon11	file:
pitch	pcm/pcm_rate_linear.c	/^	unsigned int pitch;$/;"	m	struct:rate_linear	file:
pitch_shift	pcm/pcm_rate_linear.c	/^	unsigned int pitch_shift;	\/* for expand interpolation *\/$/;"	m	struct:rate_linear	file:
pitchbend_ctrl_event	seq/seq_midi_event.c	/^static void pitchbend_ctrl_event(snd_midi_event_t *dev, snd_seq_event_t *ev)$/;"	f	file:
pitchbend_decode	seq/seq_midi_event.c	/^static void pitchbend_decode(const snd_seq_event_t *ev, unsigned char *buf)$/;"	f	file:
plug	pcm/pcm_adpcm.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon52	file:
plug	pcm/pcm_alaw.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon10	file:
plug	pcm/pcm_copy.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon23	file:
plug	pcm/pcm_extplug.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:snd_pcm_extplug_priv	file:
plug	pcm/pcm_iec958.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:snd_pcm_iec958	file:
plug	pcm/pcm_ladspa.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon54	file:
plug	pcm/pcm_lfloat.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon16	file:
plug	pcm/pcm_linear.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon12	file:
plug	pcm/pcm_mulaw.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon45	file:
plug	pcm/pcm_route.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon21	file:
plug	pcm/pcm_softvol.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon43	file:
plugin_version	pcm/pcm_rate.c	/^	unsigned int plugin_version;$/;"	m	struct:_snd_pcm_rate	file:
policy	pcm/pcm_ladspa.c	/^	snd_pcm_ladspa_policy_t policy;$/;"	m	struct:__anon58	file:
poll	pcm/pcm_share.c	/^	int poll[2];$/;"	m	struct:__anon24	file:
poll_cond	pcm/pcm_share.c	/^	pthread_cond_t poll_cond;$/;"	m	struct:__anon24	file:
poll_descriptors	control/control_local.h	/^	int (*poll_descriptors)(snd_ctl_t *handle, struct pollfd *pfds, unsigned int space);$/;"	m	struct:_snd_ctl_ops
poll_descriptors	pcm/pcm_local.h	/^	int (*poll_descriptors)(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int space);$/;"	m	struct:__anon51
poll_descriptors_count	control/control_local.h	/^	int (*poll_descriptors_count)(snd_ctl_t *handle);$/;"	m	struct:_snd_ctl_ops
poll_descriptors_count	pcm/pcm_local.h	/^	int (*poll_descriptors_count)(snd_pcm_t *pcm);$/;"	m	struct:__anon51
poll_events	pcm/pcm_local.h	/^	unsigned short poll_events;$/;"	m	struct:_snd_pcm
poll_fd	control/control_local.h	/^	int poll_fd;$/;"	m	struct:_snd_ctl
poll_fd	hwdep/hwdep_local.h	/^	int poll_fd;$/;"	m	struct:_snd_hwdep
poll_fd	pcm/pcm_direct.h	/^	int poll_fd;$/;"	m	struct:snd_pcm_direct
poll_fd	pcm/pcm_local.h	/^	int poll_fd;$/;"	m	struct:_snd_pcm
poll_fd	pcm/pcm_null.c	/^	int poll_fd;$/;"	m	struct:__anon26	file:
poll_fd	rawmidi/rawmidi_local.h	/^	int poll_fd;$/;"	m	struct:_snd_rawmidi
poll_fd	seq/seq_local.h	/^	int poll_fd;$/;"	m	struct:_snd_seq
poll_fd	timer/timer_local.h	/^	int poll_fd;$/;"	m	struct:_snd_timer
poll_fd	timer/timer_local.h	/^	int poll_fd;$/;"	m	struct:_snd_timer_query
poll_fd_count	pcm/pcm_local.h	/^	int poll_fd_count;$/;"	m	struct:_snd_pcm
poll_revents	control/control_local.h	/^	int (*poll_revents)(snd_ctl_t *handle, struct pollfd *pfds, unsigned int nfds, unsigned short *revents);$/;"	m	struct:_snd_ctl_ops
poll_revents	pcm/pcm_local.h	/^	int (*poll_revents)(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents);$/;"	m	struct:__anon51
polling	pcm/pcm_share.c	/^	int polling;$/;"	m	struct:__anon24	file:
port	rawmidi/rawmidi_virt.c	/^	int port;$/;"	m	struct:__anon60	file:
port_bindings	pcm/pcm_ladspa.c	/^	unsigned int *port_bindings;		\/* index = channel number, value = LADSPA port *\/$/;"	m	struct:__anon57	file:
port_bindings_size	pcm/pcm_ladspa.c	/^	unsigned int port_bindings_size;	\/* size of array *\/$/;"	m	struct:__anon57	file:
ports	pcm/pcm_ladspa.c	/^        snd_pcm_ladspa_array_t ports;$/;"	m	struct:__anon56	file:
pplugins	pcm/pcm_ladspa.c	/^	struct list_head pplugins;$/;"	m	struct:__anon54	typeref:struct:__anon54::list_head	file:
preamble	pcm/pcm_iec958.c	/^	unsigned char preamble[3];	\/* B\/M\/W or Z\/X\/Y *\/$/;"	m	struct:snd_pcm_iec958	file:
pred_val	pcm/pcm_plugin.h	/^	int pred_val;		\/* Calculated predicted value *\/$/;"	m	struct:_snd_pcm_adpcm_state
prefix	alisp/alisp_snd.c	/^	const char *prefix;$/;"	m	struct:acall_table	file:
prepare	pcm/pcm_local.h	/^	int (*prepare)(snd_pcm_t *pcm);$/;"	m	struct:__anon51
prepared_count	pcm/pcm_share.c	/^	unsigned int prepared_count;$/;"	m	struct:__anon24	file:
preserve	control/setup.c	/^	unsigned int preserve: 1;$/;"	m	struct:__anon6	file:
preset_dB_value	pcm/pcm_softvol.c	/^static const unsigned int preset_dB_value[PRESET_RESOLUTION] = {$/;"	v	file:
prev	pcm/pcm_ladspa.c	/^	struct snd_pcm_ladspa_instance *prev;$/;"	m	struct:snd_pcm_ladspa_instance	typeref:struct:snd_pcm_ladspa_instance::snd_pcm_ladspa_instance	file:
princ_cons	alisp/alisp.c	/^static void princ_cons(snd_output_t *out, struct alisp_object * p)$/;"	f	file:
princ_object	alisp/alisp.c	/^static void princ_object(snd_output_t *out, struct alisp_object * p)$/;"	f	file:
princ_string	alisp/alisp.c	/^static void princ_string(snd_output_t *out, char *s)$/;"	f	file:
print	output.c	/^	int (*print)(snd_output_t *output, const char *format, va_list args);$/;"	m	struct:_snd_output_ops	file:
print_obj_lists	alisp/alisp.c	/^static void print_obj_lists(struct alisp_instance *instance, snd_output_t *out)$/;"	f	file:
private_data	control/control_local.h	/^	void *private_data;$/;"	m	struct:_snd_ctl
private_data	hwdep/hwdep_local.h	/^	void *private_data;$/;"	m	struct:_snd_hwdep
private_data	input.c	/^	void *private_data;$/;"	m	struct:_snd_input	file:
private_data	mixer/mixer_local.h	/^	void *private_data;		$/;"	m	struct:_snd_mixer_class
private_data	mixer/mixer_local.h	/^	void *private_data;$/;"	m	struct:_snd_mixer_elem
private_data	mixer/simple_abst.c	/^	void *private_data;$/;"	m	struct:_class_priv	file:
private_data	output.c	/^	void *private_data;$/;"	m	struct:_snd_output	file:
private_data	pcm/pcm_hooks.c	/^	void *private_data;$/;"	m	struct:_snd_pcm_hook	file:
private_data	pcm/pcm_local.h	/^	void *private_data;$/;"	m	struct:_snd_pcm
private_data	pcm/pcm_local.h	/^	void *private_data;$/;"	m	struct:_snd_pcm_rbptr
private_data	pcm/pcm_meter.c	/^	void *private_data;$/;"	m	struct:_snd_pcm_scope	file:
private_data	pcm/pcm_params.c	/^	void *private_data;$/;"	m	struct:_snd_pcm_hw_rule	file:
private_data	rawmidi/rawmidi_local.h	/^	void *private_data;$/;"	m	struct:_snd_rawmidi
private_data	seq/seq_local.h	/^	void *private_data;$/;"	m	struct:_snd_seq
private_data	timer/timer_local.h	/^	void *private_data;$/;"	m	struct:_snd_timer
private_data	timer/timer_local.h	/^	void *private_data;$/;"	m	struct:_snd_timer_query
private_free	mixer/mixer_local.h	/^	void (*private_free)(snd_mixer_class_t *class);$/;"	m	struct:_snd_mixer_class
private_free	mixer/mixer_local.h	/^	void (*private_free)(snd_mixer_elem_t *elem);$/;"	m	struct:_snd_mixer_elem
private_free	mixer/simple_abst.c	/^	void (*private_free)(snd_mixer_class_t *class);$/;"	m	struct:_class_priv	file:
private_free	mixer/simple_abst.c	/^static void private_free(snd_mixer_class_t *class)$/;"	f	file:
protocol	control/control_hw.c	/^	unsigned int protocol;$/;"	m	struct:__anon7	file:
ptr	alisp/alisp_local.h	/^		const void *ptr;$/;"	m	union:alisp_object::__anon1
ptr	conf.c	/^		const void *ptr;$/;"	m	union:_snd_config::__anon3	file:
ptr	input.c	/^	unsigned char *ptr;$/;"	m	struct:_snd_input_buffer	file:
ptr	mixer/mixer_local.h	/^	void *ptr;$/;"	m	struct:_bag1
ptr	pcm/pcm_local.h	/^	volatile snd_pcm_uframes_t *ptr;$/;"	m	struct:_snd_pcm_rbptr
ptr	shmarea.c	/^	void *ptr;$/;"	m	struct:snd_shm_area	file:
put16_labels	pcm/plugin_ops.h	/^static void *const put16_labels[4 * 2 * 2] = {$/;"	v
put32_labels	pcm/plugin_ops.h	/^static void *const put32_labels[4 * 2 * 2 + 4 * 3] = {$/;"	v
put32float_labels	pcm/plugin_ops.h	/^static void *const put32float_labels[2 * 2] = {$/;"	v
put_idx	pcm/pcm_linear.c	/^	unsigned int get_idx, put_idx;$/;"	m	struct:__anon12	file:
put_idx	pcm/pcm_rate.c	/^	unsigned int put_idx;$/;"	m	struct:_snd_pcm_rate	file:
put_idx	pcm/pcm_rate_linear.c	/^	unsigned int put_idx;$/;"	m	struct:rate_linear	file:
put_idx	pcm/pcm_route.c	/^	unsigned int put_idx;$/;"	m	struct:__anon18	file:
put_labels	pcm/plugin_ops.h	/^static void *const put_labels[4 * 2 * 2] = {$/;"	v
putch	output.c	/^	int (*putch)(snd_output_t *output, int c);$/;"	m	struct:_snd_output_ops	file:
puts	output.c	/^	int (*puts)(snd_output_t *output, const char *str);$/;"	m	struct:_snd_output_ops	file:
qlen	seq/seq_midi_event.c	/^	int qlen;$/;"	m	struct:status_event_list_t	file:
qlen	seq/seq_midi_event.c	/^	size_t qlen;	\/* queue length *\/$/;"	m	struct:snd_midi_event	file:
query_next_client	seq/seq_local.h	/^	int (*query_next_client)(snd_seq_t *seq, snd_seq_client_info_t *info);$/;"	m	struct:__anon63
query_next_port	seq/seq_local.h	/^	int (*query_next_port)(snd_seq_t *seq, snd_seq_port_info_t *info);$/;"	m	struct:__anon63
query_port_subscribers	seq/seq_local.h	/^	int (*query_port_subscribers)(snd_seq_t *seq, snd_seq_query_subscribe_t * subs);$/;"	m	struct:__anon63
quote_object	alisp/alisp.c	/^static struct alisp_object * quote_object(struct alisp_instance *instance, struct alisp_object * obj)$/;"	f	file:
range	mixer/simple_none.c	/^		unsigned int range: 1;	\/* Forced range *\/$/;"	m	struct:_selem_none::selem_str	file:
rate	pcm/pcm_direct.h	/^		snd_interval_t rate;$/;"	m	struct:__anon27::__anon28
rate	pcm/pcm_direct.h	/^		unsigned int rate;$/;"	m	struct:__anon27::__anon29
rate	pcm/pcm_direct.h	/^	int rate;$/;"	m	struct:slave_params
rate	pcm/pcm_file.c	/^	int rate;$/;"	m	struct:wav_fmt	file:
rate	pcm/pcm_hw.c	/^	int rate;$/;"	m	struct:__anon36	file:
rate	pcm/pcm_local.h	/^	unsigned int rate;		\/* rate in Hz *\/$/;"	m	struct:_snd_pcm
rate	pcm/pcm_plug.c	/^	unsigned int rate;$/;"	m	struct:__anon15	file:
rate	pcm/pcm_share.c	/^	int rate;$/;"	m	struct:__anon24	file:
rate_converter	pcm/pcm_plug.c	/^	const snd_config_t *rate_converter;$/;"	m	struct:__anon14	file:
rate_den	pcm/pcm_direct.h	/^		unsigned int rate_den;$/;"	m	struct:__anon27::__anon29
rate_den	pcm/pcm_hw.c	/^	unsigned int rate_den;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
rate_den	pcm/pcm_local.h	/^	unsigned int rate_den;		\/* rate denominator *\/$/;"	m	struct:_snd_pcm
rate_linear	pcm/pcm_rate_linear.c	/^struct rate_linear {$/;"	s	file:
rate_max	pcm/pcm_rate.c	/^	unsigned int rate_min, rate_max;$/;"	m	struct:_snd_pcm_rate	file:
rate_min	pcm/pcm_rate.c	/^	unsigned int rate_min, rate_max;$/;"	m	struct:_snd_pcm_rate	file:
rate_num	pcm/pcm_direct.h	/^		unsigned int rate_num;$/;"	m	struct:__anon27::__anon29
rate_num	pcm/pcm_hw.c	/^	unsigned int rate_num;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
rate_num	pcm/pcm_local.h	/^	unsigned int rate_num;		\/* rate numerator *\/$/;"	m	struct:_snd_pcm
rate_open_func	pcm/pcm_rate.c	/^static int rate_open_func(snd_pcm_rate_t *rate, const char *type)$/;"	f	file:
rawmidi_info	control/control_local.h	/^	int (*rawmidi_info)(snd_ctl_t *handle, snd_rawmidi_info_t * info);$/;"	m	struct:_snd_ctl_ops
rawmidi_next_device	control/control_local.h	/^	int (*rawmidi_next_device)(snd_ctl_t *handle, int *device);$/;"	m	struct:_snd_ctl_ops
rawmidi_prefer_subdevice	control/control_local.h	/^	int (*rawmidi_prefer_subdevice)(snd_ctl_t *handle, int subdev);$/;"	m	struct:_snd_ctl_ops
rbuf	pcm/pcm_file.c	/^	char *rbuf;$/;"	m	struct:__anon11	file:
rbuf_size_bytes	pcm/pcm_file.c	/^	size_t rbuf_size_bytes;$/;"	m	struct:__anon11	file:
rbuf_used_bytes	pcm/pcm_file.c	/^	size_t rbuf_used_bytes;$/;"	m	struct:__anon11	file:
read	control/control_local.h	/^	int (*read)(snd_ctl_t *handle, snd_ctl_event_t *event);$/;"	m	struct:_snd_ctl_ops
read	hwdep/hwdep_local.h	/^	ssize_t (*read)(snd_hwdep_t *hwdep, void *buffer, size_t size);$/;"	m	struct:__anon9
read	pcm/pcm_plugin.h	/^	snd_pcm_slave_xfer_areas_func_t read;$/;"	m	struct:__anon53
read	rawmidi/rawmidi_local.h	/^	ssize_t (*read)(snd_rawmidi_t *rawmidi, void *buffer, size_t size);$/;"	m	struct:__anon61
read	seq/seq_local.h	/^	ssize_t (*read)(snd_seq_t *seq, void *buf, size_t len);$/;"	m	struct:__anon63
read	seq/seq_midi_event.c	/^	size_t read;	\/* chars read *\/$/;"	m	struct:snd_midi_event	file:
read	timer/timer_local.h	/^	ssize_t (*read)(snd_timer_t *timer, void *buffer, size_t size);$/;"	m	struct:__anon65
readi	pcm/pcm_local.h	/^	snd_pcm_sframes_t (*readi)(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size);$/;"	m	struct:__anon51
readn	pcm/pcm_local.h	/^	snd_pcm_sframes_t (*readn)(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size);$/;"	m	struct:__anon51
ready	pcm/pcm_share.c	/^	int ready;$/;"	m	struct:__anon25	file:
real	conf.c	/^		double real;$/;"	m	union:_snd_config::__anon3	file:
recalc	pcm/pcm_rate.c	/^static void recalc(snd_pcm_t *pcm, snd_pcm_uframes_t *val)$/;"	f	file:
recalc_boundary_size	pcm/pcm_direct.c	/^static snd_pcm_uframes_t recalc_boundary_size(unsigned long long bsize, snd_pcm_uframes_t buffer_size)$/;"	f	file:
refine_back_time_and_size	pcm/pcm_ioplug.c	/^static int refine_back_time_and_size(snd_pcm_hw_params_t *params,$/;"	f	file:
refine_intervals	pcm/pcm_params.c	/^static const snd_interval_t refine_intervals[SND_PCM_HW_PARAM_LAST_INTERVAL - SND_PCM_HW_PARAM_FIRST_INTERVAL + 1] = {$/;"	v	file:
refine_masks	pcm/pcm_params.c	/^static const snd_mask_t refine_masks[SND_PCM_HW_PARAM_LAST_MASK - SND_PCM_HW_PARAM_FIRST_MASK + 1] = {$/;"	v	file:
refine_rules	pcm/pcm_params.c	/^static const snd_pcm_hw_rule_t refine_rules[] = {$/;"	v	file:
refine_time_and_size	pcm/pcm_ioplug.c	/^static int refine_time_and_size(snd_pcm_hw_params_t *params,$/;"	f	file:
remix_areas	pcm/pcm_dmix.c	/^static void remix_areas(snd_pcm_direct_t *dmix,$/;"	f	file:
remix_areas_16	pcm/pcm_direct.h	/^			mix_areas_16_t *remix_areas_16;$/;"	m	struct:snd_pcm_direct::__anon32::__anon33
remix_areas_24	pcm/pcm_direct.h	/^			mix_areas_24_t *remix_areas_24;$/;"	m	struct:snd_pcm_direct::__anon32::__anon33
remix_areas_32	pcm/pcm_direct.h	/^			mix_areas_32_t *remix_areas_32;$/;"	m	struct:snd_pcm_direct::__anon32::__anon33
remix_areas_u8	pcm/pcm_direct.h	/^			mix_areas_u8_t *remix_areas_u8;$/;"	m	struct:snd_pcm_direct::__anon32::__anon33
remove_events	seq/seq_local.h	/^	int (*remove_events)(snd_seq_t *seq, snd_seq_remove_events_t *rmp);$/;"	m	struct:__anon63
remove_match	seq/seq.c	/^static int remove_match(snd_seq_remove_events_t *info, snd_seq_event_t *ev)$/;"	f	file:
replace_object	alisp/alisp.c	/^static struct alisp_object * replace_object(struct alisp_instance *instance, struct alisp_object * name, struct alisp_object * onew)$/;"	f	file:
req_slave	pcm/pcm_plug.c	/^	snd_pcm_t *req_slave;$/;"	m	struct:__anon14	file:
reserved	pcm/pcm_hw.c	/^	unsigned char reserved[64];$/;"	m	struct:sndrv_pcm_hw_params_old	file:
reserved	pcm/pcm_local.h	/^	char reserved[64];$/;"	m	struct:_snd_pcm_channel_info
reset	pcm/pcm_local.h	/^	int (*reset)(snd_pcm_t *pcm);$/;"	m	struct:__anon51
reset	pcm/pcm_meter.c	/^	atomic_t reset;$/;"	m	struct:_snd_pcm_meter	file:
reset_encode	seq/seq_midi_event.c	/^inline static void reset_encode(snd_midi_event_t *dev)$/;"	f	file:
reset_links	pcm/pcm_multi.c	/^static void reset_links(snd_pcm_multi_t *multi)$/;"	f	file:
reset_slave_ptr	pcm/pcm_dmix.c	/^static void reset_slave_ptr(snd_pcm_t *pcm, snd_pcm_direct_t *dmix)$/;"	f	file:
resume	pcm/pcm_local.h	/^	int (*resume)(snd_pcm_t *pcm);$/;"	m	struct:__anon51
rewind	pcm/pcm_local.h	/^	snd_pcm_sframes_t (*rewind)(snd_pcm_t *pcm, snd_pcm_uframes_t frames);$/;"	m	struct:__anon51
rewindable	pcm/pcm_local.h	/^	snd_pcm_sframes_t (*rewindable)(snd_pcm_t *pcm);$/;"	m	struct:__anon51
rmask	pcm/pcm_hw.c	/^	unsigned int rmask;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
route_f	pcm/pcm_route.c	/^typedef void (*route_f)(const snd_pcm_channel_area_t *dst_area,$/;"	t	file:
route_load_ttable	pcm/pcm_route.c	/^static int route_load_ttable(snd_pcm_route_params_t *params, snd_pcm_stream_t stream,$/;"	f	file:
route_policy	pcm/pcm_plug.c	/^	enum snd_pcm_plug_route_policy route_policy;$/;"	m	struct:__anon14	typeref:enum:__anon14::snd_pcm_plug_route_policy	file:
rptr	pcm/pcm_meter.c	/^	snd_pcm_uframes_t rptr;$/;"	m	struct:_snd_pcm_meter	file:
rt_continue	timer/timer_local.h	/^	int (*rt_continue)(snd_timer_t *timer);$/;"	m	struct:__anon65
rt_start	timer/timer_local.h	/^	int (*rt_start)(snd_timer_t *timer);$/;"	m	struct:__anon65
rt_stop	timer/timer_local.h	/^	int (*rt_stop)(snd_timer_t *timer);$/;"	m	struct:__anon65
rule_div	pcm/pcm_ioplug.c	/^static int rule_div(snd_pcm_hw_params_t *params, int x, int a, int b)$/;"	f	file:
rule_mul	pcm/pcm_ioplug.c	/^static int rule_mul(snd_pcm_hw_params_t *params, int x, int a, int b)$/;"	f	file:
rule_muldivk	pcm/pcm_ioplug.c	/^static int rule_muldivk(snd_pcm_hw_params_t *params, int x, int a, int b, int k)$/;"	f	file:
rule_mulkdiv	pcm/pcm_ioplug.c	/^static int rule_mulkdiv(snd_pcm_hw_params_t *params, int x, int a, int k, int b)$/;"	f	file:
run	pcm/ladspa.h	/^  void (*run)(LADSPA_Handle Instance,$/;"	m	struct:_LADSPA_Descriptor
run_adding	pcm/ladspa.h	/^  void (*run_adding)(LADSPA_Handle Instance,$/;"	m	struct:_LADSPA_Descriptor
running	pcm/pcm_meter.c	/^	int running;$/;"	m	struct:_snd_pcm_meter	file:
running_areas	pcm/pcm_local.h	/^	snd_pcm_channel_area_t *running_areas;$/;"	m	struct:_snd_pcm
running_cond	pcm/pcm_meter.c	/^	pthread_cond_t running_cond;$/;"	m	struct:_snd_pcm_meter	file:
running_count	pcm/pcm_share.c	/^	unsigned int running_count;$/;"	m	struct:__anon24	file:
running_mutex	pcm/pcm_meter.c	/^	pthread_mutex_t running_mutex;$/;"	m	struct:_snd_pcm_meter	file:
s	alisp/alisp_local.h	/^		char	*s;$/;"	m	union:alisp_object::__anon1
s	pcm/pcm_direct.h	/^	} s;$/;"	m	struct:__anon27	typeref:struct:__anon27::__anon29
s	pcm/pcm_softvol.c	/^	short s[2];$/;"	m	union:__anon44	file:
s16	pcm/scopes/level.c	/^	snd_pcm_scope_t *s16;$/;"	m	struct:_snd_pcm_scope_level	file:
s16_close	pcm/pcm_meter.c	/^static void s16_close(snd_pcm_scope_t *scope)$/;"	f	file:
s16_disable	pcm/pcm_meter.c	/^static void s16_disable(snd_pcm_scope_t *scope)$/;"	f	file:
s16_enable	pcm/pcm_meter.c	/^static int s16_enable(snd_pcm_scope_t *scope)$/;"	f	file:
s16_ops	pcm/pcm_meter.c	/^static const snd_pcm_scope_ops_t s16_ops = {$/;"	v	file:
s16_reset	pcm/pcm_meter.c	/^static void s16_reset(snd_pcm_scope_t *scope)$/;"	f	file:
s16_start	pcm/pcm_meter.c	/^static void s16_start(snd_pcm_scope_t *scope ATTRIBUTE_UNUSED)$/;"	f	file:
s16_stop	pcm/pcm_meter.c	/^static void s16_stop(snd_pcm_scope_t *scope ATTRIBUTE_UNUSED)$/;"	f	file:
s16_to_alaw	pcm/pcm_alaw.c	/^static unsigned char s16_to_alaw(int pcm_val)$/;"	f	file:
s16_to_ulaw	pcm/pcm_mulaw.c	/^static unsigned char s16_to_ulaw(int pcm_val)	\/* 2's complement (16-bit range) *\/$/;"	f	file:
s16_update	pcm/pcm_meter.c	/^static void s16_update(snd_pcm_scope_t *scope)$/;"	f	file:
safe_strtod	conf.c	/^static int safe_strtod(const char *str, double *val)$/;"	f	file:
safe_strtol	conf.c	/^int safe_strtol(const char *str, long *val)$/;"	f
safe_strtoll	conf.c	/^static int safe_strtoll(const char *str, long long *val)$/;"	f	file:
safety_threshold	pcm/pcm_share.c	/^	snd_pcm_uframes_t safety_threshold;$/;"	m	struct:__anon24	file:
sample_bits	pcm/pcm_direct.h	/^		unsigned int sample_bits;$/;"	m	struct:__anon27::__anon29
sample_bits	pcm/pcm_local.h	/^	unsigned int sample_bits;$/;"	m	struct:_snd_pcm
sareas	pcm/pcm_rate.c	/^	snd_pcm_channel_area_t *sareas;	\/* areas for splitted period (slave pcm) *\/$/;"	m	struct:_snd_pcm_rate	file:
save_slave_setting	pcm/pcm_direct.c	/^static void save_slave_setting(snd_pcm_direct_t *dmix, snd_pcm_t *spcm)$/;"	f	file:
scan	input.c	/^	int (*scan)(snd_input_t *input, const char *format, va_list args);$/;"	m	struct:_snd_input_ops	file:
schannels	pcm/pcm_plug.c	/^	int schannels;$/;"	m	struct:__anon14	file:
schannels	pcm/pcm_route.c	/^	int schannels;$/;"	m	struct:__anon21	file:
scopes	pcm/pcm_meter.c	/^	struct list_head scopes;$/;"	m	struct:_snd_pcm_meter	typeref:struct:_snd_pcm_meter::list_head	file:
search_object_float	alisp/alisp.c	/^static struct alisp_object * search_object_float(struct alisp_instance *instance, double in)$/;"	f	file:
search_object_identifier	alisp/alisp.c	/^static struct alisp_object * search_object_identifier(struct alisp_instance *instance, const char *s)$/;"	f	file:
search_object_integer	alisp/alisp.c	/^static struct alisp_object * search_object_integer(struct alisp_instance *instance, long in)$/;"	f	file:
search_object_pointer	alisp/alisp.c	/^static struct alisp_object * search_object_pointer(struct alisp_instance *instance, const void *ptr)$/;"	f	file:
search_object_string	alisp/alisp.c	/^static struct alisp_object * search_object_string(struct alisp_instance *instance, const char *s)$/;"	f	file:
selem	mixer/simple_none.c	/^	sm_selem_t selem;$/;"	m	struct:_selem_none	file:
selem_ctl_t	mixer/simple_none.c	/^} selem_ctl_t;$/;"	t	typeref:struct:_selem_ctl	file:
selem_ctl_type_t	mixer/simple_none.c	/^} selem_ctl_type_t;$/;"	t	typeref:enum:_selem_ctl_type	file:
selem_free	mixer/simple_none.c	/^static void selem_free(snd_mixer_elem_t *elem)$/;"	f	file:
selem_none_t	mixer/simple_none.c	/^} selem_none_t;$/;"	t	typeref:struct:_selem_none	file:
selem_read	mixer/simple_none.c	/^static int selem_read(snd_mixer_elem_t *elem)$/;"	f	file:
selem_str	mixer/simple_none.c	/^	struct selem_str {$/;"	s	struct:_selem_none	file:
selem_write	mixer/simple_none.c	/^static int selem_write(snd_mixer_elem_t *elem)$/;"	f	file:
selem_write_main	mixer/simple_none.c	/^static int selem_write_main(snd_mixer_elem_t *elem)$/;"	f	file:
semid	pcm/pcm_direct.h	/^	int semid;			\/* IPC global semaphore identification *\/$/;"	m	struct:snd_pcm_direct
semun	pcm/pcm_direct.c	/^union semun {$/;"	u	file:
server	pcm/pcm_direct.h	/^	int server, client;$/;"	m	struct:snd_pcm_direct
server_cleanup	pcm/pcm_direct.c	/^static void server_cleanup(snd_pcm_direct_t *dmix)$/;"	f	file:
server_fd	pcm/pcm_direct.h	/^	int server_fd;$/;"	m	struct:snd_pcm_direct
server_free	pcm/pcm_direct.h	/^	void (*server_free)(snd_pcm_direct_t *direct);$/;"	m	struct:snd_pcm_direct
server_job	pcm/pcm_direct.c	/^static void server_job(snd_pcm_direct_t *dmix)$/;"	f	file:
server_job_dmix	pcm/pcm_direct.c	/^static snd_pcm_direct_t *server_job_dmix;$/;"	v	file:
server_job_signal	pcm/pcm_direct.c	/^static void server_job_signal(int sig ATTRIBUTE_UNUSED)$/;"	f	file:
server_pid	pcm/pcm_direct.h	/^	pid_t server_pid;$/;"	m	struct:snd_pcm_direct
server_printf	pcm/pcm_direct.c	247;"	d	file:
set_buffer_time	pcm/pcm_simple.c	/^static int set_buffer_time(snd_spcm_latency_t latency,$/;"	f	file:
set_client_info	seq/seq_local.h	/^	int (*set_client_info)(snd_seq_t *seq, snd_seq_client_info_t * info);$/;"	m	struct:__anon63
set_client_pool	seq/seq_local.h	/^	int (*set_client_pool)(snd_seq_t *seq, snd_seq_client_pool_t *info);$/;"	m	struct:__anon63
set_dB_ops	mixer/simple_none.c	/^static int set_dB_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
set_enum_item_ops	mixer/simple_none.c	/^static int set_enum_item_ops(snd_mixer_elem_t *elem,$/;"	f	file:
set_hw_params	pcm/pcm_simple.c	/^static int set_hw_params(snd_pcm_t *pcm,$/;"	f	file:
set_object	alisp/alisp.c	/^static struct alisp_object_pair * set_object(struct alisp_instance *instance, struct alisp_object * name, struct alisp_object * value)$/;"	f	file:
set_object_direct	alisp/alisp.c	/^static struct alisp_object_pair * set_object_direct(struct alisp_instance *instance, struct alisp_object * name, struct alisp_object * value)$/;"	f	file:
set_port_info	seq/seq_local.h	/^	int (*set_port_info)(snd_seq_t *seq, snd_seq_port_info_t * info);$/;"	m	struct:__anon63
set_power_state	control/control_local.h	/^	int (*set_power_state)(snd_ctl_t *handle, unsigned int state);$/;"	m	struct:_snd_ctl_ops
set_queue_client	seq/seq_local.h	/^	int (*set_queue_client)(snd_seq_t *seq, snd_seq_queue_client_t * client);$/;"	m	struct:__anon63
set_queue_info	seq/seq_local.h	/^	int (*set_queue_info)(snd_seq_t *seq, snd_seq_queue_info_t *info);$/;"	m	struct:__anon63
set_queue_tempo	seq/seq_local.h	/^	int (*set_queue_tempo)(snd_seq_t *seq, snd_seq_queue_tempo_t * tempo);$/;"	m	struct:__anon63
set_queue_timer	seq/seq_local.h	/^	int (*set_queue_timer)(snd_seq_t *seq, snd_seq_queue_timer_t * timer);$/;"	m	struct:__anon63
set_range_ops	mixer/simple_none.c	/^static int set_range_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
set_run_adding_gain	pcm/ladspa.h	/^  void (*set_run_adding_gain)(LADSPA_Handle Instance,$/;"	m	struct:_LADSPA_Descriptor
set_sw_params	pcm/pcm_simple.c	/^static int set_sw_params(snd_pcm_t *pcm,$/;"	f	file:
set_switch_ops	mixer/simple_none.c	/^static int set_switch_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
set_volume_ops	mixer/simple_none.c	/^static int set_volume_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
setobjs_list	alisp/alisp_local.h	/^	struct list_head setobjs_list[ALISP_OBJ_PAIR_HASH_SIZE];$/;"	m	struct:alisp_instance	typeref:struct:alisp_instance::list_head
setup	pcm/pcm_local.h	/^	int setup: 1,$/;"	m	struct:_snd_pcm
setup_count	pcm/pcm_share.c	/^	unsigned int setup_count;$/;"	m	struct:__anon24	file:
setup_wav_header	pcm/pcm_file.c	/^static void setup_wav_header(snd_pcm_t *pcm, struct wav_fmt *fmt)$/;"	f	file:
sformat	pcm/pcm_adpcm.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon52	file:
sformat	pcm/pcm_alaw.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon10	file:
sformat	pcm/pcm_iec958.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:snd_pcm_iec958	file:
sformat	pcm/pcm_lfloat.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon16	file:
sformat	pcm/pcm_linear.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon12	file:
sformat	pcm/pcm_mulaw.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon45	file:
sformat	pcm/pcm_plug.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon14	file:
sformat	pcm/pcm_rate.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:_snd_pcm_rate	file:
sformat	pcm/pcm_route.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon21	file:
sformat	pcm/pcm_softvol.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon43	file:
share	shmarea.c	/^	int share;$/;"	m	struct:snd_shm_area	file:
share_areas	pcm/pcm_dshare.c	/^static void share_areas(snd_pcm_direct_t *dshare,$/;"	f	file:
shm	pcm/pcm_local.h	/^		} shm;$/;"	m	union:_snd_pcm_channel_info::__anon47	typeref:struct:_snd_pcm_channel_info::__anon47::__anon48
shm_sum_create_or_connect	pcm/pcm_dmix.c	/^static int shm_sum_create_or_connect(snd_pcm_direct_t *dmix)$/;"	f	file:
shm_sum_discard	pcm/pcm_dmix.c	/^static int shm_sum_discard(snd_pcm_direct_t *dmix)$/;"	f	file:
shmid	pcm/pcm_direct.h	/^	int shmid;			\/* IPC global shared memory identification *\/$/;"	m	struct:snd_pcm_direct
shmid	pcm/pcm_local.h	/^			int shmid;$/;"	m	struct:_snd_pcm_channel_info::__anon47::__anon48
shmid	shmarea.c	/^	int shmid;$/;"	m	struct:snd_shm_area	file:
shmid_sum	pcm/pcm_direct.h	/^			int shmid_sum;			\/* IPC global sum ring buffer memory identification *\/$/;"	m	struct:snd_pcm_direct::__anon32::__anon33
shmptr	pcm/pcm_direct.h	/^	snd_pcm_direct_share_t *shmptr;	\/* pointer to shared memory area *\/$/;"	m	struct:snd_pcm_direct
shortname	mixer/simple_none.c	/^	const char *shortname;$/;"	m	struct:mixer_name_table	file:
show_all	control/namehint.c	/^	int show_all;$/;"	m	struct:hint_list	file:
siface	control/namehint.c	/^	const char *siface;$/;"	m	struct:hint_list	file:
silence_frames	pcm/pcm_share.c	/^	snd_pcm_uframes_t silence_frames;$/;"	m	struct:__anon24	file:
silence_size	pcm/pcm_direct.h	/^		unsigned int silence_size;$/;"	m	struct:__anon27::__anon29
silence_size	pcm/pcm_local.h	/^	snd_pcm_uframes_t silence_size;	\/* Silence filling size *\/$/;"	m	struct:_snd_pcm
silence_threshold	pcm/pcm_direct.h	/^		unsigned int silence_threshold;$/;"	m	struct:__anon27::__anon29
silence_threshold	pcm/pcm_local.h	/^	snd_pcm_uframes_t silence_threshold;	\/* Silence filling happens when$/;"	m	struct:_snd_pcm
simple_add1	mixer/simple_none.c	/^static int simple_add1(snd_mixer_class_t *class, const char *name,$/;"	f	file:
simple_event	mixer/simple_none.c	/^static int simple_event(snd_mixer_class_t *class, unsigned int mask,$/;"	f	file:
simple_event_add	mixer/simple_none.c	/^static int simple_event_add(snd_mixer_class_t *class, snd_hctl_elem_t *helem)$/;"	f	file:
simple_event_remove	mixer/simple_none.c	/^static int simple_event_remove(snd_hctl_elem_t *helem,$/;"	f	file:
simple_none_ops	mixer/simple_none.c	/^static struct sm_elem_ops simple_none_ops = {$/;"	v	typeref:struct:sm_elem_ops	file:
simple_update	mixer/simple_none.c	/^static int simple_update(snd_mixer_elem_t *melem)$/;"	f	file:
size	input.c	/^	size_t size;$/;"	m	struct:_snd_input_buffer	file:
size	output.c	/^	size_t size;$/;"	m	struct:_snd_output_buffer	file:
size	pcm/pcm_ladspa.c	/^        unsigned int size;$/;"	m	struct:__anon55	file:
skip_blank	conf.c	/^static void skip_blank(const char **ptr)$/;"	f	file:
slave	pcm/pcm_direct.h	/^	snd_config_t *slave;$/;"	m	struct:snd_pcm_direct_open_conf
slave	pcm/pcm_generic.h	/^	snd_pcm_t *slave;$/;"	m	struct:__anon22
slave	pcm/pcm_share.c	/^	snd_pcm_share_slave_t *slave;$/;"	m	struct:__anon25	file:
slave_appl_ptr	pcm/pcm_direct.h	/^	snd_pcm_uframes_t slave_appl_ptr;$/;"	m	struct:snd_pcm_direct
slave_boundary	pcm/pcm_direct.h	/^	snd_pcm_uframes_t slave_boundary;$/;"	m	struct:snd_pcm_direct
slave_buffer_size	pcm/pcm_direct.h	/^	snd_pcm_uframes_t slave_buffer_size;$/;"	m	struct:snd_pcm_direct
slave_channel	pcm/pcm_multi.c	/^	unsigned int slave_channel;$/;"	m	struct:__anon40	file:
slave_channels	pcm/pcm_share.c	/^	unsigned int *slave_channels;$/;"	m	struct:__anon25	file:
slave_frames	pcm/pcm_plugin.h	/^	snd_pcm_sframes_t (*slave_frames)(snd_pcm_t *pcm, snd_pcm_sframes_t frames);$/;"	m	struct:__anon53
slave_hw_ptr	pcm/pcm_direct.h	/^	snd_pcm_uframes_t slave_hw_ptr;$/;"	m	struct:snd_pcm_direct
slave_idx	pcm/pcm_multi.c	/^	int slave_idx;$/;"	m	struct:__anon40	file:
slave_params	pcm/pcm_direct.h	/^struct slave_params {$/;"	s
slave_period_size	pcm/pcm_direct.h	/^	snd_pcm_uframes_t slave_period_size;$/;"	m	struct:snd_pcm_direct
slave_socket	pcm/pcm_share.c	/^	int slave_socket;$/;"	m	struct:__anon25	file:
slaves	mixer/mixer_local.h	/^	struct list_head slaves;	\/* list of all slaves *\/$/;"	m	struct:_snd_mixer	typeref:struct:_snd_mixer::list_head
slaves	pcm/pcm_multi.c	/^	snd_pcm_multi_slave_t *slaves;$/;"	m	struct:__anon41	file:
slaves_count	pcm/pcm_multi.c	/^	unsigned int slaves_count;$/;"	m	struct:__anon41	file:
sleep_min	pcm/pcm_direct.h	/^		unsigned int sleep_min; \/* not used *\/$/;"	m	struct:__anon27::__anon29
slowptr	pcm/pcm_direct.h	/^	int slowptr;			\/* use slow but more precise ptr updates *\/$/;"	m	struct:snd_pcm_direct
slowptr	pcm/pcm_direct.h	/^	int slowptr;$/;"	m	struct:snd_pcm_direct_open_conf
snd_asoundlib_version	error.c	/^const char *snd_asoundlib_version(void)$/;"	f
snd_async_add_ctl_handler	control/control.c	/^int snd_async_add_ctl_handler(snd_async_handler_t **handler, snd_ctl_t *ctl, $/;"	f
snd_async_add_handler	async.c	/^int snd_async_add_handler(snd_async_handler_t **handler, int fd, $/;"	f
snd_async_add_pcm_handler	pcm/pcm.c	/^int snd_async_add_pcm_handler(snd_async_handler_t **handler, snd_pcm_t *pcm, $/;"	f
snd_async_add_timer_handler	timer/timer.c	/^int snd_async_add_timer_handler(snd_async_handler_t **handler, snd_timer_t *timer,$/;"	f
snd_async_del_handler	async.c	/^int snd_async_del_handler(snd_async_handler_t *handler)$/;"	f
snd_async_handler	async.c	/^static void snd_async_handler(int signo ATTRIBUTE_UNUSED, siginfo_t *siginfo, void *context ATTRIBUTE_UNUSED)$/;"	f	file:
snd_async_handler_get_callback_private	async.c	/^void *snd_async_handler_get_callback_private(snd_async_handler_t *handler)$/;"	f
snd_async_handler_get_ctl	control/control.c	/^snd_ctl_t *snd_async_handler_get_ctl(snd_async_handler_t *handler)$/;"	f
snd_async_handler_get_fd	async.c	/^int snd_async_handler_get_fd(snd_async_handler_t *handler)$/;"	f
snd_async_handler_get_pcm	pcm/pcm.c	/^snd_pcm_t *snd_async_handler_get_pcm(snd_async_handler_t *handler)$/;"	f
snd_async_handler_get_signo	async.c	/^int snd_async_handler_get_signo(snd_async_handler_t *handler)$/;"	f
snd_async_handler_get_timer	timer/timer.c	/^snd_timer_t *snd_async_handler_get_timer(snd_async_handler_t *handler)$/;"	f
snd_async_init	async.c	/^void snd_async_init(void)$/;"	f
snd_async_signo	async.c	/^static const int snd_async_signo = SIGIO;$/;"	v	file:
snd_async_signo	async.c	/^static int snd_async_signo;$/;"	v	file:
snd_atomic_read_wait	pcm/atomic.c	/^void snd_atomic_read_wait(snd_atomic_read_t *t)$/;"	f
snd_card_get_index	control/cards.c	/^int snd_card_get_index(const char *string)$/;"	f
snd_card_get_longname	control/cards.c	/^int snd_card_get_longname(int card, char **name)$/;"	f
snd_card_get_name	control/cards.c	/^int snd_card_get_name(int card, char **name)$/;"	f
snd_card_load	control/cards.c	/^int snd_card_load(int card)$/;"	f
snd_card_load1	control/cards.c	/^static int snd_card_load1(int card)$/;"	f	file:
snd_card_load2	control/cards.c	/^static int snd_card_load2(const char *control)$/;"	f	file:
snd_card_next	control/cards.c	/^int snd_card_next(int *rcard)$/;"	f
snd_config	conf.c	/^snd_config_t *snd_config = NULL;$/;"	v
snd_config_add	conf.c	/^int snd_config_add(snd_config_t *parent, snd_config_t *child)$/;"	f
snd_config_check_hop	conf.c	/^int snd_config_check_hop(snd_config_t *conf)$/;"	f
snd_config_copy	conf.c	/^int snd_config_copy(snd_config_t **dst,$/;"	f
snd_config_delete	conf.c	/^int snd_config_delete(snd_config_t *config)$/;"	f
snd_config_delete_compound_members	conf.c	/^int snd_config_delete_compound_members(const snd_config_t *config)$/;"	f
snd_config_evaluate	conf.c	/^int snd_config_evaluate(snd_config_t *config, snd_config_t *root,$/;"	f
snd_config_expand	conf.c	/^int snd_config_expand(snd_config_t *config, snd_config_t *root, const char *args,$/;"	f
snd_config_get_ascii	conf.c	/^int snd_config_get_ascii(const snd_config_t *config, char **ascii)$/;"	f
snd_config_get_bool	confmisc.c	/^int snd_config_get_bool(const snd_config_t *conf)$/;"	f
snd_config_get_bool_ascii	confmisc.c	/^int snd_config_get_bool_ascii(const char *ascii)$/;"	f
snd_config_get_ctl_elem_enumerated	control/setup.c	/^static int snd_config_get_ctl_elem_enumerated(snd_config_t *n, snd_ctl_t *ctl,$/;"	f	file:
snd_config_get_ctl_elem_value	control/setup.c	/^static int snd_config_get_ctl_elem_value(snd_config_t *conf,$/;"	f	file:
snd_config_get_ctl_iface	confmisc.c	/^int snd_config_get_ctl_iface(const snd_config_t *conf)$/;"	f
snd_config_get_ctl_iface_ascii	confmisc.c	/^int snd_config_get_ctl_iface_ascii(const char *ascii)$/;"	f
snd_config_get_id	conf.c	/^int snd_config_get_id(const snd_config_t *config, const char **id)$/;"	f
snd_config_get_integer	conf.c	/^int snd_config_get_integer(const snd_config_t *config, long *ptr)$/;"	f
snd_config_get_integer64	conf.c	/^int snd_config_get_integer64(const snd_config_t *config, long long *ptr)$/;"	f
snd_config_get_ireal	conf.c	/^int snd_config_get_ireal(const snd_config_t *config, double *ptr)$/;"	f
snd_config_get_pointer	conf.c	/^int snd_config_get_pointer(const snd_config_t *config, const void **ptr)$/;"	f
snd_config_get_real	conf.c	/^int snd_config_get_real(const snd_config_t *config, double *ptr)$/;"	f
snd_config_get_string	conf.c	/^int snd_config_get_string(const snd_config_t *config, const char **ptr)$/;"	f
snd_config_get_type	conf.c	/^snd_config_type_t snd_config_get_type(const snd_config_t *config)$/;"	f
snd_config_get_type_ascii	conf.c	/^int snd_config_get_type_ascii(const char *ascii, snd_config_type_t *type)$/;"	f
snd_config_global_update	conf.c	/^static snd_config_update_t *snd_config_global_update = NULL;$/;"	v	file:
snd_config_hook_load	conf.c	/^int snd_config_hook_load(snd_config_t *root, snd_config_t *config, snd_config_t **dst, snd_config_t *private_data)$/;"	f
snd_config_hook_load_for_all_cards	conf.c	/^int snd_config_hook_load_for_all_cards(snd_config_t *root, snd_config_t *config, snd_config_t **dst, snd_config_t *private_data ATTRIBUTE_UNUSED)$/;"	f
snd_config_hooks	conf.c	/^static int snd_config_hooks(snd_config_t *config, snd_config_t *private_data)$/;"	f	file:
snd_config_hooks_call	conf.c	/^static int snd_config_hooks_call(snd_config_t *root, snd_config_t *config, snd_config_t *private_data)$/;"	f	file:
snd_config_imake_integer	conf.c	/^int snd_config_imake_integer(snd_config_t **config, const char *id, const long value)$/;"	f
snd_config_imake_integer64	conf.c	/^int snd_config_imake_integer64(snd_config_t **config, const char *id, const long long value)$/;"	f
snd_config_imake_pointer	conf.c	/^int snd_config_imake_pointer(snd_config_t **config, const char *id, const void *value)$/;"	f
snd_config_imake_real	conf.c	/^int snd_config_imake_real(snd_config_t **config, const char *id, const double value)$/;"	f
snd_config_imake_string	conf.c	/^int snd_config_imake_string(snd_config_t **config, const char *id, const char *value)$/;"	f
snd_config_iterator_end	conf.c	/^snd_config_iterator_t snd_config_iterator_end(const snd_config_t *config)$/;"	f
snd_config_iterator_entry	conf.c	/^snd_config_t *snd_config_iterator_entry(const snd_config_iterator_t iterator)$/;"	f
snd_config_iterator_first	conf.c	/^snd_config_iterator_t snd_config_iterator_first(const snd_config_t *config)$/;"	f
snd_config_iterator_next	conf.c	/^snd_config_iterator_t snd_config_iterator_next(const snd_config_iterator_t iterator)$/;"	f
snd_config_load	conf.c	/^int snd_config_load(snd_config_t *config, snd_input_t *in)$/;"	f
snd_config_load1	conf.c	/^static int snd_config_load1(snd_config_t *config, snd_input_t *in, int override)$/;"	f	file:
snd_config_load_override	conf.c	/^int snd_config_load_override(snd_config_t *config, snd_input_t *in)$/;"	f
snd_config_make	conf.c	/^int snd_config_make(snd_config_t **config, const char *id,$/;"	f
snd_config_make_compound	conf.c	/^int snd_config_make_compound(snd_config_t **config, const char *id,$/;"	f
snd_config_make_integer	conf.c	/^int snd_config_make_integer(snd_config_t **config, const char *id)$/;"	f
snd_config_make_integer64	conf.c	/^int snd_config_make_integer64(snd_config_t **config, const char *id)$/;"	f
snd_config_make_pointer	conf.c	/^int snd_config_make_pointer(snd_config_t **config, const char *id)$/;"	f
snd_config_make_real	conf.c	/^int snd_config_make_real(snd_config_t **config, const char *id)$/;"	f
snd_config_make_string	conf.c	/^int snd_config_make_string(snd_config_t **config, const char *id)$/;"	f
snd_config_remove	conf.c	/^int snd_config_remove(snd_config_t *config)$/;"	f
snd_config_save	conf.c	/^int snd_config_save(snd_config_t *config, snd_output_t *out)$/;"	f
snd_config_search	conf.c	/^int snd_config_search(snd_config_t *config, const char *key, snd_config_t **result)$/;"	f
snd_config_search_alias	conf.c	/^int snd_config_search_alias(snd_config_t *config,$/;"	f
snd_config_search_alias_hooks	conf.c	/^int snd_config_search_alias_hooks(snd_config_t *config,$/;"	f
snd_config_search_definition	conf.c	/^int snd_config_search_definition(snd_config_t *config,$/;"	f
snd_config_search_hooks	conf.c	/^int snd_config_search_hooks(snd_config_t *config, const char *key, snd_config_t **result)$/;"	f
snd_config_searcha	conf.c	/^int snd_config_searcha(snd_config_t *root, snd_config_t *config, const char *key, snd_config_t **result)$/;"	f
snd_config_searcha_hooks	conf.c	/^int snd_config_searcha_hooks(snd_config_t *root, snd_config_t *config, const char *key, snd_config_t **result)$/;"	f
snd_config_searchv	conf.c	/^int snd_config_searchv(snd_config_t *config, snd_config_t **result, ...)$/;"	f
snd_config_searchva	conf.c	/^int snd_config_searchva(snd_config_t *root, snd_config_t *config, snd_config_t **result, ...)$/;"	f
snd_config_searchva_hooks	conf.c	/^int snd_config_searchva_hooks(snd_config_t *root, snd_config_t *config,$/;"	f
snd_config_set_ascii	conf.c	/^int snd_config_set_ascii(snd_config_t *config, const char *ascii)$/;"	f
snd_config_set_hop	conf.c	/^void snd_config_set_hop(snd_config_t *conf, int hop)$/;"	f
snd_config_set_id	conf.c	/^int snd_config_set_id(snd_config_t *config, const char *id)$/;"	f
snd_config_set_integer	conf.c	/^int snd_config_set_integer(snd_config_t *config, long value)$/;"	f
snd_config_set_integer64	conf.c	/^int snd_config_set_integer64(snd_config_t *config, long long value)$/;"	f
snd_config_set_pointer	conf.c	/^int snd_config_set_pointer(snd_config_t *config, const void *value)$/;"	f
snd_config_set_real	conf.c	/^int snd_config_set_real(snd_config_t *config, double value)$/;"	f
snd_config_set_string	conf.c	/^int snd_config_set_string(snd_config_t *config, const char *value)$/;"	f
snd_config_substitute	conf.c	/^int snd_config_substitute(snd_config_t *dst, snd_config_t *src)$/;"	f
snd_config_test_id	conf.c	/^int snd_config_test_id(const snd_config_t *config, const char *id)$/;"	f
snd_config_top	conf.c	/^int snd_config_top(snd_config_t **config)$/;"	f
snd_config_update	conf.c	/^int snd_config_update(void)$/;"	f
snd_config_update_free	conf.c	/^int snd_config_update_free(snd_config_update_t *update)$/;"	f
snd_config_update_free_global	conf.c	/^int snd_config_update_free_global(void)$/;"	f
snd_config_update_mutex	conf.c	/^static pthread_mutex_t snd_config_update_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
snd_config_update_r	conf.c	/^int snd_config_update_r(snd_config_t **_top, snd_config_update_t **_update, const char *cfgs)$/;"	f
snd_config_walk	conf.c	/^static int snd_config_walk(snd_config_t *src,$/;"	f	file:
snd_config_walk_callback_t	conf.c	/^typedef int (*snd_config_walk_callback_t)(snd_config_t *src,$/;"	t	file:
snd_config_walk_pass_t	conf.c	/^} snd_config_walk_pass_t;$/;"	t	typeref:enum:_snd_config_walk_pass	file:
snd_control_open_objects	control/control_symbols.c	/^static const char **snd_control_open_objects[] = {$/;"	v	file:
snd_control_open_symbols	control/control_symbols.c	/^void *snd_control_open_symbols(void)$/;"	f
snd_ctl_async	control/control.c	/^int snd_ctl_async(snd_ctl_t *ctl, int sig, pid_t pid)$/;"	f
snd_ctl_card_info	control/control.c	/^int snd_ctl_card_info(snd_ctl_t *ctl, snd_ctl_card_info_t *info)$/;"	f
snd_ctl_card_info_clear	control/control.c	/^void snd_ctl_card_info_clear(snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_copy	control/control.c	/^void snd_ctl_card_info_copy(snd_ctl_card_info_t *dst, const snd_ctl_card_info_t *src)$/;"	f
snd_ctl_card_info_free	control/control.c	/^void snd_ctl_card_info_free(snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_get_card	control/control.c	/^int snd_ctl_card_info_get_card(const snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_get_components	control/control.c	/^const char *snd_ctl_card_info_get_components(const snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_get_driver	control/control.c	/^const char *snd_ctl_card_info_get_driver(const snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_get_id	control/control.c	/^const char *snd_ctl_card_info_get_id(const snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_get_longname	control/control.c	/^const char *snd_ctl_card_info_get_longname(const snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_get_mixername	control/control.c	/^const char *snd_ctl_card_info_get_mixername(const snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_get_name	control/control.c	/^const char *snd_ctl_card_info_get_name(const snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_malloc	control/control.c	/^int snd_ctl_card_info_malloc(snd_ctl_card_info_t **ptr)$/;"	f
snd_ctl_card_info_sizeof	control/control.c	/^size_t snd_ctl_card_info_sizeof()$/;"	f
snd_ctl_close	control/control.c	/^int snd_ctl_close(snd_ctl_t *ctl)$/;"	f
snd_ctl_convert_from_dB	control/tlv.c	/^int snd_ctl_convert_from_dB(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_convert_to_dB	control/tlv.c	/^int snd_ctl_convert_to_dB(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_elem_add_boolean	control/control.c	/^int snd_ctl_elem_add_boolean(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_elem_add_iec958	control/control.c	/^int snd_ctl_elem_add_iec958(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id)$/;"	f
snd_ctl_elem_add_integer	control/control.c	/^int snd_ctl_elem_add_integer(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_elem_add_integer64	control/control.c	/^int snd_ctl_elem_add_integer64(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_elem_id_clear	control/control.c	/^void snd_ctl_elem_id_clear(snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_copy	control/control.c	/^void snd_ctl_elem_id_copy(snd_ctl_elem_id_t *dst, const snd_ctl_elem_id_t *src)$/;"	f
snd_ctl_elem_id_free	control/control.c	/^void snd_ctl_elem_id_free(snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_get_device	control/control.c	/^unsigned int snd_ctl_elem_id_get_device(const snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_get_index	control/control.c	/^unsigned int snd_ctl_elem_id_get_index(const snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_get_interface	control/control.c	/^snd_ctl_elem_iface_t snd_ctl_elem_id_get_interface(const snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_get_name	control/control.c	/^const char *snd_ctl_elem_id_get_name(const snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_get_numid	control/control.c	/^unsigned int snd_ctl_elem_id_get_numid(const snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_get_subdevice	control/control.c	/^unsigned int snd_ctl_elem_id_get_subdevice(const snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_malloc	control/control.c	/^int snd_ctl_elem_id_malloc(snd_ctl_elem_id_t **ptr)$/;"	f
snd_ctl_elem_id_set_device	control/control.c	/^void snd_ctl_elem_id_set_device(snd_ctl_elem_id_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_id_set_index	control/control.c	/^void snd_ctl_elem_id_set_index(snd_ctl_elem_id_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_id_set_interface	control/control.c	/^void snd_ctl_elem_id_set_interface(snd_ctl_elem_id_t *obj, snd_ctl_elem_iface_t val)$/;"	f
snd_ctl_elem_id_set_name	control/control.c	/^void snd_ctl_elem_id_set_name(snd_ctl_elem_id_t *obj, const char *val)$/;"	f
snd_ctl_elem_id_set_numid	control/control.c	/^void snd_ctl_elem_id_set_numid(snd_ctl_elem_id_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_id_set_subdevice	control/control.c	/^void snd_ctl_elem_id_set_subdevice(snd_ctl_elem_id_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_id_sizeof	control/control.c	/^size_t snd_ctl_elem_id_sizeof()$/;"	f
snd_ctl_elem_iface_name	control/control.c	/^const char *snd_ctl_elem_iface_name(snd_ctl_elem_iface_t iface)$/;"	f
snd_ctl_elem_iface_names	control/control.c	/^static const char *const snd_ctl_elem_iface_names[] = {$/;"	v	file:
snd_ctl_elem_info	control/control.c	/^int snd_ctl_elem_info(snd_ctl_t *ctl, snd_ctl_elem_info_t *info)$/;"	f
snd_ctl_elem_info_clear	control/control.c	/^void snd_ctl_elem_info_clear(snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_copy	control/control.c	/^void snd_ctl_elem_info_copy(snd_ctl_elem_info_t *dst, const snd_ctl_elem_info_t *src)$/;"	f
snd_ctl_elem_info_free	control/control.c	/^void snd_ctl_elem_info_free(snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_count	control/control.c	/^unsigned int snd_ctl_elem_info_get_count(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_device	control/control.c	/^unsigned int snd_ctl_elem_info_get_device(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_dimension	control/control.c	/^int INTERNAL(snd_ctl_elem_info_get_dimension)(const snd_ctl_elem_info_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_info_get_dimensions	control/control.c	/^int INTERNAL(snd_ctl_elem_info_get_dimensions)(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_id	control/control.c	/^void snd_ctl_elem_info_get_id(const snd_ctl_elem_info_t *obj, snd_ctl_elem_id_t *ptr)$/;"	f
snd_ctl_elem_info_get_index	control/control.c	/^unsigned int snd_ctl_elem_info_get_index(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_interface	control/control.c	/^snd_ctl_elem_iface_t snd_ctl_elem_info_get_interface(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_item_name	control/control.c	/^const char *snd_ctl_elem_info_get_item_name(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_items	control/control.c	/^unsigned int snd_ctl_elem_info_get_items(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_max	control/control.c	/^long snd_ctl_elem_info_get_max(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_max64	control/control.c	/^long long snd_ctl_elem_info_get_max64(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_min	control/control.c	/^long snd_ctl_elem_info_get_min(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_min64	control/control.c	/^long long snd_ctl_elem_info_get_min64(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_name	control/control.c	/^const char *snd_ctl_elem_info_get_name(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_numid	control/control.c	/^unsigned int snd_ctl_elem_info_get_numid(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_owner	control/control.c	/^pid_t snd_ctl_elem_info_get_owner(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_step	control/control.c	/^long snd_ctl_elem_info_get_step(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_step64	control/control.c	/^long long snd_ctl_elem_info_get_step64(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_subdevice	control/control.c	/^unsigned int snd_ctl_elem_info_get_subdevice(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_type	control/control.c	/^snd_ctl_elem_type_t snd_ctl_elem_info_get_type(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_inactive	control/control.c	/^int snd_ctl_elem_info_is_inactive(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_indirect	control/control.c	/^int snd_ctl_elem_info_is_indirect(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_locked	control/control.c	/^int snd_ctl_elem_info_is_locked(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_owner	control/control.c	/^int snd_ctl_elem_info_is_owner(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_readable	control/control.c	/^int snd_ctl_elem_info_is_readable(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_tlv_commandable	control/control.c	/^int snd_ctl_elem_info_is_tlv_commandable(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_tlv_readable	control/control.c	/^int snd_ctl_elem_info_is_tlv_readable(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_tlv_writable	control/control.c	/^int snd_ctl_elem_info_is_tlv_writable(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_user	control/control.c	/^int snd_ctl_elem_info_is_user(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_volatile	control/control.c	/^int snd_ctl_elem_info_is_volatile(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_writable	control/control.c	/^int snd_ctl_elem_info_is_writable(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_malloc	control/control.c	/^int snd_ctl_elem_info_malloc(snd_ctl_elem_info_t **ptr)$/;"	f
snd_ctl_elem_info_set_device	control/control.c	/^void snd_ctl_elem_info_set_device(snd_ctl_elem_info_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_info_set_id	control/control.c	/^void snd_ctl_elem_info_set_id(snd_ctl_elem_info_t *obj, const snd_ctl_elem_id_t *ptr)$/;"	f
snd_ctl_elem_info_set_index	control/control.c	/^void snd_ctl_elem_info_set_index(snd_ctl_elem_info_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_info_set_interface	control/control.c	/^void snd_ctl_elem_info_set_interface(snd_ctl_elem_info_t *obj, snd_ctl_elem_iface_t val)$/;"	f
snd_ctl_elem_info_set_item	control/control.c	/^void snd_ctl_elem_info_set_item(snd_ctl_elem_info_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_info_set_name	control/control.c	/^void snd_ctl_elem_info_set_name(snd_ctl_elem_info_t *obj, const char *val)$/;"	f
snd_ctl_elem_info_set_numid	control/control.c	/^void snd_ctl_elem_info_set_numid(snd_ctl_elem_info_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_info_set_subdevice	control/control.c	/^void snd_ctl_elem_info_set_subdevice(snd_ctl_elem_info_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_info_sizeof	control/control.c	/^size_t snd_ctl_elem_info_sizeof()$/;"	f
snd_ctl_elem_list	control/control.c	/^int snd_ctl_elem_list(snd_ctl_t *ctl, snd_ctl_elem_list_t *list)$/;"	f
snd_ctl_elem_list_alloc_space	control/control.c	/^int snd_ctl_elem_list_alloc_space(snd_ctl_elem_list_t *obj, unsigned int entries)$/;"	f
snd_ctl_elem_list_clear	control/control.c	/^void snd_ctl_elem_list_clear(snd_ctl_elem_list_t *obj)$/;"	f
snd_ctl_elem_list_copy	control/control.c	/^void snd_ctl_elem_list_copy(snd_ctl_elem_list_t *dst, const snd_ctl_elem_list_t *src)$/;"	f
snd_ctl_elem_list_free	control/control.c	/^void snd_ctl_elem_list_free(snd_ctl_elem_list_t *obj)$/;"	f
snd_ctl_elem_list_free_space	control/control.c	/^void snd_ctl_elem_list_free_space(snd_ctl_elem_list_t *obj)$/;"	f
snd_ctl_elem_list_get_count	control/control.c	/^unsigned int snd_ctl_elem_list_get_count(const snd_ctl_elem_list_t *obj)$/;"	f
snd_ctl_elem_list_get_device	control/control.c	/^unsigned int snd_ctl_elem_list_get_device(const snd_ctl_elem_list_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_list_get_id	control/control.c	/^void snd_ctl_elem_list_get_id(const snd_ctl_elem_list_t *obj, unsigned int idx, snd_ctl_elem_id_t *ptr)$/;"	f
snd_ctl_elem_list_get_index	control/control.c	/^unsigned int snd_ctl_elem_list_get_index(const snd_ctl_elem_list_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_list_get_interface	control/control.c	/^snd_ctl_elem_iface_t snd_ctl_elem_list_get_interface(const snd_ctl_elem_list_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_list_get_name	control/control.c	/^const char *snd_ctl_elem_list_get_name(const snd_ctl_elem_list_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_list_get_numid	control/control.c	/^unsigned int snd_ctl_elem_list_get_numid(const snd_ctl_elem_list_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_list_get_subdevice	control/control.c	/^unsigned int snd_ctl_elem_list_get_subdevice(const snd_ctl_elem_list_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_list_get_used	control/control.c	/^unsigned int snd_ctl_elem_list_get_used(const snd_ctl_elem_list_t *obj)$/;"	f
snd_ctl_elem_list_malloc	control/control.c	/^int snd_ctl_elem_list_malloc(snd_ctl_elem_list_t **ptr)$/;"	f
snd_ctl_elem_list_set_offset	control/control.c	/^void snd_ctl_elem_list_set_offset(snd_ctl_elem_list_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_list_sizeof	control/control.c	/^size_t snd_ctl_elem_list_sizeof()$/;"	f
snd_ctl_elem_lock	control/control.c	/^int snd_ctl_elem_lock(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)$/;"	f
snd_ctl_elem_read	control/control.c	/^int snd_ctl_elem_read(snd_ctl_t *ctl, snd_ctl_elem_value_t *control)$/;"	f
snd_ctl_elem_remove	control/control.c	/^int snd_ctl_elem_remove(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)$/;"	f
snd_ctl_elem_set_bytes	control/control.c	/^void snd_ctl_elem_set_bytes(snd_ctl_elem_value_t *obj, void *data, size_t size)$/;"	f
snd_ctl_elem_tlv_command	control/control.c	/^int snd_ctl_elem_tlv_command(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_elem_tlv_read	control/control.c	/^int snd_ctl_elem_tlv_read(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_elem_tlv_write	control/control.c	/^int snd_ctl_elem_tlv_write(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_elem_type_name	control/control.c	/^const char *snd_ctl_elem_type_name(snd_ctl_elem_type_t type)$/;"	f
snd_ctl_elem_type_names	control/control.c	/^static const char *const snd_ctl_elem_type_names[] = {$/;"	v	file:
snd_ctl_elem_unlock	control/control.c	/^int snd_ctl_elem_unlock(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)$/;"	f
snd_ctl_elem_value_clear	control/control.c	/^void snd_ctl_elem_value_clear(snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_compare	control/control.c	/^int snd_ctl_elem_value_compare(snd_ctl_elem_value_t *left, const snd_ctl_elem_value_t *right)$/;"	f
snd_ctl_elem_value_copy	control/control.c	/^void snd_ctl_elem_value_copy(snd_ctl_elem_value_t *dst, const snd_ctl_elem_value_t *src)$/;"	f
snd_ctl_elem_value_free	control/control.c	/^void snd_ctl_elem_value_free(snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_get_boolean	control/control.c	/^int snd_ctl_elem_value_get_boolean(const snd_ctl_elem_value_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_value_get_byte	control/control.c	/^unsigned char snd_ctl_elem_value_get_byte(const snd_ctl_elem_value_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_value_get_bytes	control/control.c	/^const void * snd_ctl_elem_value_get_bytes(const snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_get_device	control/control.c	/^unsigned int snd_ctl_elem_value_get_device(const snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_get_enumerated	control/control.c	/^unsigned int snd_ctl_elem_value_get_enumerated(const snd_ctl_elem_value_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_value_get_id	control/control.c	/^void snd_ctl_elem_value_get_id(const snd_ctl_elem_value_t *obj, snd_ctl_elem_id_t *ptr)$/;"	f
snd_ctl_elem_value_get_iec958	control/control.c	/^void snd_ctl_elem_value_get_iec958(const snd_ctl_elem_value_t *obj, snd_aes_iec958_t *ptr)$/;"	f
snd_ctl_elem_value_get_index	control/control.c	/^unsigned int snd_ctl_elem_value_get_index(const snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_get_integer	control/control.c	/^long snd_ctl_elem_value_get_integer(const snd_ctl_elem_value_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_value_get_integer64	control/control.c	/^long long snd_ctl_elem_value_get_integer64(const snd_ctl_elem_value_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_value_get_interface	control/control.c	/^snd_ctl_elem_iface_t snd_ctl_elem_value_get_interface(const snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_get_name	control/control.c	/^const char *snd_ctl_elem_value_get_name(const snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_get_numid	control/control.c	/^unsigned int snd_ctl_elem_value_get_numid(const snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_get_subdevice	control/control.c	/^unsigned int snd_ctl_elem_value_get_subdevice(const snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_malloc	control/control.c	/^int snd_ctl_elem_value_malloc(snd_ctl_elem_value_t **ptr)$/;"	f
snd_ctl_elem_value_set_boolean	control/control.c	/^void snd_ctl_elem_value_set_boolean(snd_ctl_elem_value_t *obj, unsigned int idx, long val)$/;"	f
snd_ctl_elem_value_set_byte	control/control.c	/^void snd_ctl_elem_value_set_byte(snd_ctl_elem_value_t *obj, unsigned int idx, unsigned char val)$/;"	f
snd_ctl_elem_value_set_device	control/control.c	/^void snd_ctl_elem_value_set_device(snd_ctl_elem_value_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_value_set_enumerated	control/control.c	/^void snd_ctl_elem_value_set_enumerated(snd_ctl_elem_value_t *obj, unsigned int idx, unsigned int val)$/;"	f
snd_ctl_elem_value_set_id	control/control.c	/^void snd_ctl_elem_value_set_id(snd_ctl_elem_value_t *obj, const snd_ctl_elem_id_t *ptr)$/;"	f
snd_ctl_elem_value_set_iec958	control/control.c	/^void snd_ctl_elem_value_set_iec958(snd_ctl_elem_value_t *obj, const snd_aes_iec958_t *ptr)$/;"	f
snd_ctl_elem_value_set_index	control/control.c	/^void snd_ctl_elem_value_set_index(snd_ctl_elem_value_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_value_set_integer	control/control.c	/^void snd_ctl_elem_value_set_integer(snd_ctl_elem_value_t *obj, unsigned int idx, long val)$/;"	f
snd_ctl_elem_value_set_integer64	control/control.c	/^void snd_ctl_elem_value_set_integer64(snd_ctl_elem_value_t *obj, unsigned int idx, long long val)$/;"	f
snd_ctl_elem_value_set_interface	control/control.c	/^void snd_ctl_elem_value_set_interface(snd_ctl_elem_value_t *obj, snd_ctl_elem_iface_t val)$/;"	f
snd_ctl_elem_value_set_name	control/control.c	/^void snd_ctl_elem_value_set_name(snd_ctl_elem_value_t *obj, const char *val)$/;"	f
snd_ctl_elem_value_set_numid	control/control.c	/^void snd_ctl_elem_value_set_numid(snd_ctl_elem_value_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_value_set_subdevice	control/control.c	/^void snd_ctl_elem_value_set_subdevice(snd_ctl_elem_value_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_value_sizeof	control/control.c	/^size_t snd_ctl_elem_value_sizeof()$/;"	f
snd_ctl_elem_write	control/control.c	/^int snd_ctl_elem_write(snd_ctl_t *ctl, snd_ctl_elem_value_t *control)$/;"	f
snd_ctl_event_clear	control/control.c	/^void snd_ctl_event_clear(snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_copy	control/control.c	/^void snd_ctl_event_copy(snd_ctl_event_t *dst, const snd_ctl_event_t *src)$/;"	f
snd_ctl_event_elem_get_device	control/control.c	/^unsigned int snd_ctl_event_elem_get_device(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_elem_get_id	control/control.c	/^void snd_ctl_event_elem_get_id(const snd_ctl_event_t *obj, snd_ctl_elem_id_t *ptr)$/;"	f
snd_ctl_event_elem_get_index	control/control.c	/^unsigned int snd_ctl_event_elem_get_index(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_elem_get_interface	control/control.c	/^snd_ctl_elem_iface_t snd_ctl_event_elem_get_interface(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_elem_get_mask	control/control.c	/^unsigned int snd_ctl_event_elem_get_mask(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_elem_get_name	control/control.c	/^const char *snd_ctl_event_elem_get_name(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_elem_get_numid	control/control.c	/^unsigned int snd_ctl_event_elem_get_numid(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_elem_get_subdevice	control/control.c	/^unsigned int snd_ctl_event_elem_get_subdevice(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_free	control/control.c	/^void snd_ctl_event_free(snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_get_type	control/control.c	/^snd_ctl_event_type_t snd_ctl_event_get_type(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_malloc	control/control.c	/^int snd_ctl_event_malloc(snd_ctl_event_t **ptr)$/;"	f
snd_ctl_event_sizeof	control/control.c	/^size_t snd_ctl_event_sizeof()$/;"	f
snd_ctl_event_type_name	control/control.c	/^const char *snd_ctl_event_type_name(snd_ctl_event_type_t type)$/;"	f
snd_ctl_event_type_names	control/control.c	/^static const char *const snd_ctl_event_type_names[] = {$/;"	v	file:
snd_ctl_ext_async	control/control_ext.c	/^static int snd_ctl_ext_async(snd_ctl_t *ctl ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_card_info	control/control_ext.c	/^static int snd_ctl_ext_card_info(snd_ctl_t *handle, snd_ctl_card_info_t *info)$/;"	f	file:
snd_ctl_ext_close	control/control_ext.c	/^static int snd_ctl_ext_close(snd_ctl_t *handle)$/;"	f	file:
snd_ctl_ext_create	control/control_ext.c	/^int snd_ctl_ext_create(snd_ctl_ext_t *ext, const char *name, int mode)$/;"	f
snd_ctl_ext_delete	control/control_ext.c	/^int snd_ctl_ext_delete(snd_ctl_ext_t *ext)$/;"	f
snd_ctl_ext_elem_add	control/control_ext.c	/^static int snd_ctl_ext_elem_add(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_elem_info	control/control_ext.c	/^static int snd_ctl_ext_elem_info(snd_ctl_t *handle, snd_ctl_elem_info_t *info)$/;"	f	file:
snd_ctl_ext_elem_list	control/control_ext.c	/^static int snd_ctl_ext_elem_list(snd_ctl_t *handle, snd_ctl_elem_list_t *list)$/;"	f	file:
snd_ctl_ext_elem_lock	control/control_ext.c	/^static int snd_ctl_ext_elem_lock(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_elem_read	control/control_ext.c	/^static int snd_ctl_ext_elem_read(snd_ctl_t *handle, snd_ctl_elem_value_t *control)$/;"	f	file:
snd_ctl_ext_elem_remove	control/control_ext.c	/^static int snd_ctl_ext_elem_remove(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_elem_replace	control/control_ext.c	/^static int snd_ctl_ext_elem_replace(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_elem_unlock	control/control_ext.c	/^static int snd_ctl_ext_elem_unlock(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_elem_write	control/control_ext.c	/^static int snd_ctl_ext_elem_write(snd_ctl_t *handle, snd_ctl_elem_value_t *control)$/;"	f	file:
snd_ctl_ext_get_power_state	control/control_ext.c	/^static int snd_ctl_ext_get_power_state(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_hwdep_info	control/control_ext.c	/^static int snd_ctl_ext_hwdep_info(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_next_device	control/control_ext.c	/^static int snd_ctl_ext_next_device(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_nonblock	control/control_ext.c	/^static int snd_ctl_ext_nonblock(snd_ctl_t *handle, int nonblock)$/;"	f	file:
snd_ctl_ext_ops	control/control_ext.c	/^static const snd_ctl_ops_t snd_ctl_ext_ops = {$/;"	v	file:
snd_ctl_ext_pcm_info	control/control_ext.c	/^static int snd_ctl_ext_pcm_info(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_poll_descriptors	control/control_ext.c	/^static int snd_ctl_ext_poll_descriptors(snd_ctl_t *handle, struct pollfd *pfds, unsigned int space)$/;"	f	file:
snd_ctl_ext_poll_descriptors_count	control/control_ext.c	/^static int snd_ctl_ext_poll_descriptors_count(snd_ctl_t *handle)$/;"	f	file:
snd_ctl_ext_poll_revents	control/control_ext.c	/^static int snd_ctl_ext_poll_revents(snd_ctl_t *handle, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f	file:
snd_ctl_ext_prefer_subdevice	control/control_ext.c	/^static int snd_ctl_ext_prefer_subdevice(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_rawmidi_info	control/control_ext.c	/^static int snd_ctl_ext_rawmidi_info(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_read	control/control_ext.c	/^static int snd_ctl_ext_read(snd_ctl_t *handle, snd_ctl_event_t *event)$/;"	f	file:
snd_ctl_ext_set_power_state	control/control_ext.c	/^static int snd_ctl_ext_set_power_state(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_subscribe_events	control/control_ext.c	/^static int snd_ctl_ext_subscribe_events(snd_ctl_t *handle, int subscribe)$/;"	f	file:
snd_ctl_get_dB_range	control/tlv.c	/^int snd_ctl_get_dB_range(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_get_power_state	control/control.c	/^int snd_ctl_get_power_state(snd_ctl_t *ctl, unsigned int *state)$/;"	f
snd_ctl_hw_async	control/control_hw.c	/^static int snd_ctl_hw_async(snd_ctl_t *ctl, int sig, pid_t pid)$/;"	f	file:
snd_ctl_hw_card_info	control/control_hw.c	/^static int snd_ctl_hw_card_info(snd_ctl_t *handle, snd_ctl_card_info_t *info)$/;"	f	file:
snd_ctl_hw_close	control/control_hw.c	/^static int snd_ctl_hw_close(snd_ctl_t *handle)$/;"	f	file:
snd_ctl_hw_elem_add	control/control_hw.c	/^static int snd_ctl_hw_elem_add(snd_ctl_t *handle, snd_ctl_elem_info_t *info)$/;"	f	file:
snd_ctl_hw_elem_info	control/control_hw.c	/^static int snd_ctl_hw_elem_info(snd_ctl_t *handle, snd_ctl_elem_info_t *info)$/;"	f	file:
snd_ctl_hw_elem_list	control/control_hw.c	/^static int snd_ctl_hw_elem_list(snd_ctl_t *handle, snd_ctl_elem_list_t *list)$/;"	f	file:
snd_ctl_hw_elem_lock	control/control_hw.c	/^static int snd_ctl_hw_elem_lock(snd_ctl_t *handle, snd_ctl_elem_id_t *id)$/;"	f	file:
snd_ctl_hw_elem_read	control/control_hw.c	/^static int snd_ctl_hw_elem_read(snd_ctl_t *handle, snd_ctl_elem_value_t *control)$/;"	f	file:
snd_ctl_hw_elem_remove	control/control_hw.c	/^static int snd_ctl_hw_elem_remove(snd_ctl_t *handle, snd_ctl_elem_id_t *id)$/;"	f	file:
snd_ctl_hw_elem_replace	control/control_hw.c	/^static int snd_ctl_hw_elem_replace(snd_ctl_t *handle, snd_ctl_elem_info_t *info)$/;"	f	file:
snd_ctl_hw_elem_tlv	control/control_hw.c	/^static int snd_ctl_hw_elem_tlv(snd_ctl_t *handle, int op_flag,$/;"	f	file:
snd_ctl_hw_elem_unlock	control/control_hw.c	/^static int snd_ctl_hw_elem_unlock(snd_ctl_t *handle, snd_ctl_elem_id_t *id)$/;"	f	file:
snd_ctl_hw_elem_write	control/control_hw.c	/^static int snd_ctl_hw_elem_write(snd_ctl_t *handle, snd_ctl_elem_value_t *control)$/;"	f	file:
snd_ctl_hw_get_power_state	control/control_hw.c	/^static int snd_ctl_hw_get_power_state(snd_ctl_t *handle, unsigned int *state)$/;"	f	file:
snd_ctl_hw_hwdep_info	control/control_hw.c	/^static int snd_ctl_hw_hwdep_info(snd_ctl_t *handle, snd_hwdep_info_t * info)$/;"	f	file:
snd_ctl_hw_hwdep_next_device	control/control_hw.c	/^static int snd_ctl_hw_hwdep_next_device(snd_ctl_t *handle, int * device)$/;"	f	file:
snd_ctl_hw_nonblock	control/control_hw.c	/^static int snd_ctl_hw_nonblock(snd_ctl_t *handle, int nonblock)$/;"	f	file:
snd_ctl_hw_open	control/control_hw.c	/^int snd_ctl_hw_open(snd_ctl_t **handle, const char *name, int card, int mode)$/;"	f
snd_ctl_hw_ops	control/control_hw.c	/^static const snd_ctl_ops_t snd_ctl_hw_ops = {$/;"	v	file:
snd_ctl_hw_pcm_info	control/control_hw.c	/^static int snd_ctl_hw_pcm_info(snd_ctl_t *handle, snd_pcm_info_t * info)$/;"	f	file:
snd_ctl_hw_pcm_next_device	control/control_hw.c	/^static int snd_ctl_hw_pcm_next_device(snd_ctl_t *handle, int * device)$/;"	f	file:
snd_ctl_hw_pcm_prefer_subdevice	control/control_hw.c	/^static int snd_ctl_hw_pcm_prefer_subdevice(snd_ctl_t *handle, int subdev)$/;"	f	file:
snd_ctl_hw_rawmidi_info	control/control_hw.c	/^static int snd_ctl_hw_rawmidi_info(snd_ctl_t *handle, snd_rawmidi_info_t * info)$/;"	f	file:
snd_ctl_hw_rawmidi_next_device	control/control_hw.c	/^static int snd_ctl_hw_rawmidi_next_device(snd_ctl_t *handle, int * device)$/;"	f	file:
snd_ctl_hw_rawmidi_prefer_subdevice	control/control_hw.c	/^static int snd_ctl_hw_rawmidi_prefer_subdevice(snd_ctl_t *handle, int subdev)$/;"	f	file:
snd_ctl_hw_read	control/control_hw.c	/^static int snd_ctl_hw_read(snd_ctl_t *handle, snd_ctl_event_t *event)$/;"	f	file:
snd_ctl_hw_set_power_state	control/control_hw.c	/^static int snd_ctl_hw_set_power_state(snd_ctl_t *handle, unsigned int state)$/;"	f	file:
snd_ctl_hw_subscribe_events	control/control_hw.c	/^static int snd_ctl_hw_subscribe_events(snd_ctl_t *handle, int subscribe)$/;"	f	file:
snd_ctl_hw_t	control/control_hw.c	/^} snd_ctl_hw_t;$/;"	t	typeref:struct:__anon7	file:
snd_ctl_hwdep_info	control/control.c	/^int snd_ctl_hwdep_info(snd_ctl_t *ctl, snd_hwdep_info_t * info)$/;"	f
snd_ctl_hwdep_next_device	control/control.c	/^int snd_ctl_hwdep_next_device(snd_ctl_t *ctl, int *device)$/;"	f
snd_ctl_name	control/control.c	/^const char *snd_ctl_name(snd_ctl_t *ctl)$/;"	f
snd_ctl_new	control/control.c	/^int snd_ctl_new(snd_ctl_t **ctlp, snd_ctl_type_t type, const char *name)$/;"	f
snd_ctl_new	control/control_local.h	93;"	d
snd_ctl_nonblock	control/control.c	/^int snd_ctl_nonblock(snd_ctl_t *ctl, int nonblock)$/;"	f
snd_ctl_open	control/control.c	/^int snd_ctl_open(snd_ctl_t **ctlp, const char *name, int mode)$/;"	f
snd_ctl_open_conf	control/control.c	/^static int snd_ctl_open_conf(snd_ctl_t **ctlp, const char *name,$/;"	f	file:
snd_ctl_open_lconf	control/control.c	/^int snd_ctl_open_lconf(snd_ctl_t **ctlp, const char *name,$/;"	f
snd_ctl_open_noupdate	control/control.c	/^static int snd_ctl_open_noupdate(snd_ctl_t **ctlp, snd_config_t *root, const char *name, int mode)$/;"	f	file:
snd_ctl_ops_t	control/control_local.h	/^} snd_ctl_ops_t;$/;"	t	typeref:struct:_snd_ctl_ops
snd_ctl_pcm_info	control/control.c	/^int snd_ctl_pcm_info(snd_ctl_t *ctl, snd_pcm_info_t * info)$/;"	f
snd_ctl_pcm_next_device	control/control.c	/^int snd_ctl_pcm_next_device(snd_ctl_t *ctl, int * device)$/;"	f
snd_ctl_pcm_prefer_subdevice	control/control.c	/^int snd_ctl_pcm_prefer_subdevice(snd_ctl_t *ctl, int subdev)$/;"	f
snd_ctl_poll_descriptors	control/control.c	/^int snd_ctl_poll_descriptors(snd_ctl_t *ctl, struct pollfd *pfds, unsigned int space)$/;"	f
snd_ctl_poll_descriptors_count	control/control.c	/^int snd_ctl_poll_descriptors_count(snd_ctl_t *ctl)$/;"	f
snd_ctl_poll_descriptors_revents	control/control.c	/^int snd_ctl_poll_descriptors_revents(snd_ctl_t *ctl, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_ctl_rawmidi_info	control/control.c	/^int snd_ctl_rawmidi_info(snd_ctl_t *ctl, snd_rawmidi_info_t * info)$/;"	f
snd_ctl_rawmidi_next_device	control/control.c	/^int snd_ctl_rawmidi_next_device(snd_ctl_t *ctl, int * device)$/;"	f
snd_ctl_rawmidi_prefer_subdevice	control/control.c	/^int snd_ctl_rawmidi_prefer_subdevice(snd_ctl_t *ctl, int subdev)$/;"	f
snd_ctl_read	control/control.c	/^int snd_ctl_read(snd_ctl_t *ctl, snd_ctl_event_t *event)$/;"	f
snd_ctl_set_power_state	control/control.c	/^int snd_ctl_set_power_state(snd_ctl_t *ctl, unsigned int state)$/;"	f
snd_ctl_shm_action	control/control_shm.c	/^static int snd_ctl_shm_action(snd_ctl_t *ctl)$/;"	f	file:
snd_ctl_shm_action_fd	control/control_shm.c	/^static int snd_ctl_shm_action_fd(snd_ctl_t *ctl, int *fd)$/;"	f	file:
snd_ctl_shm_async	control/control_shm.c	/^static int snd_ctl_shm_async(snd_ctl_t *ctl, int sig, pid_t pid)$/;"	f	file:
snd_ctl_shm_card_info	control/control_shm.c	/^static int snd_ctl_shm_card_info(snd_ctl_t *ctl, snd_ctl_card_info_t *info)$/;"	f	file:
snd_ctl_shm_close	control/control_shm.c	/^static int snd_ctl_shm_close(snd_ctl_t *ctl)$/;"	f	file:
snd_ctl_shm_elem_info	control/control_shm.c	/^static int snd_ctl_shm_elem_info(snd_ctl_t *ctl, snd_ctl_elem_info_t *info)$/;"	f	file:
snd_ctl_shm_elem_list	control/control_shm.c	/^static int snd_ctl_shm_elem_list(snd_ctl_t *ctl, snd_ctl_elem_list_t *list)$/;"	f	file:
snd_ctl_shm_elem_lock	control/control_shm.c	/^static int snd_ctl_shm_elem_lock(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)$/;"	f	file:
snd_ctl_shm_elem_read	control/control_shm.c	/^static int snd_ctl_shm_elem_read(snd_ctl_t *ctl, snd_ctl_elem_value_t *control)$/;"	f	file:
snd_ctl_shm_elem_unlock	control/control_shm.c	/^static int snd_ctl_shm_elem_unlock(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)$/;"	f	file:
snd_ctl_shm_elem_write	control/control_shm.c	/^static int snd_ctl_shm_elem_write(snd_ctl_t *ctl, snd_ctl_elem_value_t *control)$/;"	f	file:
snd_ctl_shm_get_power_state	control/control_shm.c	/^static int snd_ctl_shm_get_power_state(snd_ctl_t *ctl, unsigned int *state)$/;"	f	file:
snd_ctl_shm_hwdep_info	control/control_shm.c	/^static int snd_ctl_shm_hwdep_info(snd_ctl_t *ctl, snd_hwdep_info_t * info)$/;"	f	file:
snd_ctl_shm_hwdep_next_device	control/control_shm.c	/^static int snd_ctl_shm_hwdep_next_device(snd_ctl_t *ctl, int * device)$/;"	f	file:
snd_ctl_shm_nonblock	control/control_shm.c	/^static int snd_ctl_shm_nonblock(snd_ctl_t *handle ATTRIBUTE_UNUSED, int nonblock ATTRIBUTE_UNUSED)$/;"	f	file:
snd_ctl_shm_open	control/control_shm.c	/^int snd_ctl_shm_open(snd_ctl_t **handlep, const char *name, const char *sockname, const char *sname, int mode)$/;"	f
snd_ctl_shm_ops	control/control_shm.c	/^static const snd_ctl_ops_t snd_ctl_shm_ops = {$/;"	v	file:
snd_ctl_shm_pcm_info	control/control_shm.c	/^static int snd_ctl_shm_pcm_info(snd_ctl_t *ctl, snd_pcm_info_t * info)$/;"	f	file:
snd_ctl_shm_pcm_next_device	control/control_shm.c	/^static int snd_ctl_shm_pcm_next_device(snd_ctl_t *ctl, int * device)$/;"	f	file:
snd_ctl_shm_pcm_prefer_subdevice	control/control_shm.c	/^static int snd_ctl_shm_pcm_prefer_subdevice(snd_ctl_t *ctl, int subdev)$/;"	f	file:
snd_ctl_shm_poll_descriptor	control/control_shm.c	/^static int snd_ctl_shm_poll_descriptor(snd_ctl_t *ctl)$/;"	f	file:
snd_ctl_shm_rawmidi_info	control/control_shm.c	/^static int snd_ctl_shm_rawmidi_info(snd_ctl_t *ctl, snd_rawmidi_info_t * info)$/;"	f	file:
snd_ctl_shm_rawmidi_next_device	control/control_shm.c	/^static int snd_ctl_shm_rawmidi_next_device(snd_ctl_t *ctl, int * device)$/;"	f	file:
snd_ctl_shm_rawmidi_prefer_subdevice	control/control_shm.c	/^static int snd_ctl_shm_rawmidi_prefer_subdevice(snd_ctl_t *ctl, int subdev)$/;"	f	file:
snd_ctl_shm_read	control/control_shm.c	/^static int snd_ctl_shm_read(snd_ctl_t *ctl, snd_ctl_event_t *event)$/;"	f	file:
snd_ctl_shm_set_power_state	control/control_shm.c	/^static int snd_ctl_shm_set_power_state(snd_ctl_t *ctl, unsigned int state)$/;"	f	file:
snd_ctl_shm_subscribe_events	control/control_shm.c	/^static int snd_ctl_shm_subscribe_events(snd_ctl_t *ctl, int subscribe)$/;"	f	file:
snd_ctl_shm_t	control/control_shm.c	/^} snd_ctl_shm_t;$/;"	t	typeref:struct:__anon8	file:
snd_ctl_subscribe_events	control/control.c	/^int snd_ctl_subscribe_events(snd_ctl_t *ctl, int subscribe)$/;"	f
snd_ctl_tlv_do	control/control.c	/^static int snd_ctl_tlv_do(snd_ctl_t *ctl, int op_flag,$/;"	f	file:
snd_ctl_type	control/control.c	/^snd_ctl_type_t snd_ctl_type(snd_ctl_t *ctl)$/;"	f
snd_ctl_wait	control/control.c	/^int snd_ctl_wait(snd_ctl_t *ctl, int timeout)$/;"	f
snd_determine_driver	confmisc.c	/^int snd_determine_driver(int card, char **driver)$/;"	f
snd_device_name_free_hint	control/namehint.c	/^int snd_device_name_free_hint(void **hints)$/;"	f
snd_device_name_get_hint	control/namehint.c	/^char *snd_device_name_get_hint(const void *hint, const char *id)$/;"	f
snd_device_name_hint	control/namehint.c	/^int snd_device_name_hint(int card, const char *iface, void ***hints)$/;"	f
snd_dlclose	dlmisc.c	/^int snd_dlclose(void *handle)$/;"	f
snd_dlobj_cache_add	dlmisc.c	/^int snd_dlobj_cache_add(const char *name, void *dlobj, void *open_func)$/;"	f
snd_dlobj_cache_cleanup	dlmisc.c	/^void snd_dlobj_cache_cleanup(void)$/;"	f
snd_dlobj_cache_lookup	dlmisc.c	/^void *snd_dlobj_cache_lookup(const char *name)$/;"	f
snd_dlopen	dlmisc.c	/^void *snd_dlopen(const char *name, int mode)$/;"	f
snd_dlsym	dlmisc.c	/^void *snd_dlsym(void *handle, const char *name, const char *version)$/;"	f
snd_dlsym_start	dlmisc.c	/^struct snd_dlsym_link *snd_dlsym_start = NULL;$/;"	v	typeref:struct:snd_dlsym_link
snd_dlsym_verify	dlmisc.c	/^static int snd_dlsym_verify(void *handle, const char *name, const char *version)$/;"	f	file:
snd_err_msg	error.c	/^snd_lib_error_handler_t snd_err_msg = snd_err_msg_default;$/;"	v
snd_err_msg_default	error.c	/^static void snd_err_msg_default(const char *file, int line, const char *function, int err, const char *fmt, ...)$/;"	f	file:
snd_error_codes	error.c	/^static const char *snd_error_codes[] =$/;"	v	file:
snd_ext_parm	pcm/pcm_ext_parm.h	/^struct snd_ext_parm {$/;"	s
snd_ext_parm_clear	pcm/pcm_ext_parm.h	27;"	d
snd_ext_parm_clear	pcm/pcm_extplug.c	/^void snd_ext_parm_clear(struct snd_ext_parm *parm)$/;"	f
snd_ext_parm_interval_refine	pcm/pcm_ext_parm.h	31;"	d
snd_ext_parm_interval_refine	pcm/pcm_extplug.c	/^int snd_ext_parm_interval_refine(snd_interval_t *ival, struct snd_ext_parm *parm, int type)$/;"	f
snd_ext_parm_mask_refine	pcm/pcm_ext_parm.h	33;"	d
snd_ext_parm_mask_refine	pcm/pcm_extplug.c	/^int snd_ext_parm_mask_refine(snd_mask_t *mask, struct snd_ext_parm *parm, int type)$/;"	f
snd_ext_parm_set_list	pcm/pcm_ext_parm.h	25;"	d
snd_ext_parm_set_list	pcm/pcm_extplug.c	/^int snd_ext_parm_set_list(struct snd_ext_parm *parm, unsigned int num_list, const unsigned int *list)$/;"	f
snd_ext_parm_set_minmax	pcm/pcm_ext_parm.h	23;"	d
snd_ext_parm_set_minmax	pcm/pcm_extplug.c	/^int snd_ext_parm_set_minmax(struct snd_ext_parm *parm, unsigned int min, unsigned int max)$/;"	f
snd_func_card_driver	confmisc.c	/^int snd_func_card_driver(snd_config_t **dst, snd_config_t *root, snd_config_t *src,$/;"	f
snd_func_card_id	confmisc.c	/^int snd_func_card_id(snd_config_t **dst, snd_config_t *root, snd_config_t *src,$/;"	f
snd_func_card_inum	confmisc.c	/^int snd_func_card_inum(snd_config_t **dst, snd_config_t *root, snd_config_t *src,$/;"	f
snd_func_card_name	confmisc.c	/^int snd_func_card_name(snd_config_t **dst, snd_config_t *root,$/;"	f
snd_func_concat	confmisc.c	/^int snd_func_concat(snd_config_t **dst, snd_config_t *root, snd_config_t *src,$/;"	f
snd_func_datadir	confmisc.c	/^int snd_func_datadir(snd_config_t **dst, snd_config_t *root ATTRIBUTE_UNUSED,$/;"	f
snd_func_getenv	confmisc.c	/^int snd_func_getenv(snd_config_t **dst, snd_config_t *root, snd_config_t *src,$/;"	f
snd_func_iadd	confmisc.c	/^int snd_func_iadd(snd_config_t **dst, snd_config_t *root,$/;"	f
snd_func_igetenv	confmisc.c	/^int snd_func_igetenv(snd_config_t **dst, snd_config_t *root, snd_config_t *src,$/;"	f
snd_func_imul	confmisc.c	/^int snd_func_imul(snd_config_t **dst, snd_config_t *root,$/;"	f
snd_func_iops	confmisc.c	/^static int snd_func_iops(snd_config_t **dst,$/;"	f	file:
snd_func_pcm_args_by_class	confmisc.c	/^int snd_func_pcm_args_by_class(snd_config_t **dst, snd_config_t *root, snd_config_t *src, void *private_data)$/;"	f
snd_func_pcm_id	confmisc.c	/^int snd_func_pcm_id(snd_config_t **dst, snd_config_t *root, snd_config_t *src, void *private_data)$/;"	f
snd_func_private_card_driver	confmisc.c	/^int snd_func_private_card_driver(snd_config_t **dst, snd_config_t *root ATTRIBUTE_UNUSED, snd_config_t *src,$/;"	f
snd_func_private_pcm_subdevice	confmisc.c	/^int snd_func_private_pcm_subdevice(snd_config_t **dst, snd_config_t *root ATTRIBUTE_UNUSED,$/;"	f
snd_func_private_string	confmisc.c	/^int snd_func_private_string(snd_config_t **dst, snd_config_t *root ATTRIBUTE_UNUSED,$/;"	f
snd_func_refer	confmisc.c	/^int snd_func_refer(snd_config_t **dst, snd_config_t *root, snd_config_t *src,$/;"	f
snd_hctl_async	control/hcontrol.c	/^int snd_hctl_async(snd_hctl_t *hctl, int sig, pid_t pid)$/;"	f
snd_hctl_close	control/hcontrol.c	/^int snd_hctl_close(snd_hctl_t *hctl)$/;"	f
snd_hctl_compare_default	control/hcontrol.c	/^static int snd_hctl_compare_default(const snd_hctl_elem_t *c1,$/;"	f	file:
snd_hctl_compare_fast	control/hcontrol.c	/^int snd_hctl_compare_fast(const snd_hctl_elem_t *c1,$/;"	f
snd_hctl_compare_mixer_priority_lookup	control/hcontrol.c	/^static int snd_hctl_compare_mixer_priority_lookup(const char **name, const char * const *names, int coef)$/;"	f	file:
snd_hctl_ctl	control/hcontrol.c	/^snd_ctl_t *snd_hctl_ctl(snd_hctl_t *hctl)$/;"	f
snd_hctl_elem_add	control/hcontrol.c	/^static int snd_hctl_elem_add(snd_hctl_t *hctl, snd_hctl_elem_t *elem)$/;"	f	file:
snd_hctl_elem_get_callback_private	control/hcontrol.c	/^void * snd_hctl_elem_get_callback_private(const snd_hctl_elem_t *obj)$/;"	f
snd_hctl_elem_get_device	control/hcontrol.c	/^unsigned int snd_hctl_elem_get_device(const snd_hctl_elem_t *obj)$/;"	f
snd_hctl_elem_get_hctl	control/hcontrol.c	/^snd_hctl_t *snd_hctl_elem_get_hctl(snd_hctl_elem_t *elem)$/;"	f
snd_hctl_elem_get_id	control/hcontrol.c	/^void snd_hctl_elem_get_id(const snd_hctl_elem_t *obj, snd_ctl_elem_id_t *ptr)$/;"	f
snd_hctl_elem_get_index	control/hcontrol.c	/^unsigned int snd_hctl_elem_get_index(const snd_hctl_elem_t *obj)$/;"	f
snd_hctl_elem_get_interface	control/hcontrol.c	/^snd_ctl_elem_iface_t snd_hctl_elem_get_interface(const snd_hctl_elem_t *obj)$/;"	f
snd_hctl_elem_get_name	control/hcontrol.c	/^const char *snd_hctl_elem_get_name(const snd_hctl_elem_t *obj)$/;"	f
snd_hctl_elem_get_numid	control/hcontrol.c	/^unsigned int snd_hctl_elem_get_numid(const snd_hctl_elem_t *obj)$/;"	f
snd_hctl_elem_get_subdevice	control/hcontrol.c	/^unsigned int snd_hctl_elem_get_subdevice(const snd_hctl_elem_t *obj)$/;"	f
snd_hctl_elem_info	control/hcontrol.c	/^int snd_hctl_elem_info(snd_hctl_elem_t *elem, snd_ctl_elem_info_t *info)$/;"	f
snd_hctl_elem_next	control/hcontrol.c	/^snd_hctl_elem_t *snd_hctl_elem_next(snd_hctl_elem_t *elem)$/;"	f
snd_hctl_elem_prev	control/hcontrol.c	/^snd_hctl_elem_t *snd_hctl_elem_prev(snd_hctl_elem_t *elem)$/;"	f
snd_hctl_elem_read	control/hcontrol.c	/^int snd_hctl_elem_read(snd_hctl_elem_t *elem, snd_ctl_elem_value_t * value)$/;"	f
snd_hctl_elem_remove	control/hcontrol.c	/^static void snd_hctl_elem_remove(snd_hctl_t *hctl, unsigned int idx)$/;"	f	file:
snd_hctl_elem_set_callback	control/hcontrol.c	/^void snd_hctl_elem_set_callback(snd_hctl_elem_t *obj, snd_hctl_elem_callback_t val)$/;"	f
snd_hctl_elem_set_callback_private	control/hcontrol.c	/^void snd_hctl_elem_set_callback_private(snd_hctl_elem_t *obj, void * val)$/;"	f
snd_hctl_elem_throw_event	control/hcontrol.c	/^static int snd_hctl_elem_throw_event(snd_hctl_elem_t *elem,$/;"	f	file:
snd_hctl_elem_tlv_command	control/hcontrol.c	/^int snd_hctl_elem_tlv_command(snd_hctl_elem_t *elem, const unsigned int *tlv)$/;"	f
snd_hctl_elem_tlv_read	control/hcontrol.c	/^int snd_hctl_elem_tlv_read(snd_hctl_elem_t *elem, unsigned int *tlv, unsigned int tlv_size)$/;"	f
snd_hctl_elem_tlv_write	control/hcontrol.c	/^int snd_hctl_elem_tlv_write(snd_hctl_elem_t *elem, const unsigned int *tlv)$/;"	f
snd_hctl_elem_write	control/hcontrol.c	/^int snd_hctl_elem_write(snd_hctl_elem_t *elem, snd_ctl_elem_value_t * value)$/;"	f
snd_hctl_find_elem	control/hcontrol.c	/^snd_hctl_elem_t *snd_hctl_find_elem(snd_hctl_t *hctl, const snd_ctl_elem_id_t *id)$/;"	f
snd_hctl_first_elem	control/hcontrol.c	/^snd_hctl_elem_t *snd_hctl_first_elem(snd_hctl_t *hctl)$/;"	f
snd_hctl_free	control/hcontrol.c	/^int snd_hctl_free(snd_hctl_t *hctl)$/;"	f
snd_hctl_get_callback_private	control/hcontrol.c	/^void *snd_hctl_get_callback_private(snd_hctl_t *hctl)$/;"	f
snd_hctl_get_count	control/hcontrol.c	/^unsigned int snd_hctl_get_count(snd_hctl_t *hctl)$/;"	f
snd_hctl_handle_event	control/hcontrol.c	/^static int snd_hctl_handle_event(snd_hctl_t *hctl, snd_ctl_event_t *event)$/;"	f	file:
snd_hctl_handle_events	control/hcontrol.c	/^int snd_hctl_handle_events(snd_hctl_t *hctl)$/;"	f
snd_hctl_last_elem	control/hcontrol.c	/^snd_hctl_elem_t *snd_hctl_last_elem(snd_hctl_t *hctl)$/;"	f
snd_hctl_load	control/hcontrol.c	/^int snd_hctl_load(snd_hctl_t *hctl)$/;"	f
snd_hctl_name	control/hcontrol.c	/^const char *snd_hctl_name(snd_hctl_t *hctl)$/;"	f
snd_hctl_nonblock	control/hcontrol.c	/^int snd_hctl_nonblock(snd_hctl_t *hctl, int nonblock)$/;"	f
snd_hctl_open	control/hcontrol.c	/^int snd_hctl_open(snd_hctl_t **hctlp, const char *name, int mode)$/;"	f
snd_hctl_open_ctl	control/hcontrol.c	/^int snd_hctl_open_ctl(snd_hctl_t **hctlp, snd_ctl_t *ctl)$/;"	f
snd_hctl_poll_descriptors	control/hcontrol.c	/^int snd_hctl_poll_descriptors(snd_hctl_t *hctl, struct pollfd *pfds, unsigned int space)$/;"	f
snd_hctl_poll_descriptors_count	control/hcontrol.c	/^int snd_hctl_poll_descriptors_count(snd_hctl_t *hctl)$/;"	f
snd_hctl_poll_descriptors_revents	control/hcontrol.c	/^int snd_hctl_poll_descriptors_revents(snd_hctl_t *hctl, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_hctl_set_callback	control/hcontrol.c	/^void snd_hctl_set_callback(snd_hctl_t *hctl, snd_hctl_callback_t callback)$/;"	f
snd_hctl_set_callback_private	control/hcontrol.c	/^void snd_hctl_set_callback_private(snd_hctl_t *hctl, void *callback_private)$/;"	f
snd_hctl_set_compare	control/hcontrol.c	/^int snd_hctl_set_compare(snd_hctl_t *hctl, snd_hctl_compare_t compare)$/;"	f
snd_hctl_sort	control/hcontrol.c	/^static void snd_hctl_sort(snd_hctl_t *hctl)$/;"	f	file:
snd_hctl_throw_event	control/hcontrol.c	/^static int snd_hctl_throw_event(snd_hctl_t *hctl, unsigned int mask,$/;"	f	file:
snd_hctl_wait	control/hcontrol.c	/^int snd_hctl_wait(snd_hctl_t *hctl, int timeout)$/;"	f
snd_hwdep_close	hwdep/hwdep.c	/^int snd_hwdep_close(snd_hwdep_t *hwdep)$/;"	f
snd_hwdep_dsp_image_copy	hwdep/hwdep.c	/^void snd_hwdep_dsp_image_copy(snd_hwdep_dsp_image_t *dst, const snd_hwdep_dsp_image_t *src)$/;"	f
snd_hwdep_dsp_image_free	hwdep/hwdep.c	/^void snd_hwdep_dsp_image_free(snd_hwdep_dsp_image_t *info)$/;"	f
snd_hwdep_dsp_image_get_image	hwdep/hwdep.c	/^const void *snd_hwdep_dsp_image_get_image(const snd_hwdep_dsp_image_t *obj)$/;"	f
snd_hwdep_dsp_image_get_index	hwdep/hwdep.c	/^unsigned int snd_hwdep_dsp_image_get_index(const snd_hwdep_dsp_image_t *obj)$/;"	f
snd_hwdep_dsp_image_get_length	hwdep/hwdep.c	/^size_t snd_hwdep_dsp_image_get_length(const snd_hwdep_dsp_image_t *obj)$/;"	f
snd_hwdep_dsp_image_get_name	hwdep/hwdep.c	/^const char *snd_hwdep_dsp_image_get_name(const snd_hwdep_dsp_image_t *obj)$/;"	f
snd_hwdep_dsp_image_malloc	hwdep/hwdep.c	/^int snd_hwdep_dsp_image_malloc(snd_hwdep_dsp_image_t **info)$/;"	f
snd_hwdep_dsp_image_set_image	hwdep/hwdep.c	/^void snd_hwdep_dsp_image_set_image(snd_hwdep_dsp_image_t *obj, void *image)$/;"	f
snd_hwdep_dsp_image_set_index	hwdep/hwdep.c	/^void snd_hwdep_dsp_image_set_index(snd_hwdep_dsp_image_t *obj, unsigned int index)$/;"	f
snd_hwdep_dsp_image_set_length	hwdep/hwdep.c	/^void snd_hwdep_dsp_image_set_length(snd_hwdep_dsp_image_t *obj, size_t length)$/;"	f
snd_hwdep_dsp_image_set_name	hwdep/hwdep.c	/^void snd_hwdep_dsp_image_set_name(snd_hwdep_dsp_image_t *obj, const char *name)$/;"	f
snd_hwdep_dsp_image_sizeof	hwdep/hwdep.c	/^size_t snd_hwdep_dsp_image_sizeof()$/;"	f
snd_hwdep_dsp_load	hwdep/hwdep.c	/^int snd_hwdep_dsp_load(snd_hwdep_t *hwdep, snd_hwdep_dsp_image_t *block)$/;"	f
snd_hwdep_dsp_status	hwdep/hwdep.c	/^int snd_hwdep_dsp_status(snd_hwdep_t *hwdep, snd_hwdep_dsp_status_t *info)$/;"	f
snd_hwdep_dsp_status_copy	hwdep/hwdep.c	/^void snd_hwdep_dsp_status_copy(snd_hwdep_dsp_status_t *dst, const snd_hwdep_dsp_status_t *src)$/;"	f
snd_hwdep_dsp_status_free	hwdep/hwdep.c	/^void snd_hwdep_dsp_status_free(snd_hwdep_dsp_status_t *info)$/;"	f
snd_hwdep_dsp_status_get_chip_ready	hwdep/hwdep.c	/^unsigned int snd_hwdep_dsp_status_get_chip_ready(const snd_hwdep_dsp_status_t *obj)$/;"	f
snd_hwdep_dsp_status_get_dsp_loaded	hwdep/hwdep.c	/^unsigned int snd_hwdep_dsp_status_get_dsp_loaded(const snd_hwdep_dsp_status_t *info)$/;"	f
snd_hwdep_dsp_status_get_id	hwdep/hwdep.c	/^const char *snd_hwdep_dsp_status_get_id(const snd_hwdep_dsp_status_t *obj)$/;"	f
snd_hwdep_dsp_status_get_num_dsps	hwdep/hwdep.c	/^unsigned int snd_hwdep_dsp_status_get_num_dsps(const snd_hwdep_dsp_status_t *obj)$/;"	f
snd_hwdep_dsp_status_get_version	hwdep/hwdep.c	/^unsigned int snd_hwdep_dsp_status_get_version(const snd_hwdep_dsp_status_t *obj)$/;"	f
snd_hwdep_dsp_status_malloc	hwdep/hwdep.c	/^int snd_hwdep_dsp_status_malloc(snd_hwdep_dsp_status_t **info)$/;"	f
snd_hwdep_dsp_status_sizeof	hwdep/hwdep.c	/^size_t snd_hwdep_dsp_status_sizeof()$/;"	f
snd_hwdep_hw_close	hwdep/hwdep_hw.c	/^static int snd_hwdep_hw_close(snd_hwdep_t *hwdep)$/;"	f	file:
snd_hwdep_hw_info	hwdep/hwdep_hw.c	/^static int snd_hwdep_hw_info(snd_hwdep_t *hwdep, snd_hwdep_info_t *info)$/;"	f	file:
snd_hwdep_hw_ioctl	hwdep/hwdep_hw.c	/^static int snd_hwdep_hw_ioctl(snd_hwdep_t *hwdep, unsigned int request, void * arg)$/;"	f	file:
snd_hwdep_hw_nonblock	hwdep/hwdep_hw.c	/^static int snd_hwdep_hw_nonblock(snd_hwdep_t *hwdep, int nonblock)$/;"	f	file:
snd_hwdep_hw_open	hwdep/hwdep_hw.c	/^int snd_hwdep_hw_open(snd_hwdep_t **handle, const char *name, int card, int device, int mode)$/;"	f
snd_hwdep_hw_ops	hwdep/hwdep_hw.c	/^static const snd_hwdep_ops_t snd_hwdep_hw_ops = {$/;"	v	file:
snd_hwdep_hw_read	hwdep/hwdep_hw.c	/^static ssize_t snd_hwdep_hw_read(snd_hwdep_t *hwdep, void *buffer, size_t size)$/;"	f	file:
snd_hwdep_hw_write	hwdep/hwdep_hw.c	/^static ssize_t snd_hwdep_hw_write(snd_hwdep_t *hwdep, const void *buffer, size_t size)$/;"	f	file:
snd_hwdep_info	hwdep/hwdep.c	/^int snd_hwdep_info(snd_hwdep_t *hwdep, snd_hwdep_info_t * info)$/;"	f
snd_hwdep_info_copy	hwdep/hwdep.c	/^void snd_hwdep_info_copy(snd_hwdep_info_t *dst, const snd_hwdep_info_t *src)$/;"	f
snd_hwdep_info_free	hwdep/hwdep.c	/^void snd_hwdep_info_free(snd_hwdep_info_t *info)$/;"	f
snd_hwdep_info_get_card	hwdep/hwdep.c	/^int snd_hwdep_info_get_card(const snd_hwdep_info_t *obj)$/;"	f
snd_hwdep_info_get_device	hwdep/hwdep.c	/^unsigned int snd_hwdep_info_get_device(const snd_hwdep_info_t *info)$/;"	f
snd_hwdep_info_get_id	hwdep/hwdep.c	/^const char *snd_hwdep_info_get_id(const snd_hwdep_info_t *obj)$/;"	f
snd_hwdep_info_get_iface	hwdep/hwdep.c	/^snd_hwdep_iface_t snd_hwdep_info_get_iface(const snd_hwdep_info_t *obj)$/;"	f
snd_hwdep_info_get_name	hwdep/hwdep.c	/^const char *snd_hwdep_info_get_name(const snd_hwdep_info_t *obj)$/;"	f
snd_hwdep_info_malloc	hwdep/hwdep.c	/^int snd_hwdep_info_malloc(snd_hwdep_info_t **info)$/;"	f
snd_hwdep_info_set_device	hwdep/hwdep.c	/^void snd_hwdep_info_set_device(snd_hwdep_info_t *obj, unsigned int val)$/;"	f
snd_hwdep_info_sizeof	hwdep/hwdep.c	/^size_t snd_hwdep_info_sizeof()$/;"	f
snd_hwdep_ioctl	hwdep/hwdep.c	/^int snd_hwdep_ioctl(snd_hwdep_t *hwdep, unsigned int request, void * arg)$/;"	f
snd_hwdep_name	hwdep/hwdep.c	/^const char *snd_hwdep_name(snd_hwdep_t *hwdep)$/;"	f
snd_hwdep_nonblock	hwdep/hwdep.c	/^int snd_hwdep_nonblock(snd_hwdep_t *hwdep, int nonblock)$/;"	f
snd_hwdep_open	hwdep/hwdep.c	/^int snd_hwdep_open(snd_hwdep_t **hwdep, const char *name, int mode)$/;"	f
snd_hwdep_open_conf	hwdep/hwdep.c	/^static int snd_hwdep_open_conf(snd_hwdep_t **hwdep,$/;"	f	file:
snd_hwdep_open_lconf	hwdep/hwdep.c	/^int snd_hwdep_open_lconf(snd_hwdep_t **hwdep, const char *name,$/;"	f
snd_hwdep_open_noupdate	hwdep/hwdep.c	/^static int snd_hwdep_open_noupdate(snd_hwdep_t **hwdep, snd_config_t *root, const char *name, int mode)$/;"	f	file:
snd_hwdep_open_objects	hwdep/hwdep_symbols.c	/^static const char **snd_hwdep_open_objects[] = {$/;"	v	file:
snd_hwdep_open_symbols	hwdep/hwdep_symbols.c	/^void *snd_hwdep_open_symbols(void)$/;"	f
snd_hwdep_ops_t	hwdep/hwdep_local.h	/^} snd_hwdep_ops_t;$/;"	t	typeref:struct:__anon9
snd_hwdep_poll_descriptors	hwdep/hwdep.c	/^int snd_hwdep_poll_descriptors(snd_hwdep_t *hwdep, struct pollfd *pfds, unsigned int space)$/;"	f
snd_hwdep_poll_descriptors_count	hwdep/hwdep.c	/^int snd_hwdep_poll_descriptors_count(snd_hwdep_t *hwdep)$/;"	f
snd_hwdep_poll_descriptors_revents	hwdep/hwdep.c	/^int snd_hwdep_poll_descriptors_revents(snd_hwdep_t *hwdep, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_hwdep_read	hwdep/hwdep.c	/^ssize_t snd_hwdep_read(snd_hwdep_t *hwdep, void *buffer, size_t size)$/;"	f
snd_hwdep_type	hwdep/hwdep.c	/^snd_hwdep_type_t snd_hwdep_type(snd_hwdep_t *hwdep)$/;"	f
snd_hwdep_write	hwdep/hwdep.c	/^ssize_t snd_hwdep_write(snd_hwdep_t *hwdep, const void *buffer, size_t size)$/;"	f
snd_input_buffer_close	input.c	/^static int snd_input_buffer_close(snd_input_t *input)$/;"	f	file:
snd_input_buffer_getc	input.c	/^static int snd_input_buffer_getc(snd_input_t *input)$/;"	f	file:
snd_input_buffer_gets	input.c	/^static char *snd_input_buffer_gets(snd_input_t *input, char *str, size_t size)$/;"	f	file:
snd_input_buffer_open	input.c	/^int snd_input_buffer_open(snd_input_t **inputp, const char *buf, ssize_t size)$/;"	f
snd_input_buffer_ops	input.c	/^static const snd_input_ops_t snd_input_buffer_ops = {$/;"	v	file:
snd_input_buffer_scan	input.c	/^static int snd_input_buffer_scan(snd_input_t *input, const char *format, va_list args)$/;"	f	file:
snd_input_buffer_t	input.c	/^} snd_input_buffer_t;$/;"	t	typeref:struct:_snd_input_buffer	file:
snd_input_buffer_ungetc	input.c	/^static int snd_input_buffer_ungetc(snd_input_t *input, int c)$/;"	f	file:
snd_input_close	input.c	/^int snd_input_close(snd_input_t *input)$/;"	f
snd_input_getc	input.c	/^int snd_input_getc(snd_input_t *input)$/;"	f
snd_input_gets	input.c	/^char *snd_input_gets(snd_input_t *input, char *str, size_t size)$/;"	f
snd_input_ops_t	input.c	/^} snd_input_ops_t;$/;"	t	typeref:struct:_snd_input_ops	file:
snd_input_scanf	input.c	/^int snd_input_scanf(snd_input_t *input, const char *format, ...)$/;"	f
snd_input_stdio_attach	input.c	/^int snd_input_stdio_attach(snd_input_t **inputp, FILE *fp, int _close)$/;"	f
snd_input_stdio_close	input.c	/^static int snd_input_stdio_close(snd_input_t *input ATTRIBUTE_UNUSED)$/;"	f	file:
snd_input_stdio_getc	input.c	/^static int snd_input_stdio_getc(snd_input_t *input)$/;"	f	file:
snd_input_stdio_gets	input.c	/^static char *snd_input_stdio_gets(snd_input_t *input, char *str, size_t size)$/;"	f	file:
snd_input_stdio_open	input.c	/^int snd_input_stdio_open(snd_input_t **inputp, const char *file, const char *mode)$/;"	f
snd_input_stdio_ops	input.c	/^static const snd_input_ops_t snd_input_stdio_ops = {$/;"	v	file:
snd_input_stdio_scan	input.c	/^static int snd_input_stdio_scan(snd_input_t *input, const char *format, va_list args)$/;"	f	file:
snd_input_stdio_t	input.c	/^} snd_input_stdio_t;$/;"	t	typeref:struct:_snd_input_stdio	file:
snd_input_stdio_ungetc	input.c	/^static int snd_input_stdio_ungetc(snd_input_t *input, int c)$/;"	f	file:
snd_input_ungetc	input.c	/^int snd_input_ungetc(snd_input_t *input, int c)$/;"	f
snd_instr_fm_convert_from_stream	seq/seq_old.c	/^int snd_instr_fm_convert_from_stream(void *__data ATTRIBUTE_UNUSED,$/;"	f
snd_instr_fm_convert_to_stream	seq/seq_old.c	/^int snd_instr_fm_convert_to_stream(void *fm ATTRIBUTE_UNUSED,$/;"	f
snd_instr_fm_free	seq/seq_old.c	/^int snd_instr_fm_free(void *fm ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_copy	seq/seq_old.c	/^void snd_instr_header_copy(void *dst ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_free	seq/seq_old.c	/^void snd_instr_header_free(void *obj ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_alias	seq/seq_old.c	/^const void *snd_instr_header_get_alias(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_cluster	seq/seq_old.c	/^int snd_instr_header_get_cluster(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_cmd	seq/seq_old.c	/^unsigned int snd_instr_header_get_cmd(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_data	seq/seq_old.c	/^void *snd_instr_header_get_data(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_follow_alias	seq/seq_old.c	/^int snd_instr_header_get_follow_alias(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_format	seq/seq_old.c	/^const char *snd_instr_header_get_format(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_id	seq/seq_old.c	/^const void *snd_instr_header_get_id(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_len	seq/seq_old.c	/^size_t snd_instr_header_get_len(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_name	seq/seq_old.c	/^const char *snd_instr_header_get_name(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_type	seq/seq_old.c	/^int snd_instr_header_get_type(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_malloc	seq/seq_old.c	/^int snd_instr_header_malloc(void **ptr ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_alias	seq/seq_old.c	/^void snd_instr_header_set_alias(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_cluster	seq/seq_old.c	/^void snd_instr_header_set_cluster(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_cmd	seq/seq_old.c	/^void snd_instr_header_set_cmd(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_follow_alias	seq/seq_old.c	/^void snd_instr_header_set_follow_alias(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_format	seq/seq_old.c	/^void snd_instr_header_set_format(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_id	seq/seq_old.c	/^void snd_instr_header_set_id(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_len	seq/seq_old.c	/^void snd_instr_header_set_len(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_name	seq/seq_old.c	/^void snd_instr_header_set_name(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_type	seq/seq_old.c	/^void snd_instr_header_set_type(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_sizeof	seq/seq_old.c	/^size_t snd_instr_header_sizeof(void)$/;"	f
snd_instr_iwffff_close	seq/seq_old.c	/^int snd_instr_iwffff_close(void *handle ATTRIBUTE_UNUSED)$/;"	f
snd_instr_iwffff_convert_from_stream	seq/seq_old.c	/^int snd_instr_iwffff_convert_from_stream(void *data ATTRIBUTE_UNUSED,$/;"	f
snd_instr_iwffff_convert_to_stream	seq/seq_old.c	/^int snd_instr_iwffff_convert_to_stream(void *iwffff ATTRIBUTE_UNUSED,$/;"	f
snd_instr_iwffff_free	seq/seq_old.c	/^int snd_instr_iwffff_free(void *__instr ATTRIBUTE_UNUSED)$/;"	f
snd_instr_iwffff_load	seq/seq_old.c	/^int snd_instr_iwffff_load(void *iwf ATTRIBUTE_UNUSED,$/;"	f
snd_instr_iwffff_open	seq/seq_old.c	/^int snd_instr_iwffff_open(void **handle ATTRIBUTE_UNUSED,$/;"	f
snd_instr_iwffff_open_rom	seq/seq_old.c	/^int snd_instr_iwffff_open_rom(void **handle ATTRIBUTE_UNUSED,$/;"	f
snd_instr_iwffff_open_rom_file	seq/seq_old.c	/^int snd_instr_iwffff_open_rom_file(void **handle ATTRIBUTE_UNUSED,$/;"	f
snd_instr_simple_convert_from_stream	seq/seq_old.c	/^int snd_instr_simple_convert_from_stream(void *__data ATTRIBUTE_UNUSED,$/;"	f
snd_instr_simple_convert_to_stream	seq/seq_old.c	/^int snd_instr_simple_convert_to_stream(void *simple ATTRIBUTE_UNUSED,$/;"	f
snd_instr_simple_free	seq/seq_old.c	/^int snd_instr_simple_free(void *simple ATTRIBUTE_UNUSED)$/;"	f
snd_int_int_strp_t	alisp/alisp_snd.c	/^typedef int (*snd_int_int_strp_t)(int val, char **str);$/;"	t	file:
snd_int_intp_t	alisp/alisp_snd.c	/^typedef int (*snd_int_intp_t)(int *val);$/;"	t	file:
snd_int_p_t	alisp/alisp_snd.c	/^typedef int (*snd_int_p_t)(void *rctl);$/;"	t	file:
snd_int_pp_p_t	alisp/alisp_snd.c	/^typedef int (*snd_int_pp_p_t)(void **rctl, void *handle);$/;"	t	file:
snd_int_pp_strp_int_t	alisp/alisp_snd.c	/^typedef int (*snd_int_pp_strp_int_t)(void **rctl, const char *name, int mode);$/;"	t	file:
snd_int_str_t	alisp/alisp_snd.c	/^typedef int (*snd_int_str_t)(const char *str);$/;"	t	file:
snd_interval_add	pcm/interval.c	/^void snd_interval_add(const snd_interval_t *a, const snd_interval_t *b, snd_interval_t *c)$/;"	f
snd_interval_add	pcm/interval.h	46;"	d
snd_interval_always_eq	pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_always_eq(const snd_interval_t *i1, const snd_interval_t *i2)$/;"	f
snd_interval_any	pcm/interval_inline.h	/^INTERVAL_INLINE void snd_interval_any(snd_interval_t *i)$/;"	f
snd_interval_checkempty	pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_checkempty(const snd_interval_t *i)$/;"	f
snd_interval_copy	pcm/interval_inline.h	/^INTERVAL_INLINE void snd_interval_copy(snd_interval_t *d, const snd_interval_t *s)$/;"	f
snd_interval_div	pcm/interval.c	/^void snd_interval_div(const snd_interval_t *a, const snd_interval_t *b, snd_interval_t *c)$/;"	f
snd_interval_div	pcm/interval.h	49;"	d
snd_interval_empty	pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_empty(const snd_interval_t *i)$/;"	f
snd_interval_floor	pcm/interval_inline.h	/^INTERVAL_INLINE void snd_interval_floor(snd_interval_t *i)$/;"	f
snd_interval_list	pcm/pcm_ext_parm.h	29;"	d
snd_interval_list	pcm/pcm_extplug.c	/^int snd_interval_list(snd_interval_t *ival, int num_list, unsigned int *list)$/;"	f
snd_interval_max	pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_max(const snd_interval_t *i)$/;"	f
snd_interval_min	pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_min(const snd_interval_t *i)$/;"	f
snd_interval_mul	pcm/interval.c	/^void snd_interval_mul(const snd_interval_t *a, const snd_interval_t *b, snd_interval_t *c)$/;"	f
snd_interval_mul	pcm/interval.h	48;"	d
snd_interval_muldiv	pcm/interval.c	/^void snd_interval_muldiv(const snd_interval_t *a, const snd_interval_t *b,$/;"	f
snd_interval_muldiv	pcm/interval.h	50;"	d
snd_interval_muldivk	pcm/interval.c	/^void snd_interval_muldivk(const snd_interval_t *a, const snd_interval_t *b,$/;"	f
snd_interval_muldivk	pcm/interval.h	51;"	d
snd_interval_mulkdiv	pcm/interval.c	/^void snd_interval_mulkdiv(const snd_interval_t *a, unsigned int k,$/;"	f
snd_interval_mulkdiv	pcm/interval.h	52;"	d
snd_interval_never_eq	pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_never_eq(const snd_interval_t *i1, const snd_interval_t *i2)$/;"	f
snd_interval_none	pcm/interval_inline.h	/^INTERVAL_INLINE void snd_interval_none(snd_interval_t *i)$/;"	f
snd_interval_print	pcm/interval.c	/^void snd_interval_print(const snd_interval_t *i, snd_output_t *out)$/;"	f
snd_interval_print	pcm/interval.h	53;"	d
snd_interval_refine	pcm/interval.c	/^int snd_interval_refine(snd_interval_t *i, const snd_interval_t *v)$/;"	f
snd_interval_refine	pcm/interval.h	56;"	d
snd_interval_refine_first	pcm/interval.c	/^int snd_interval_refine_first(snd_interval_t *i)$/;"	f
snd_interval_refine_first	pcm/interval.h	57;"	d
snd_interval_refine_last	pcm/interval.c	/^int snd_interval_refine_last(snd_interval_t *i)$/;"	f
snd_interval_refine_last	pcm/interval.h	58;"	d
snd_interval_refine_max	pcm/interval.c	/^int snd_interval_refine_max(snd_interval_t *i, unsigned int max, int openmax)$/;"	f
snd_interval_refine_max	pcm/interval.h	55;"	d
snd_interval_refine_min	pcm/interval.c	/^int snd_interval_refine_min(snd_interval_t *i, unsigned int min, int openmin)$/;"	f
snd_interval_refine_min	pcm/interval.h	54;"	d
snd_interval_refine_set	pcm/interval.c	/^int snd_interval_refine_set(snd_interval_t *i, unsigned int val)$/;"	f
snd_interval_refine_set	pcm/interval.h	59;"	d
snd_interval_set_minmax	pcm/interval_inline.h	/^INTERVAL_INLINE void snd_interval_set_minmax(snd_interval_t *i, unsigned int min, unsigned int max)$/;"	f
snd_interval_set_value	pcm/interval_inline.h	/^INTERVAL_INLINE void snd_interval_set_value(snd_interval_t *i, unsigned int val)$/;"	f
snd_interval_setinteger	pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_setinteger(snd_interval_t *i)$/;"	f
snd_interval_single	pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_single(const snd_interval_t *i)$/;"	f
snd_interval_sub	pcm/interval.c	/^void snd_interval_sub(const snd_interval_t *a, const snd_interval_t *b, snd_interval_t *c)$/;"	f
snd_interval_sub	pcm/interval.h	47;"	d
snd_interval_t	pcm/interval.h	/^typedef struct _snd_interval snd_interval_t;$/;"	t	typeref:struct:_snd_interval
snd_interval_test	pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_test(const snd_interval_t *i, unsigned int val)$/;"	f
snd_interval_unfloor	pcm/interval_inline.h	/^INTERVAL_INLINE void snd_interval_unfloor(snd_interval_t *i)$/;"	f
snd_interval_value	pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_value(const snd_interval_t *i)$/;"	f
snd_intrinsics	alisp/alisp_snd.c	/^static const struct intrinsic snd_intrinsics[] = {$/;"	v	typeref:struct:intrinsic	file:
snd_is_local	socket.c	/^int snd_is_local(struct hostent *hent)$/;"	f
snd_lib_error	error.c	/^snd_lib_error_handler_t snd_lib_error = snd_lib_error_default;$/;"	v
snd_lib_error_default	error.c	/^static void snd_lib_error_default(const char *file, int line, const char *function, int err, const char *fmt, ...)$/;"	f	file:
snd_lib_error_set_handler	error.c	/^int snd_lib_error_set_handler(snd_lib_error_handler_t handler)$/;"	f
snd_mask_always_eq	pcm/mask_inline.h	/^MASK_INLINE int snd_mask_always_eq(const snd_mask_t *m1, const snd_mask_t *m2)$/;"	f
snd_mask_any	pcm/mask_inline.h	/^MASK_INLINE void snd_mask_any(snd_mask_t *mask)$/;"	f
snd_mask_copy	pcm/mask_inline.h	/^MASK_INLINE void snd_mask_copy(snd_mask_t *mask, const snd_mask_t *v)$/;"	f
snd_mask_count	pcm/mask_inline.h	/^MASK_INLINE unsigned int snd_mask_count(const snd_mask_t *mask)$/;"	f
snd_mask_empty	pcm/mask_inline.h	/^MASK_INLINE int snd_mask_empty(const snd_mask_t *mask)$/;"	f
snd_mask_eq	pcm/mask_inline.h	/^MASK_INLINE int snd_mask_eq(const snd_mask_t *mask, const snd_mask_t *v)$/;"	f
snd_mask_full	pcm/mask_inline.h	/^MASK_INLINE int snd_mask_full(const snd_mask_t *mask)$/;"	f
snd_mask_intersect	pcm/mask_inline.h	/^MASK_INLINE void snd_mask_intersect(snd_mask_t *mask, const snd_mask_t *v)$/;"	f
snd_mask_leave	pcm/mask_inline.h	/^MASK_INLINE void snd_mask_leave(snd_mask_t *mask, unsigned int val)$/;"	f
snd_mask_max	pcm/mask_inline.h	/^MASK_INLINE unsigned int snd_mask_max(const snd_mask_t *mask)$/;"	f
snd_mask_min	pcm/mask_inline.h	/^MASK_INLINE unsigned int snd_mask_min(const snd_mask_t *mask)$/;"	f
snd_mask_never_eq	pcm/mask_inline.h	/^MASK_INLINE int snd_mask_never_eq(const snd_mask_t *m1, const snd_mask_t *m2)$/;"	f
snd_mask_none	pcm/mask_inline.h	/^MASK_INLINE void snd_mask_none(snd_mask_t *mask)$/;"	f
snd_mask_refine	pcm/mask_inline.h	/^MASK_INLINE int snd_mask_refine(snd_mask_t *mask, const snd_mask_t *v)$/;"	f
snd_mask_refine_first	pcm/mask_inline.h	/^MASK_INLINE int snd_mask_refine_first(snd_mask_t *mask)$/;"	f
snd_mask_refine_last	pcm/mask_inline.h	/^MASK_INLINE int snd_mask_refine_last(snd_mask_t *mask)$/;"	f
snd_mask_refine_max	pcm/mask_inline.h	/^MASK_INLINE int snd_mask_refine_max(snd_mask_t *mask, unsigned int val)$/;"	f
snd_mask_refine_min	pcm/mask_inline.h	/^MASK_INLINE int snd_mask_refine_min(snd_mask_t *mask, unsigned int val)$/;"	f
snd_mask_refine_set	pcm/mask_inline.h	/^MASK_INLINE int snd_mask_refine_set(snd_mask_t *mask, unsigned int val)$/;"	f
snd_mask_reset	pcm/mask_inline.h	/^MASK_INLINE void snd_mask_reset(snd_mask_t *mask, unsigned int val)$/;"	f
snd_mask_reset_range	pcm/mask_inline.h	/^MASK_INLINE void snd_mask_reset_range(snd_mask_t *mask, unsigned int from, unsigned int to)$/;"	f
snd_mask_set	pcm/mask_inline.h	/^MASK_INLINE void snd_mask_set(snd_mask_t *mask, unsigned int val)$/;"	f
snd_mask_set_range	pcm/mask_inline.h	/^MASK_INLINE void snd_mask_set_range(snd_mask_t *mask, unsigned int from, unsigned int to)$/;"	f
snd_mask_single	pcm/mask_inline.h	/^MASK_INLINE int snd_mask_single(const snd_mask_t *mask)$/;"	f
snd_mask_sizeof	pcm/mask_inline.h	/^MASK_INLINE size_t snd_mask_sizeof(void)$/;"	f
snd_mask_t	pcm/mask.h	/^typedef struct _snd_mask snd_mask_t;$/;"	t	typeref:struct:_snd_mask
snd_mask_test	pcm/mask_inline.h	/^MASK_INLINE int snd_mask_test(const snd_mask_t *mask, unsigned int val)$/;"	f
snd_mask_union	pcm/mask_inline.h	/^MASK_INLINE void snd_mask_union(snd_mask_t *mask, const snd_mask_t *v)$/;"	f
snd_mask_value	pcm/mask_inline.h	/^MASK_INLINE int snd_mask_value(const snd_mask_t *mask)$/;"	f
snd_midi_event	seq/seq_midi_event.c	/^struct snd_midi_event {$/;"	s	file:
snd_midi_event_decode	seq/seq_midi_event.c	/^long snd_midi_event_decode(snd_midi_event_t *dev, unsigned char *buf, long count, const snd_seq_event_t *ev)$/;"	f
snd_midi_event_encode	seq/seq_midi_event.c	/^long snd_midi_event_encode(snd_midi_event_t *dev, const unsigned char *buf, long count, snd_seq_event_t *ev)$/;"	f
snd_midi_event_encode_byte	seq/seq_midi_event.c	/^int snd_midi_event_encode_byte(snd_midi_event_t *dev, int c, snd_seq_event_t *ev)$/;"	f
snd_midi_event_free	seq/seq_midi_event.c	/^void snd_midi_event_free(snd_midi_event_t *dev)$/;"	f
snd_midi_event_init	seq/seq_midi_event.c	/^void snd_midi_event_init(snd_midi_event_t *dev)$/;"	f
snd_midi_event_new	seq/seq_midi_event.c	/^int snd_midi_event_new(size_t bufsize, snd_midi_event_t **rdev)$/;"	f
snd_midi_event_no_status	seq/seq_midi_event.c	/^void snd_midi_event_no_status(snd_midi_event_t *dev, int on)$/;"	f
snd_midi_event_reset_decode	seq/seq_midi_event.c	/^void snd_midi_event_reset_decode(snd_midi_event_t *dev)$/;"	f
snd_midi_event_reset_encode	seq/seq_midi_event.c	/^void snd_midi_event_reset_encode(snd_midi_event_t *dev)$/;"	f
snd_midi_event_resize_buffer	seq/seq_midi_event.c	/^int snd_midi_event_resize_buffer(snd_midi_event_t *dev, size_t bufsize)$/;"	f
snd_mixer_attach	mixer/mixer.c	/^int snd_mixer_attach(snd_mixer_t *mixer, const char *name)$/;"	f
snd_mixer_attach_hctl	mixer/mixer.c	/^int snd_mixer_attach_hctl(snd_mixer_t *mixer, snd_hctl_t *hctl)$/;"	f
snd_mixer_class_copy	mixer/mixer.c	/^void snd_mixer_class_copy(snd_mixer_class_t *dst, const snd_mixer_class_t *src)$/;"	f
snd_mixer_class_free	mixer/mixer.c	/^void snd_mixer_class_free(snd_mixer_class_t *obj)$/;"	f
snd_mixer_class_get_compare	mixer/mixer.c	/^snd_mixer_compare_t snd_mixer_class_get_compare(const snd_mixer_class_t *obj)$/;"	f
snd_mixer_class_get_event	mixer/mixer.c	/^snd_mixer_event_t snd_mixer_class_get_event(const snd_mixer_class_t *obj)$/;"	f
snd_mixer_class_get_mixer	mixer/mixer.c	/^snd_mixer_t *snd_mixer_class_get_mixer(const snd_mixer_class_t *obj)$/;"	f
snd_mixer_class_get_private	mixer/mixer.c	/^void *snd_mixer_class_get_private(const snd_mixer_class_t *obj)$/;"	f
snd_mixer_class_malloc	mixer/mixer.c	/^int snd_mixer_class_malloc(snd_mixer_class_t **ptr)$/;"	f
snd_mixer_class_register	mixer/mixer.c	/^int snd_mixer_class_register(snd_mixer_class_t *class, snd_mixer_t *mixer)$/;"	f
snd_mixer_class_set_compare	mixer/mixer.c	/^int snd_mixer_class_set_compare(snd_mixer_class_t *obj, snd_mixer_compare_t compare)$/;"	f
snd_mixer_class_set_event	mixer/mixer.c	/^int snd_mixer_class_set_event(snd_mixer_class_t *obj, snd_mixer_event_t event)$/;"	f
snd_mixer_class_set_private	mixer/mixer.c	/^int snd_mixer_class_set_private(snd_mixer_class_t *obj, void *private_data)$/;"	f
snd_mixer_class_set_private_free	mixer/mixer.c	/^int snd_mixer_class_set_private_free(snd_mixer_class_t *obj, void (*private_free)(snd_mixer_class_t *class))$/;"	f
snd_mixer_class_sizeof	mixer/mixer.c	/^size_t snd_mixer_class_sizeof()$/;"	f
snd_mixer_class_unregister	mixer/mixer.c	/^int snd_mixer_class_unregister(snd_mixer_class_t *class)$/;"	f
snd_mixer_close	mixer/mixer.c	/^int snd_mixer_close(snd_mixer_t *mixer)$/;"	f
snd_mixer_compare_default	mixer/mixer.c	/^static int snd_mixer_compare_default(const snd_mixer_elem_t *c1,$/;"	f	file:
snd_mixer_detach	mixer/mixer.c	/^int snd_mixer_detach(snd_mixer_t *mixer, const char *name)$/;"	f
snd_mixer_detach_hctl	mixer/mixer.c	/^int snd_mixer_detach_hctl(snd_mixer_t *mixer, snd_hctl_t *hctl)$/;"	f
snd_mixer_elem_add	mixer/mixer.c	/^int snd_mixer_elem_add(snd_mixer_elem_t *elem, snd_mixer_class_t *class)$/;"	f
snd_mixer_elem_attach	mixer/mixer.c	/^int snd_mixer_elem_attach(snd_mixer_elem_t *melem,$/;"	f
snd_mixer_elem_detach	mixer/mixer.c	/^int snd_mixer_elem_detach(snd_mixer_elem_t *melem,$/;"	f
snd_mixer_elem_empty	mixer/mixer.c	/^int snd_mixer_elem_empty(snd_mixer_elem_t *melem)$/;"	f
snd_mixer_elem_free	mixer/mixer.c	/^void snd_mixer_elem_free(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_elem_get_callback_private	mixer/mixer.c	/^void * snd_mixer_elem_get_callback_private(const snd_mixer_elem_t *mixer)$/;"	f
snd_mixer_elem_get_private	mixer/mixer.c	/^void *snd_mixer_elem_get_private(const snd_mixer_elem_t *elem)$/;"	f
snd_mixer_elem_get_type	mixer/mixer.c	/^snd_mixer_elem_type_t snd_mixer_elem_get_type(const snd_mixer_elem_t *mixer)$/;"	f
snd_mixer_elem_info	mixer/mixer.c	/^int snd_mixer_elem_info(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_elem_new	mixer/mixer.c	/^int snd_mixer_elem_new(snd_mixer_elem_t **elem,$/;"	f
snd_mixer_elem_next	mixer/mixer.c	/^snd_mixer_elem_t *snd_mixer_elem_next(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_elem_prev	mixer/mixer.c	/^snd_mixer_elem_t *snd_mixer_elem_prev(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_elem_remove	mixer/mixer.c	/^int snd_mixer_elem_remove(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_elem_set_callback	mixer/mixer.c	/^void snd_mixer_elem_set_callback(snd_mixer_elem_t *mixer, snd_mixer_elem_callback_t val)$/;"	f
snd_mixer_elem_set_callback_private	mixer/mixer.c	/^void snd_mixer_elem_set_callback_private(snd_mixer_elem_t *mixer, void * val)$/;"	f
snd_mixer_elem_throw_event	mixer/mixer.c	/^static int snd_mixer_elem_throw_event(snd_mixer_elem_t *elem, unsigned int mask)$/;"	f	file:
snd_mixer_elem_value	mixer/mixer.c	/^int snd_mixer_elem_value(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_find_selem	mixer/simple.c	/^snd_mixer_elem_t *snd_mixer_find_selem(snd_mixer_t *mixer,$/;"	f
snd_mixer_first_elem	mixer/mixer.c	/^snd_mixer_elem_t *snd_mixer_first_elem(snd_mixer_t *mixer)$/;"	f
snd_mixer_free	mixer/mixer.c	/^void snd_mixer_free(snd_mixer_t *mixer)$/;"	f
snd_mixer_get_callback_private	mixer/mixer.c	/^void * snd_mixer_get_callback_private(const snd_mixer_t *mixer)$/;"	f
snd_mixer_get_count	mixer/mixer.c	/^unsigned int snd_mixer_get_count(const snd_mixer_t *mixer)$/;"	f
snd_mixer_get_hctl	mixer/mixer.c	/^int snd_mixer_get_hctl(snd_mixer_t *mixer, const char *name, snd_hctl_t **hctl)$/;"	f
snd_mixer_handle_events	mixer/mixer.c	/^int snd_mixer_handle_events(snd_mixer_t *mixer)$/;"	f
snd_mixer_last_elem	mixer/mixer.c	/^snd_mixer_elem_t *snd_mixer_last_elem(snd_mixer_t *mixer)$/;"	f
snd_mixer_load	mixer/mixer.c	/^int snd_mixer_load(snd_mixer_t *mixer)$/;"	f
snd_mixer_open	mixer/mixer.c	/^int snd_mixer_open(snd_mixer_t **mixerp, int mode ATTRIBUTE_UNUSED)$/;"	f
snd_mixer_poll_descriptors	mixer/mixer.c	/^int snd_mixer_poll_descriptors(snd_mixer_t *mixer, struct pollfd *pfds, unsigned int space)$/;"	f
snd_mixer_poll_descriptors_count	mixer/mixer.c	/^int snd_mixer_poll_descriptors_count(snd_mixer_t *mixer)$/;"	f
snd_mixer_poll_descriptors_revents	mixer/mixer.c	/^int snd_mixer_poll_descriptors_revents(snd_mixer_t *mixer, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_mixer_sbasic_get_private	mixer/simple_abst.c	/^void *snd_mixer_sbasic_get_private(const snd_mixer_class_t *class)$/;"	f
snd_mixer_sbasic_info	mixer/simple_abst.c	/^int snd_mixer_sbasic_info(const snd_mixer_class_t *class, sm_class_basic_t *info)$/;"	f
snd_mixer_sbasic_init_t	mixer/simple_abst.c	/^typedef int (*snd_mixer_sbasic_init_t)(snd_mixer_class_t *class);$/;"	t	file:
snd_mixer_sbasic_set_private	mixer/simple_abst.c	/^void snd_mixer_sbasic_set_private(const snd_mixer_class_t *class, void *private_data)$/;"	f
snd_mixer_sbasic_set_private_free	mixer/simple_abst.c	/^void snd_mixer_sbasic_set_private_free(const snd_mixer_class_t *class, void (*private_free)(snd_mixer_class_t *class))$/;"	f
snd_mixer_selem_ask_capture_dB_vol	mixer/simple.c	/^int snd_mixer_selem_ask_capture_dB_vol(snd_mixer_elem_t *elem, long dBvalue, int dir, long *value)$/;"	f
snd_mixer_selem_ask_capture_vol_dB	mixer/simple.c	/^int snd_mixer_selem_ask_capture_vol_dB(snd_mixer_elem_t *elem, long value, long *dBvalue)$/;"	f
snd_mixer_selem_ask_playback_dB_vol	mixer/simple.c	/^int snd_mixer_selem_ask_playback_dB_vol(snd_mixer_elem_t *elem, long dBvalue, int dir, long *value)$/;"	f
snd_mixer_selem_ask_playback_vol_dB	mixer/simple.c	/^int snd_mixer_selem_ask_playback_vol_dB(snd_mixer_elem_t *elem, long value, long *dBvalue)$/;"	f
snd_mixer_selem_channel_name	mixer/simple.c	/^const char *snd_mixer_selem_channel_name(snd_mixer_selem_channel_id_t channel)$/;"	f
snd_mixer_selem_compare	mixer/simple.c	/^int snd_mixer_selem_compare(const snd_mixer_elem_t *c1, const snd_mixer_elem_t *c2)$/;"	f
snd_mixer_selem_get_capture_dB	mixer/simple.c	/^int snd_mixer_selem_get_capture_dB(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)$/;"	f
snd_mixer_selem_get_capture_dB_range	mixer/simple.c	/^int snd_mixer_selem_get_capture_dB_range(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_get_capture_group	mixer/simple.c	/^int snd_mixer_selem_get_capture_group(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_get_capture_switch	mixer/simple.c	/^int snd_mixer_selem_get_capture_switch(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int *value)$/;"	f
snd_mixer_selem_get_capture_volume	mixer/simple.c	/^int snd_mixer_selem_get_capture_volume(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)$/;"	f
snd_mixer_selem_get_capture_volume_range	mixer/simple.c	/^int snd_mixer_selem_get_capture_volume_range(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_get_enum_item	mixer/simple.c	/^int snd_mixer_selem_get_enum_item(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_get_enum_item_name	mixer/simple.c	/^int snd_mixer_selem_get_enum_item_name(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_get_enum_items	mixer/simple.c	/^int snd_mixer_selem_get_enum_items(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_get_id	mixer/simple.c	/^void snd_mixer_selem_get_id(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_get_index	mixer/simple.c	/^unsigned int snd_mixer_selem_get_index(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_get_name	mixer/simple.c	/^const char *snd_mixer_selem_get_name(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_get_playback_dB	mixer/simple.c	/^int snd_mixer_selem_get_playback_dB(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)$/;"	f
snd_mixer_selem_get_playback_dB_range	mixer/simple.c	/^int snd_mixer_selem_get_playback_dB_range(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_get_playback_switch	mixer/simple.c	/^int snd_mixer_selem_get_playback_switch(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int *value)$/;"	f
snd_mixer_selem_get_playback_volume	mixer/simple.c	/^int snd_mixer_selem_get_playback_volume(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)$/;"	f
snd_mixer_selem_get_playback_volume_range	mixer/simple.c	/^int snd_mixer_selem_get_playback_volume_range(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_has_capture_channel	mixer/simple.c	/^int snd_mixer_selem_has_capture_channel(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel)$/;"	f
snd_mixer_selem_has_capture_switch	mixer/simple.c	/^int snd_mixer_selem_has_capture_switch(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_capture_switch_exclusive	mixer/simple.c	/^int snd_mixer_selem_has_capture_switch_exclusive(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_capture_switch_joined	mixer/simple.c	/^int snd_mixer_selem_has_capture_switch_joined(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_capture_volume	mixer/simple.c	/^int snd_mixer_selem_has_capture_volume(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_capture_volume_joined	mixer/simple.c	/^int snd_mixer_selem_has_capture_volume_joined(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_common_switch	mixer/simple.c	/^int snd_mixer_selem_has_common_switch(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_common_volume	mixer/simple.c	/^int snd_mixer_selem_has_common_volume(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_playback_channel	mixer/simple.c	/^int snd_mixer_selem_has_playback_channel(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel)$/;"	f
snd_mixer_selem_has_playback_switch	mixer/simple.c	/^int snd_mixer_selem_has_playback_switch(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_playback_switch_joined	mixer/simple.c	/^int snd_mixer_selem_has_playback_switch_joined(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_playback_volume	mixer/simple.c	/^int snd_mixer_selem_has_playback_volume(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_playback_volume_joined	mixer/simple.c	/^int snd_mixer_selem_has_playback_volume_joined(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_id_copy	mixer/simple.c	/^void snd_mixer_selem_id_copy(snd_mixer_selem_id_t *dst, const snd_mixer_selem_id_t *src)$/;"	f
snd_mixer_selem_id_free	mixer/simple.c	/^void snd_mixer_selem_id_free(snd_mixer_selem_id_t *obj)$/;"	f
snd_mixer_selem_id_get_index	mixer/simple.c	/^unsigned int snd_mixer_selem_id_get_index(const snd_mixer_selem_id_t *obj)$/;"	f
snd_mixer_selem_id_get_name	mixer/simple.c	/^const char *snd_mixer_selem_id_get_name(const snd_mixer_selem_id_t *obj)$/;"	f
snd_mixer_selem_id_malloc	mixer/simple.c	/^int snd_mixer_selem_id_malloc(snd_mixer_selem_id_t **ptr)$/;"	f
snd_mixer_selem_id_set_index	mixer/simple.c	/^void snd_mixer_selem_id_set_index(snd_mixer_selem_id_t *obj, unsigned int val)$/;"	f
snd_mixer_selem_id_set_name	mixer/simple.c	/^void snd_mixer_selem_id_set_name(snd_mixer_selem_id_t *obj, const char *val)$/;"	f
snd_mixer_selem_id_sizeof	mixer/simple.c	/^size_t snd_mixer_selem_id_sizeof()$/;"	f
snd_mixer_selem_is_active	mixer/simple.c	/^int snd_mixer_selem_is_active(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_is_capture_mono	mixer/simple.c	/^int snd_mixer_selem_is_capture_mono(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_is_enum_capture	mixer/simple.c	/^int snd_mixer_selem_is_enum_capture(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_is_enum_playback	mixer/simple.c	/^int snd_mixer_selem_is_enum_playback(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_is_enumerated	mixer/simple.c	/^int snd_mixer_selem_is_enumerated(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_is_playback_mono	mixer/simple.c	/^int snd_mixer_selem_is_playback_mono(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_register	mixer/simple.c	/^int snd_mixer_selem_register(snd_mixer_t *mixer,$/;"	f
snd_mixer_selem_set_capture_dB	mixer/simple.c	/^int snd_mixer_selem_set_capture_dB(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value, int dir)$/;"	f
snd_mixer_selem_set_capture_dB_all	mixer/simple.c	/^int snd_mixer_selem_set_capture_dB_all(snd_mixer_elem_t *elem, long value, int dir)$/;"	f
snd_mixer_selem_set_capture_switch	mixer/simple.c	/^int snd_mixer_selem_set_capture_switch(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int value)$/;"	f
snd_mixer_selem_set_capture_switch_all	mixer/simple.c	/^int snd_mixer_selem_set_capture_switch_all(snd_mixer_elem_t *elem, int value)$/;"	f
snd_mixer_selem_set_capture_volume	mixer/simple.c	/^int snd_mixer_selem_set_capture_volume(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value)$/;"	f
snd_mixer_selem_set_capture_volume_all	mixer/simple.c	/^int snd_mixer_selem_set_capture_volume_all(snd_mixer_elem_t *elem, long value)$/;"	f
snd_mixer_selem_set_capture_volume_range	mixer/simple.c	/^int snd_mixer_selem_set_capture_volume_range(snd_mixer_elem_t *elem, $/;"	f
snd_mixer_selem_set_enum_item	mixer/simple.c	/^int snd_mixer_selem_set_enum_item(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_set_playback_dB	mixer/simple.c	/^int snd_mixer_selem_set_playback_dB(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value, int dir)$/;"	f
snd_mixer_selem_set_playback_dB_all	mixer/simple.c	/^int snd_mixer_selem_set_playback_dB_all(snd_mixer_elem_t *elem, long value, int dir)$/;"	f
snd_mixer_selem_set_playback_switch	mixer/simple.c	/^int snd_mixer_selem_set_playback_switch(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int value)$/;"	f
snd_mixer_selem_set_playback_switch_all	mixer/simple.c	/^int snd_mixer_selem_set_playback_switch_all(snd_mixer_elem_t *elem, int value)$/;"	f
snd_mixer_selem_set_playback_volume	mixer/simple.c	/^int snd_mixer_selem_set_playback_volume(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value)$/;"	f
snd_mixer_selem_set_playback_volume_all	mixer/simple.c	/^int snd_mixer_selem_set_playback_volume_all(snd_mixer_elem_t *elem, long value)$/;"	f
snd_mixer_selem_set_playback_volume_range	mixer/simple.c	/^int snd_mixer_selem_set_playback_volume_range(snd_mixer_elem_t *elem, $/;"	f
snd_mixer_set_callback	mixer/mixer.c	/^void snd_mixer_set_callback(snd_mixer_t *obj, snd_mixer_callback_t val)$/;"	f
snd_mixer_set_callback_private	mixer/mixer.c	/^void snd_mixer_set_callback_private(snd_mixer_t *mixer, void * val)$/;"	f
snd_mixer_set_compare	mixer/mixer.c	/^int snd_mixer_set_compare(snd_mixer_t *mixer, snd_mixer_compare_t compare)$/;"	f
snd_mixer_sfbasic_init_t	mixer/simple_abst.c	/^typedef int (*snd_mixer_sfbasic_init_t)(snd_mixer_class_t *class,$/;"	t	file:
snd_mixer_simple_basic_register	mixer/mixer_simple.h	27;"	d
snd_mixer_simple_basic_register	mixer/simple_abst.c	/^int snd_mixer_simple_basic_register(snd_mixer_t *mixer,$/;"	f
snd_mixer_simple_none_register	mixer/mixer_simple.h	25;"	d
snd_mixer_simple_none_register	mixer/simple_none.c	/^int snd_mixer_simple_none_register(snd_mixer_t *mixer,$/;"	f
snd_mixer_slave_t	mixer/mixer.c	/^} snd_mixer_slave_t;$/;"	t	typeref:struct:_snd_mixer_slave	file:
snd_mixer_sort	mixer/mixer.c	/^static int snd_mixer_sort(snd_mixer_t *mixer)$/;"	f	file:
snd_mixer_throw_event	mixer/mixer.c	/^static int snd_mixer_throw_event(snd_mixer_t *mixer, unsigned int mask,$/;"	f	file:
snd_mixer_wait	mixer/mixer.c	/^int snd_mixer_wait(snd_mixer_t *mixer, int timeout)$/;"	f
snd_names_list	names.c	/^int snd_names_list(const char *iface ATTRIBUTE_UNUSED,$/;"	f
snd_names_list_free	names.c	/^void snd_names_list_free(snd_devname_t *list ATTRIBUTE_UNUSED)$/;"	f
snd_output_buffer_close	output.c	/^static int snd_output_buffer_close(snd_output_t *output)$/;"	f	file:
snd_output_buffer_flush	output.c	/^static int snd_output_buffer_flush(snd_output_t *output ATTRIBUTE_UNUSED)$/;"	f	file:
snd_output_buffer_need	output.c	/^static int snd_output_buffer_need(snd_output_t *output, size_t size)$/;"	f	file:
snd_output_buffer_open	output.c	/^int snd_output_buffer_open(snd_output_t **outputp)$/;"	f
snd_output_buffer_ops	output.c	/^static const snd_output_ops_t snd_output_buffer_ops = {$/;"	v	file:
snd_output_buffer_print	output.c	/^static int snd_output_buffer_print(snd_output_t *output, const char *format, va_list args)$/;"	f	file:
snd_output_buffer_putc	output.c	/^static int snd_output_buffer_putc(snd_output_t *output, int c)$/;"	f	file:
snd_output_buffer_puts	output.c	/^static int snd_output_buffer_puts(snd_output_t *output, const char *str)$/;"	f	file:
snd_output_buffer_string	output.c	/^size_t snd_output_buffer_string(snd_output_t *output, char **buf)$/;"	f
snd_output_buffer_t	output.c	/^} snd_output_buffer_t;$/;"	t	typeref:struct:_snd_output_buffer	file:
snd_output_close	output.c	/^int snd_output_close(snd_output_t *output)$/;"	f
snd_output_flush	output.c	/^int snd_output_flush(snd_output_t *output)$/;"	f
snd_output_ops_t	output.c	/^} snd_output_ops_t;$/;"	t	typeref:struct:_snd_output_ops	file:
snd_output_printf	output.c	/^int snd_output_printf(snd_output_t *output, const char *format, ...)$/;"	f
snd_output_putc	output.c	/^int snd_output_putc(snd_output_t *output, int c)$/;"	f
snd_output_puts	output.c	/^int snd_output_puts(snd_output_t *output, const char *str)$/;"	f
snd_output_stdio_attach	output.c	/^int snd_output_stdio_attach(snd_output_t **outputp, FILE *fp, int _close)$/;"	f
snd_output_stdio_close	output.c	/^static int snd_output_stdio_close(snd_output_t *output)$/;"	f	file:
snd_output_stdio_flush	output.c	/^static int snd_output_stdio_flush(snd_output_t *output)$/;"	f	file:
snd_output_stdio_open	output.c	/^int snd_output_stdio_open(snd_output_t **outputp, const char *file, const char *mode)$/;"	f
snd_output_stdio_ops	output.c	/^static const snd_output_ops_t snd_output_stdio_ops = {$/;"	v	file:
snd_output_stdio_print	output.c	/^static int snd_output_stdio_print(snd_output_t *output, const char *format, va_list args)$/;"	f	file:
snd_output_stdio_putc	output.c	/^static int snd_output_stdio_putc(snd_output_t *output, int c)$/;"	f	file:
snd_output_stdio_puts	output.c	/^static int snd_output_stdio_puts(snd_output_t *output, const char *str)$/;"	f	file:
snd_output_stdio_t	output.c	/^} snd_output_stdio_t;$/;"	t	typeref:struct:_snd_output_stdio	file:
snd_output_vprintf	output.c	/^int snd_output_vprintf(snd_output_t *output, const char *format, va_list args)$/;"	f
snd_p_p_t	alisp/alisp_snd.c	/^typedef void *(*snd_p_p_t)(void *handle);$/;"	t	file:
snd_pcm_access_mask_any	pcm/pcm.c	/^void snd_pcm_access_mask_any(snd_pcm_access_mask_t *mask)$/;"	f
snd_pcm_access_mask_copy	pcm/pcm.c	/^void snd_pcm_access_mask_copy(snd_pcm_access_mask_t *dst, const snd_pcm_access_mask_t *src)$/;"	f
snd_pcm_access_mask_empty	pcm/pcm.c	/^int snd_pcm_access_mask_empty(const snd_pcm_access_mask_t *mask)$/;"	f
snd_pcm_access_mask_free	pcm/pcm.c	/^void snd_pcm_access_mask_free(snd_pcm_access_mask_t *obj)$/;"	f
snd_pcm_access_mask_malloc	pcm/pcm.c	/^int snd_pcm_access_mask_malloc(snd_pcm_access_mask_t **ptr)$/;"	f
snd_pcm_access_mask_none	pcm/pcm.c	/^void snd_pcm_access_mask_none(snd_pcm_access_mask_t *mask)$/;"	f
snd_pcm_access_mask_reset	pcm/pcm.c	/^void snd_pcm_access_mask_reset(snd_pcm_access_mask_t *mask, snd_pcm_access_t val)$/;"	f
snd_pcm_access_mask_set	pcm/pcm.c	/^void snd_pcm_access_mask_set(snd_pcm_access_mask_t *mask, snd_pcm_access_t val)$/;"	f
snd_pcm_access_mask_sizeof	pcm/pcm.c	/^size_t snd_pcm_access_mask_sizeof()$/;"	f
snd_pcm_access_mask_test	pcm/pcm.c	/^int snd_pcm_access_mask_test(const snd_pcm_access_mask_t *mask, snd_pcm_access_t val)$/;"	f
snd_pcm_access_name	pcm/pcm.c	/^const char *snd_pcm_access_name(snd_pcm_access_t acc)$/;"	f
snd_pcm_access_names	pcm/pcm.c	/^static const char *const snd_pcm_access_names[] = {$/;"	v	file:
snd_pcm_adpcm_decode	pcm/pcm_adpcm.c	/^void snd_pcm_adpcm_decode(const snd_pcm_channel_area_t *dst_areas,$/;"	f
snd_pcm_adpcm_decode	pcm/pcm_plugin.h	94;"	d
snd_pcm_adpcm_dump	pcm/pcm_adpcm.c	/^static void snd_pcm_adpcm_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_adpcm_encode	pcm/pcm_adpcm.c	/^void snd_pcm_adpcm_encode(const snd_pcm_channel_area_t *dst_areas,$/;"	f
snd_pcm_adpcm_encode	pcm/pcm_plugin.h	95;"	d
snd_pcm_adpcm_hw_free	pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_adpcm_hw_params	pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_adpcm_hw_refine	pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_adpcm_hw_refine_cchange	pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_adpcm_hw_refine_cprepare	pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_hw_refine_cprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_adpcm_hw_refine_schange	pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_adpcm_hw_refine_sprepare	pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_adpcm_init	pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_init(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_adpcm_open	pcm/pcm_adpcm.c	/^int snd_pcm_adpcm_open(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave)$/;"	f
snd_pcm_adpcm_ops	pcm/pcm_adpcm.c	/^static const snd_pcm_ops_t snd_pcm_adpcm_ops = {$/;"	v	file:
snd_pcm_adpcm_read_areas	pcm/pcm_adpcm.c	/^snd_pcm_adpcm_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_adpcm_state_t	pcm/pcm_plugin.h	/^} snd_pcm_adpcm_state_t;$/;"	t	typeref:struct:_snd_pcm_adpcm_state
snd_pcm_adpcm_t	pcm/pcm_adpcm.c	/^} snd_pcm_adpcm_t;$/;"	t	typeref:struct:__anon52	file:
snd_pcm_adpcm_write_areas	pcm/pcm_adpcm.c	/^snd_pcm_adpcm_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_alaw_decode	pcm/pcm_alaw.c	/^void snd_pcm_alaw_decode(const snd_pcm_channel_area_t *dst_areas,$/;"	f
snd_pcm_alaw_decode	pcm/pcm_plugin.h	90;"	d
snd_pcm_alaw_dump	pcm/pcm_alaw.c	/^static void snd_pcm_alaw_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_alaw_encode	pcm/pcm_alaw.c	/^void snd_pcm_alaw_encode(const snd_pcm_channel_area_t *dst_areas,$/;"	f
snd_pcm_alaw_encode	pcm/pcm_plugin.h	91;"	d
snd_pcm_alaw_hw_params	pcm/pcm_alaw.c	/^static int snd_pcm_alaw_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_alaw_hw_refine	pcm/pcm_alaw.c	/^static int snd_pcm_alaw_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_alaw_hw_refine_cchange	pcm/pcm_alaw.c	/^static int snd_pcm_alaw_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_alaw_hw_refine_cprepare	pcm/pcm_alaw.c	/^static int snd_pcm_alaw_hw_refine_cprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_alaw_hw_refine_schange	pcm/pcm_alaw.c	/^static int snd_pcm_alaw_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_alaw_hw_refine_sprepare	pcm/pcm_alaw.c	/^static int snd_pcm_alaw_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_alaw_open	pcm/pcm_alaw.c	/^int snd_pcm_alaw_open(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave)$/;"	f
snd_pcm_alaw_ops	pcm/pcm_alaw.c	/^static const snd_pcm_ops_t snd_pcm_alaw_ops = {$/;"	v	file:
snd_pcm_alaw_read_areas	pcm/pcm_alaw.c	/^snd_pcm_alaw_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_alaw_t	pcm/pcm_alaw.c	/^} snd_pcm_alaw_t;$/;"	t	typeref:struct:__anon10	file:
snd_pcm_alaw_write_areas	pcm/pcm_alaw.c	/^snd_pcm_alaw_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_area_copy	pcm/pcm.c	/^int snd_pcm_area_copy(const snd_pcm_channel_area_t *dst_area, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_area_silence	pcm/pcm.c	/^int snd_pcm_area_silence(const snd_pcm_channel_area_t *dst_area, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_areas_copy	pcm/pcm.c	/^int snd_pcm_areas_copy(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_areas_from_buf	pcm/pcm.c	/^void snd_pcm_areas_from_buf(snd_pcm_t *pcm, snd_pcm_channel_area_t *areas, $/;"	f
snd_pcm_areas_from_buf	pcm/pcm_local.h	249;"	d
snd_pcm_areas_from_bufs	pcm/pcm.c	/^void snd_pcm_areas_from_bufs(snd_pcm_t *pcm, snd_pcm_channel_area_t *areas, $/;"	f
snd_pcm_areas_from_bufs	pcm/pcm_local.h	251;"	d
snd_pcm_areas_silence	pcm/pcm.c	/^int snd_pcm_areas_silence(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_async	pcm/pcm.c	/^int snd_pcm_async(snd_pcm_t *pcm, int sig, pid_t pid)$/;"	f
snd_pcm_avail	pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_avail(snd_pcm_t *pcm)$/;"	f
snd_pcm_avail_delay	pcm/pcm.c	/^int snd_pcm_avail_delay(snd_pcm_t *pcm,$/;"	f
snd_pcm_avail_update	pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_avail_update(snd_pcm_t *pcm)$/;"	f
snd_pcm_build_linear_format	pcm/pcm_misc.c	/^snd_pcm_format_t snd_pcm_build_linear_format(int width, int pwidth, int unsignd, int big_endian)$/;"	f
snd_pcm_bytes_to_frames	pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_bytes_to_frames(snd_pcm_t *pcm, ssize_t bytes)$/;"	f
snd_pcm_bytes_to_samples	pcm/pcm.c	/^long snd_pcm_bytes_to_samples(snd_pcm_t *pcm, ssize_t bytes)$/;"	f
snd_pcm_channel_area_addr	pcm/pcm_local.h	/^static inline void *snd_pcm_channel_area_addr(const snd_pcm_channel_area_t *area, snd_pcm_uframes_t offset)$/;"	f
snd_pcm_channel_area_step	pcm/pcm_local.h	/^static inline unsigned int snd_pcm_channel_area_step(const snd_pcm_channel_area_t *area)$/;"	f
snd_pcm_channel_info	pcm/pcm_local.h	/^static inline int snd_pcm_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t *info)$/;"	f
snd_pcm_channel_info_shm	pcm/pcm_local.h	293;"	d
snd_pcm_channel_info_shm	pcm/pcm_mmap.c	/^int snd_pcm_channel_info_shm(snd_pcm_t *pcm, snd_pcm_channel_info_t *info, int shmid)$/;"	f
snd_pcm_channel_info_t	pcm/pcm_local.h	/^} snd_pcm_channel_info_t;$/;"	t	typeref:struct:_snd_pcm_channel_info
snd_pcm_check_error	pcm/pcm_local.h	/^static inline int snd_pcm_check_error(snd_pcm_t *pcm, int err)$/;"	f
snd_pcm_close	pcm/pcm.c	/^int snd_pcm_close(snd_pcm_t *pcm)$/;"	f
snd_pcm_conf_generic_id	pcm/pcm.c	/^int snd_pcm_conf_generic_id(const char *id)$/;"	f
snd_pcm_conf_generic_id	pcm/pcm_local.h	255;"	d
snd_pcm_copy_dump	pcm/pcm_copy.c	/^static void snd_pcm_copy_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_copy_hw_params	pcm/pcm_copy.c	/^static int snd_pcm_copy_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_copy_hw_refine	pcm/pcm_copy.c	/^static int snd_pcm_copy_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_copy_hw_refine_cchange	pcm/pcm_copy.c	/^static int snd_pcm_copy_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_copy_hw_refine_cprepare	pcm/pcm_copy.c	/^static int snd_pcm_copy_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_copy_hw_refine_schange	pcm/pcm_copy.c	/^static int snd_pcm_copy_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_copy_hw_refine_sprepare	pcm/pcm_copy.c	/^static int snd_pcm_copy_hw_refine_sprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_copy_open	pcm/pcm_copy.c	/^int snd_pcm_copy_open(snd_pcm_t **pcmp, const char *name, snd_pcm_t *slave, int close_slave)$/;"	f
snd_pcm_copy_ops	pcm/pcm_copy.c	/^static const snd_pcm_ops_t snd_pcm_copy_ops = {$/;"	v	file:
snd_pcm_copy_read_areas	pcm/pcm_copy.c	/^snd_pcm_copy_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_copy_t	pcm/pcm_copy.c	/^} snd_pcm_copy_t;$/;"	t	typeref:struct:__anon23	file:
snd_pcm_copy_write_areas	pcm/pcm_copy.c	/^snd_pcm_copy_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_delay	pcm/pcm.c	/^int snd_pcm_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f
snd_pcm_direct	pcm/pcm_direct.h	/^struct snd_pcm_direct {$/;"	s
snd_pcm_direct_async	pcm/pcm_direct.c	/^int snd_pcm_direct_async(snd_pcm_t *pcm, int sig, pid_t pid)$/;"	f
snd_pcm_direct_async	pcm/pcm_direct.h	205;"	d
snd_pcm_direct_channel_info	pcm/pcm_direct.c	/^int snd_pcm_direct_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t * info)$/;"	f
snd_pcm_direct_channel_info	pcm/pcm_direct.h	219;"	d
snd_pcm_direct_check_interleave	pcm/pcm_direct.c	/^int snd_pcm_direct_check_interleave(snd_pcm_direct_t *dmix, snd_pcm_t *pcm)$/;"	f
snd_pcm_direct_check_interleave	pcm/pcm_direct.h	199;"	d
snd_pcm_direct_clear_timer_queue	pcm/pcm_direct.c	/^void snd_pcm_direct_clear_timer_queue(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_clear_timer_queue	pcm/pcm_direct.h	229;"	d
snd_pcm_direct_client_connect	pcm/pcm_direct.c	/^int snd_pcm_direct_client_connect(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_client_connect	pcm/pcm_direct.h	189;"	d
snd_pcm_direct_client_discard	pcm/pcm_direct.c	/^int snd_pcm_direct_client_discard(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_client_discard	pcm/pcm_direct.h	191;"	d
snd_pcm_direct_get_slave_ipc_offset	pcm/pcm_direct.c	/^static int snd_pcm_direct_get_slave_ipc_offset(snd_config_t *root,$/;"	f	file:
snd_pcm_direct_hw_free	pcm/pcm_direct.c	/^int snd_pcm_direct_hw_free(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_direct_hw_free	pcm/pcm_direct.h	215;"	d
snd_pcm_direct_hw_params	pcm/pcm_direct.c	/^int snd_pcm_direct_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f
snd_pcm_direct_hw_params	pcm/pcm_direct.h	213;"	d
snd_pcm_direct_hw_refine	pcm/pcm_direct.c	/^int snd_pcm_direct_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_direct_hw_refine	pcm/pcm_direct.h	211;"	d
snd_pcm_direct_info	pcm/pcm_direct.c	/^int snd_pcm_direct_info(snd_pcm_t *pcm, snd_pcm_info_t * info)$/;"	f
snd_pcm_direct_info	pcm/pcm_direct.h	209;"	d
snd_pcm_direct_initialize_poll_fd	pcm/pcm_direct.c	/^int snd_pcm_direct_initialize_poll_fd(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_initialize_poll_fd	pcm/pcm_direct.h	197;"	d
snd_pcm_direct_initialize_secondary_slave	pcm/pcm_direct.c	/^int snd_pcm_direct_initialize_secondary_slave(snd_pcm_direct_t *dmix,$/;"	f
snd_pcm_direct_initialize_secondary_slave	pcm/pcm_direct.h	195;"	d
snd_pcm_direct_initialize_slave	pcm/pcm_direct.c	/^int snd_pcm_direct_initialize_slave(snd_pcm_direct_t *dmix, snd_pcm_t *spcm, struct slave_params *params)$/;"	f
snd_pcm_direct_initialize_slave	pcm/pcm_direct.h	193;"	d
snd_pcm_direct_mmap	pcm/pcm_direct.c	/^int snd_pcm_direct_mmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_direct_mmap	pcm/pcm_direct.h	221;"	d
snd_pcm_direct_munmap	pcm/pcm_direct.c	/^int snd_pcm_direct_munmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_direct_munmap	pcm/pcm_direct.h	223;"	d
snd_pcm_direct_nonblock	pcm/pcm_direct.c	/^int snd_pcm_direct_nonblock(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int nonblock ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_direct_nonblock	pcm/pcm_direct.h	203;"	d
snd_pcm_direct_open_conf	pcm/pcm_direct.h	/^struct snd_pcm_direct_open_conf {$/;"	s
snd_pcm_direct_open_secondary_client	pcm/pcm_direct.c	/^int snd_pcm_direct_open_secondary_client(snd_pcm_t **spcmp, snd_pcm_direct_t *dmix, const char *client_name)$/;"	f
snd_pcm_direct_open_secondary_client	pcm/pcm_direct.h	233;"	d
snd_pcm_direct_parse_bindings	pcm/pcm_direct.c	/^int snd_pcm_direct_parse_bindings(snd_pcm_direct_t *dmix,$/;"	f
snd_pcm_direct_parse_bindings	pcm/pcm_direct.h	201;"	d
snd_pcm_direct_parse_open_conf	pcm/pcm_direct.c	/^int snd_pcm_direct_parse_open_conf(snd_config_t *root, snd_config_t *conf,$/;"	f
snd_pcm_direct_parse_open_conf	pcm/pcm_direct.h	235;"	d
snd_pcm_direct_poll_revents	pcm/pcm_direct.c	/^int snd_pcm_direct_poll_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_pcm_direct_poll_revents	pcm/pcm_direct.h	207;"	d
snd_pcm_direct_resume	pcm/pcm_direct.c	/^int snd_pcm_direct_resume(snd_pcm_t *pcm)$/;"	f
snd_pcm_direct_resume	pcm/pcm_direct.h	225;"	d
snd_pcm_direct_semaphore_create_or_connect	pcm/pcm_direct.c	/^int snd_pcm_direct_semaphore_create_or_connect(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_semaphore_create_or_connect	pcm/pcm_direct.h	179;"	d
snd_pcm_direct_semaphore_discard	pcm/pcm_direct.h	/^static inline int snd_pcm_direct_semaphore_discard(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_semaphore_down	pcm/pcm_direct.h	/^static inline int snd_pcm_direct_semaphore_down(snd_pcm_direct_t *dmix, int sem_num)$/;"	f
snd_pcm_direct_semaphore_up	pcm/pcm_direct.h	/^static inline int snd_pcm_direct_semaphore_up(snd_pcm_direct_t *dmix, int sem_num)$/;"	f
snd_pcm_direct_server_create	pcm/pcm_direct.c	/^int snd_pcm_direct_server_create(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_server_create	pcm/pcm_direct.h	185;"	d
snd_pcm_direct_server_discard	pcm/pcm_direct.c	/^int snd_pcm_direct_server_discard(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_server_discard	pcm/pcm_direct.h	187;"	d
snd_pcm_direct_set_timer_params	pcm/pcm_direct.c	/^int snd_pcm_direct_set_timer_params(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_set_timer_params	pcm/pcm_direct.h	231;"	d
snd_pcm_direct_share_t	pcm/pcm_direct.h	/^} snd_pcm_direct_share_t;$/;"	t	typeref:struct:__anon27
snd_pcm_direct_shm_create_or_connect	pcm/pcm_direct.c	/^int snd_pcm_direct_shm_create_or_connect(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_shm_create_or_connect	pcm/pcm_direct.h	181;"	d
snd_pcm_direct_shm_discard	pcm/pcm_direct.c	/^int snd_pcm_direct_shm_discard(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_shm_discard	pcm/pcm_direct.h	183;"	d
snd_pcm_direct_sw_params	pcm/pcm_direct.c	/^int snd_pcm_direct_sw_params(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t * params ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_direct_sw_params	pcm/pcm_direct.h	217;"	d
snd_pcm_direct_t	pcm/pcm_direct.h	/^typedef struct snd_pcm_direct snd_pcm_direct_t;$/;"	t	typeref:struct:snd_pcm_direct
snd_pcm_direct_timer_stop	pcm/pcm_direct.c	/^int snd_pcm_direct_timer_stop(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_timer_stop	pcm/pcm_direct.h	227;"	d
snd_pcm_dmix_avail_update	pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_close	pcm/pcm_dmix.c	/^static int snd_pcm_dmix_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_delay	pcm/pcm_dmix.c	/^static int snd_pcm_dmix_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_dmix_drain	pcm/pcm_dmix.c	/^static int snd_pcm_dmix_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_drop	pcm/pcm_dmix.c	/^static int snd_pcm_dmix_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_dump	pcm/pcm_dmix.c	/^static void snd_pcm_dmix_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_dmix_fast_ops	pcm/pcm_dmix.c	/^static const snd_pcm_fast_ops_t snd_pcm_dmix_fast_ops = {$/;"	v	file:
snd_pcm_dmix_forward	pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_dmix_forwardable	pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_htimestamp	pcm/pcm_dmix.c	/^static int snd_pcm_dmix_htimestamp(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_dmix_hwsync	pcm/pcm_dmix.c	/^static int snd_pcm_dmix_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_mmap_commit	pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_dmix_open	pcm/pcm_dmix.c	/^int snd_pcm_dmix_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_dmix_ops	pcm/pcm_dmix.c	/^static const snd_pcm_ops_t snd_pcm_dmix_ops = {$/;"	v	file:
snd_pcm_dmix_pause	pcm/pcm_dmix.c	/^static int snd_pcm_dmix_pause(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int enable ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dmix_poll_revents	pcm/pcm_dmix.c	/^static int snd_pcm_dmix_poll_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f	file:
snd_pcm_dmix_prepare	pcm/pcm_dmix.c	/^static int snd_pcm_dmix_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_readi	pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_readi(snd_pcm_t *pcm ATTRIBUTE_UNUSED, void *buffer ATTRIBUTE_UNUSED, snd_pcm_uframes_t size ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dmix_readn	pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_readn(snd_pcm_t *pcm ATTRIBUTE_UNUSED, void **bufs ATTRIBUTE_UNUSED, snd_pcm_uframes_t size ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dmix_reset	pcm/pcm_dmix.c	/^static int snd_pcm_dmix_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_rewind	pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_dmix_rewindable	pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_start	pcm/pcm_dmix.c	/^static int snd_pcm_dmix_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_start_timer	pcm/pcm_dmix.c	/^static int snd_pcm_dmix_start_timer(snd_pcm_t *pcm, snd_pcm_direct_t *dmix)$/;"	f	file:
snd_pcm_dmix_state	pcm/pcm_dmix.c	/^static snd_pcm_state_t snd_pcm_dmix_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_status	pcm/pcm_dmix.c	/^static int snd_pcm_dmix_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_dmix_sync_area	pcm/pcm_dmix.c	/^static void snd_pcm_dmix_sync_area(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_sync_ptr	pcm/pcm_dmix.c	/^static int snd_pcm_dmix_sync_ptr(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_drain	pcm/pcm.c	/^int snd_pcm_drain(snd_pcm_t *pcm)$/;"	f
snd_pcm_drop	pcm/pcm.c	/^int snd_pcm_drop(snd_pcm_t *pcm)$/;"	f
snd_pcm_dshare_avail_update	pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_close	pcm/pcm_dshare.c	/^static int snd_pcm_dshare_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_delay	pcm/pcm_dshare.c	/^static int snd_pcm_dshare_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_dshare_drain	pcm/pcm_dshare.c	/^static int snd_pcm_dshare_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_drop	pcm/pcm_dshare.c	/^static int snd_pcm_dshare_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_dump	pcm/pcm_dshare.c	/^static void snd_pcm_dshare_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_dshare_fast_ops	pcm/pcm_dshare.c	/^static const snd_pcm_fast_ops_t snd_pcm_dshare_fast_ops = {$/;"	v	file:
snd_pcm_dshare_forward	pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_dshare_forwardable	pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_htimestamp	pcm/pcm_dshare.c	/^static int snd_pcm_dshare_htimestamp(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_dshare_hwsync	pcm/pcm_dshare.c	/^static int snd_pcm_dshare_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_mmap_commit	pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_dshare_open	pcm/pcm_dshare.c	/^int snd_pcm_dshare_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_dshare_ops	pcm/pcm_dshare.c	/^static const snd_pcm_ops_t snd_pcm_dshare_ops = {$/;"	v	file:
snd_pcm_dshare_pause	pcm/pcm_dshare.c	/^static int snd_pcm_dshare_pause(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int enable ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dshare_prepare	pcm/pcm_dshare.c	/^static int snd_pcm_dshare_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_readi	pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_readi(snd_pcm_t *pcm ATTRIBUTE_UNUSED, void *buffer ATTRIBUTE_UNUSED, snd_pcm_uframes_t size ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dshare_readn	pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_readn(snd_pcm_t *pcm ATTRIBUTE_UNUSED, void **bufs ATTRIBUTE_UNUSED, snd_pcm_uframes_t size ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dshare_reset	pcm/pcm_dshare.c	/^static int snd_pcm_dshare_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_rewind	pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_dshare_rewindable	pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_start	pcm/pcm_dshare.c	/^static int snd_pcm_dshare_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_start_timer	pcm/pcm_dshare.c	/^static int snd_pcm_dshare_start_timer(snd_pcm_direct_t *dshare)$/;"	f	file:
snd_pcm_dshare_state	pcm/pcm_dshare.c	/^static snd_pcm_state_t snd_pcm_dshare_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_status	pcm/pcm_dshare.c	/^static int snd_pcm_dshare_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_dshare_sync_area	pcm/pcm_dshare.c	/^static void snd_pcm_dshare_sync_area(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_sync_ptr	pcm/pcm_dshare.c	/^static int snd_pcm_dshare_sync_ptr(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_avail_update	pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_close	pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_delay	pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_dsnoop_drain	pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_drop	pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_dump	pcm/pcm_dsnoop.c	/^static void snd_pcm_dsnoop_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_dsnoop_fast_ops	pcm/pcm_dsnoop.c	/^static const snd_pcm_fast_ops_t snd_pcm_dsnoop_fast_ops = {$/;"	v	file:
snd_pcm_dsnoop_forward	pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_dsnoop_forwardable	pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_htimestamp	pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_htimestamp(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_dsnoop_hwsync	pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_mmap_commit	pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_dsnoop_open	pcm/pcm_dsnoop.c	/^int snd_pcm_dsnoop_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_dsnoop_ops	pcm/pcm_dsnoop.c	/^static const snd_pcm_ops_t snd_pcm_dsnoop_ops = {$/;"	v	file:
snd_pcm_dsnoop_pause	pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_pause(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int enable ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dsnoop_prepare	pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_reset	pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_rewind	pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_dsnoop_rewindable	pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_start	pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_state	pcm/pcm_dsnoop.c	/^static snd_pcm_state_t snd_pcm_dsnoop_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_status	pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_dsnoop_sync_area	pcm/pcm_dsnoop.c	/^static void snd_pcm_dsnoop_sync_area(snd_pcm_t *pcm, snd_pcm_uframes_t slave_hw_ptr, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_dsnoop_sync_ptr	pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_sync_ptr(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_writei	pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_writei(snd_pcm_t *pcm ATTRIBUTE_UNUSED, const void *buffer ATTRIBUTE_UNUSED, snd_pcm_uframes_t size ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dsnoop_writen	pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_writen(snd_pcm_t *pcm ATTRIBUTE_UNUSED, void **bufs ATTRIBUTE_UNUSED, snd_pcm_uframes_t size ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dump	pcm/pcm.c	/^int snd_pcm_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f
snd_pcm_dump_hw_setup	pcm/pcm.c	/^int snd_pcm_dump_hw_setup(snd_pcm_t *pcm, snd_output_t *out)$/;"	f
snd_pcm_dump_setup	pcm/pcm.c	/^int snd_pcm_dump_setup(snd_pcm_t *pcm, snd_output_t *out)$/;"	f
snd_pcm_dump_sw_setup	pcm/pcm.c	/^int snd_pcm_dump_sw_setup(snd_pcm_t *pcm, snd_output_t *out)$/;"	f
snd_pcm_extplug_close	pcm/pcm_extplug.c	/^static int snd_pcm_extplug_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_extplug_create	pcm/pcm_extplug.c	/^int snd_pcm_extplug_create(snd_pcm_extplug_t *extplug, const char *name,$/;"	f
snd_pcm_extplug_delete	pcm/pcm_extplug.c	/^int snd_pcm_extplug_delete(snd_pcm_extplug_t *extplug)$/;"	f
snd_pcm_extplug_dump	pcm/pcm_extplug.c	/^static void snd_pcm_extplug_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_extplug_hw_free	pcm/pcm_extplug.c	/^static int snd_pcm_extplug_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_extplug_hw_params	pcm/pcm_extplug.c	/^static int snd_pcm_extplug_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_extplug_hw_refine	pcm/pcm_extplug.c	/^static int snd_pcm_extplug_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_extplug_hw_refine_cchange	pcm/pcm_extplug.c	/^static int snd_pcm_extplug_hw_refine_cchange(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_extplug_hw_refine_cprepare	pcm/pcm_extplug.c	/^static int snd_pcm_extplug_hw_refine_cprepare(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_extplug_hw_refine_schange	pcm/pcm_extplug.c	/^static int snd_pcm_extplug_hw_refine_schange(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_extplug_hw_refine_sprepare	pcm/pcm_extplug.c	/^static int snd_pcm_extplug_hw_refine_sprepare(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_extplug_init	pcm/pcm_extplug.c	/^static int snd_pcm_extplug_init(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_extplug_ops	pcm/pcm_extplug.c	/^static const snd_pcm_ops_t snd_pcm_extplug_ops = {$/;"	v	file:
snd_pcm_extplug_params_reset	pcm/pcm_extplug.c	/^void snd_pcm_extplug_params_reset(snd_pcm_extplug_t *extplug)$/;"	f
snd_pcm_extplug_priv	pcm/pcm_extplug.c	/^typedef struct snd_pcm_extplug_priv {$/;"	s	file:
snd_pcm_extplug_read_areas	pcm/pcm_extplug.c	/^snd_pcm_extplug_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_extplug_set_param_list	pcm/pcm_extplug.c	/^int snd_pcm_extplug_set_param_list(snd_pcm_extplug_t *extplug, int type, unsigned int num_list, const unsigned int *list)$/;"	f
snd_pcm_extplug_set_param_minmax	pcm/pcm_extplug.c	/^int snd_pcm_extplug_set_param_minmax(snd_pcm_extplug_t *extplug, int type, unsigned int min, unsigned int max)$/;"	f
snd_pcm_extplug_set_slave_param_list	pcm/pcm_extplug.c	/^int snd_pcm_extplug_set_slave_param_list(snd_pcm_extplug_t *extplug, int type, unsigned int num_list, const unsigned int *list)$/;"	f
snd_pcm_extplug_set_slave_param_minmax	pcm/pcm_extplug.c	/^int snd_pcm_extplug_set_slave_param_minmax(snd_pcm_extplug_t *extplug, int type, unsigned int min, unsigned int max)$/;"	f
snd_pcm_extplug_write_areas	pcm/pcm_extplug.c	/^snd_pcm_extplug_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_fast_ops_t	pcm/pcm_local.h	/^} snd_pcm_fast_ops_t;$/;"	t	typeref:struct:__anon51
snd_pcm_file_add_frames	pcm/pcm_file.c	/^static void snd_pcm_file_add_frames(snd_pcm_t *pcm, $/;"	f	file:
snd_pcm_file_append_value	pcm/pcm_file.c	/^static int snd_pcm_file_append_value(char **string_p, char **index_ch_p,$/;"	f	file:
snd_pcm_file_close	pcm/pcm_file.c	/^static int snd_pcm_file_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_file_drain	pcm/pcm_file.c	/^static int snd_pcm_file_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_file_drop	pcm/pcm_file.c	/^static int snd_pcm_file_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_file_dump	pcm/pcm_file.c	/^static void snd_pcm_file_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_file_fast_ops	pcm/pcm_file.c	/^static const snd_pcm_fast_ops_t snd_pcm_file_fast_ops = {$/;"	v	file:
snd_pcm_file_format_t	pcm/pcm_file.c	/^} snd_pcm_file_format_t;$/;"	t	typeref:enum:_snd_pcm_file_format	file:
snd_pcm_file_forward	pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_file_forwardable	pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_file_hw_free	pcm/pcm_file.c	/^static int snd_pcm_file_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_file_hw_params	pcm/pcm_file.c	/^static int snd_pcm_file_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_file_mmap_commit	pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_file_open	pcm/pcm_file.c	/^int snd_pcm_file_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_file_open_output_file	pcm/pcm_file.c	/^static int snd_pcm_file_open_output_file(snd_pcm_file_t *file)$/;"	f	file:
snd_pcm_file_ops	pcm/pcm_file.c	/^static const snd_pcm_ops_t snd_pcm_file_ops = {$/;"	v	file:
snd_pcm_file_readi	pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_file_readn	pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_file_replace_fname	pcm/pcm_file.c	/^static int snd_pcm_file_replace_fname(snd_pcm_file_t *file, char **new_fname_p)$/;"	f	file:
snd_pcm_file_reset	pcm/pcm_file.c	/^static int snd_pcm_file_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_file_rewind	pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_file_rewindable	pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_file_t	pcm/pcm_file.c	/^} snd_pcm_file_t;$/;"	t	typeref:struct:__anon11	file:
snd_pcm_file_write_bytes	pcm/pcm_file.c	/^static void snd_pcm_file_write_bytes(snd_pcm_t *pcm, size_t bytes)$/;"	f	file:
snd_pcm_file_writei	pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_file_writen	pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_format_aliases	pcm/pcm.c	/^static const char *const snd_pcm_format_aliases[SND_PCM_FORMAT_LAST+1] = {$/;"	v	file:
snd_pcm_format_big_endian	pcm/pcm_misc.c	/^int snd_pcm_format_big_endian(snd_pcm_format_t format)$/;"	f
snd_pcm_format_cpu_endian	pcm/pcm_misc.c	/^int snd_pcm_format_cpu_endian(snd_pcm_format_t format)$/;"	f
snd_pcm_format_description	pcm/pcm.c	/^const char *snd_pcm_format_description(snd_pcm_format_t format)$/;"	f
snd_pcm_format_descriptions	pcm/pcm.c	/^static const char *const snd_pcm_format_descriptions[] = {$/;"	v	file:
snd_pcm_format_float	pcm/pcm_misc.c	/^int snd_pcm_format_float(snd_pcm_format_t format)$/;"	f
snd_pcm_format_linear	pcm/pcm_misc.c	/^int snd_pcm_format_linear(snd_pcm_format_t format)$/;"	f
snd_pcm_format_little_endian	pcm/pcm_misc.c	/^int snd_pcm_format_little_endian(snd_pcm_format_t format)$/;"	f
snd_pcm_format_mask_any	pcm/pcm.c	/^void snd_pcm_format_mask_any(snd_pcm_format_mask_t *mask)$/;"	f
snd_pcm_format_mask_copy	pcm/pcm.c	/^void snd_pcm_format_mask_copy(snd_pcm_format_mask_t *dst, const snd_pcm_format_mask_t *src)$/;"	f
snd_pcm_format_mask_empty	pcm/pcm.c	/^int snd_pcm_format_mask_empty(const snd_pcm_format_mask_t *mask)$/;"	f
snd_pcm_format_mask_free	pcm/pcm.c	/^void snd_pcm_format_mask_free(snd_pcm_format_mask_t *obj)$/;"	f
snd_pcm_format_mask_malloc	pcm/pcm.c	/^int snd_pcm_format_mask_malloc(snd_pcm_format_mask_t **ptr)$/;"	f
snd_pcm_format_mask_none	pcm/pcm.c	/^void snd_pcm_format_mask_none(snd_pcm_format_mask_t *mask)$/;"	f
snd_pcm_format_mask_reset	pcm/pcm.c	/^void snd_pcm_format_mask_reset(snd_pcm_format_mask_t *mask, snd_pcm_format_t val)$/;"	f
snd_pcm_format_mask_set	pcm/pcm.c	/^void snd_pcm_format_mask_set(snd_pcm_format_mask_t *mask, snd_pcm_format_t val)$/;"	f
snd_pcm_format_mask_sizeof	pcm/pcm.c	/^size_t snd_pcm_format_mask_sizeof()$/;"	f
snd_pcm_format_mask_test	pcm/pcm.c	/^int snd_pcm_format_mask_test(const snd_pcm_format_mask_t *mask, snd_pcm_format_t val)$/;"	f
snd_pcm_format_name	pcm/pcm.c	/^const char *snd_pcm_format_name(snd_pcm_format_t format)$/;"	f
snd_pcm_format_names	pcm/pcm.c	/^static const char *const snd_pcm_format_names[] = {$/;"	v	file:
snd_pcm_format_physical_width	pcm/pcm_misc.c	/^int snd_pcm_format_physical_width(snd_pcm_format_t format)$/;"	f
snd_pcm_format_set_silence	pcm/pcm_misc.c	/^int snd_pcm_format_set_silence(snd_pcm_format_t format, void *data, unsigned int samples)$/;"	f
snd_pcm_format_signed	pcm/pcm_misc.c	/^int snd_pcm_format_signed(snd_pcm_format_t format)$/;"	f
snd_pcm_format_silence	pcm/pcm_misc.c	/^u_int8_t snd_pcm_format_silence(snd_pcm_format_t format)$/;"	f
snd_pcm_format_silence_16	pcm/pcm_misc.c	/^u_int16_t snd_pcm_format_silence_16(snd_pcm_format_t format)$/;"	f
snd_pcm_format_silence_32	pcm/pcm_misc.c	/^u_int32_t snd_pcm_format_silence_32(snd_pcm_format_t format)$/;"	f
snd_pcm_format_silence_64	pcm/pcm_misc.c	/^u_int64_t snd_pcm_format_silence_64(snd_pcm_format_t format)$/;"	f
snd_pcm_format_size	pcm/pcm_misc.c	/^ssize_t snd_pcm_format_size(snd_pcm_format_t format, size_t samples)$/;"	f
snd_pcm_format_unsigned	pcm/pcm_misc.c	/^int snd_pcm_format_unsigned(snd_pcm_format_t format)$/;"	f
snd_pcm_format_value	pcm/pcm.c	/^snd_pcm_format_t snd_pcm_format_value(const char* name)$/;"	f
snd_pcm_format_width	pcm/pcm_misc.c	/^int snd_pcm_format_width(snd_pcm_format_t format)$/;"	f
snd_pcm_forward	pcm/pcm.c	/^snd_pcm_sframes_t INTERNAL(snd_pcm_forward)(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_forwardable	pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_forwardable(snd_pcm_t *pcm)$/;"	f
snd_pcm_frames_to_bytes	pcm/pcm.c	/^ssize_t snd_pcm_frames_to_bytes(snd_pcm_t *pcm, snd_pcm_sframes_t frames)$/;"	f
snd_pcm_free	pcm/pcm.c	/^int snd_pcm_free(snd_pcm_t *pcm)$/;"	f
snd_pcm_free	pcm/pcm_local.h	247;"	d
snd_pcm_generic_async	pcm/pcm_generic.c	/^int snd_pcm_generic_async(snd_pcm_t *pcm, int sig, pid_t pid)$/;"	f
snd_pcm_generic_async	pcm/pcm_generic.h	32;"	d
snd_pcm_generic_avail_update	pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_avail_update(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_avail_update	pcm/pcm_generic.h	100;"	d
snd_pcm_generic_channel_info	pcm/pcm_generic.c	/^int snd_pcm_generic_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t *info)$/;"	f
snd_pcm_generic_channel_info	pcm/pcm_generic.h	50;"	d
snd_pcm_generic_channel_info_no_buffer	pcm/pcm_generic.h	52;"	d
snd_pcm_generic_close	pcm/pcm_generic.c	/^int snd_pcm_generic_close(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_close	pcm/pcm_generic.h	28;"	d
snd_pcm_generic_delay	pcm/pcm_generic.c	/^int snd_pcm_generic_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f
snd_pcm_generic_delay	pcm/pcm_generic.h	74;"	d
snd_pcm_generic_drain	pcm/pcm_generic.c	/^int snd_pcm_generic_drain(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_drain	pcm/pcm_generic.h	68;"	d
snd_pcm_generic_drop	pcm/pcm_generic.c	/^int snd_pcm_generic_drop(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_drop	pcm/pcm_generic.h	66;"	d
snd_pcm_generic_forward	pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_generic_forward	pcm/pcm_generic.h	78;"	d
snd_pcm_generic_forwardable	pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_forwardable(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_forwardable	pcm/pcm_generic.h	76;"	d
snd_pcm_generic_htimestamp	pcm/pcm_generic.c	/^int snd_pcm_generic_htimestamp(snd_pcm_t *pcm, snd_pcm_uframes_t *avail,$/;"	f
snd_pcm_generic_hw_free	pcm/pcm_generic.c	/^int snd_pcm_generic_hw_free(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_hw_free	pcm/pcm_generic.h	42;"	d
snd_pcm_generic_hw_params	pcm/pcm_generic.c	/^int snd_pcm_generic_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_generic_hw_params	pcm/pcm_generic.h	48;"	d
snd_pcm_generic_hw_refine	pcm/pcm_generic.c	/^int snd_pcm_generic_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_generic_hw_refine	pcm/pcm_generic.h	46;"	d
snd_pcm_generic_hwsync	pcm/pcm_generic.c	/^int snd_pcm_generic_hwsync(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_hwsync	pcm/pcm_generic.h	60;"	d
snd_pcm_generic_info	pcm/pcm_generic.c	/^int snd_pcm_generic_info(snd_pcm_t *pcm, snd_pcm_info_t * info)$/;"	f
snd_pcm_generic_info	pcm/pcm_generic.h	40;"	d
snd_pcm_generic_link	pcm/pcm_generic.c	/^int snd_pcm_generic_link(snd_pcm_t *pcm1, snd_pcm_t *pcm2)$/;"	f
snd_pcm_generic_link	pcm/pcm_generic.h	84;"	d
snd_pcm_generic_link_slaves	pcm/pcm_generic.c	/^int snd_pcm_generic_link_slaves(snd_pcm_t *pcm, snd_pcm_t *master)$/;"	f
snd_pcm_generic_link_slaves	pcm/pcm_generic.h	86;"	d
snd_pcm_generic_mmap	pcm/pcm_generic.c	/^int snd_pcm_generic_mmap(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_mmap	pcm/pcm_generic.h	102;"	d
snd_pcm_generic_mmap_commit	pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_mmap_commit(snd_pcm_t *pcm, $/;"	f
snd_pcm_generic_mmap_commit	pcm/pcm_generic.h	98;"	d
snd_pcm_generic_munmap	pcm/pcm_generic.c	/^int snd_pcm_generic_munmap(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_munmap	pcm/pcm_generic.h	104;"	d
snd_pcm_generic_nonblock	pcm/pcm_generic.c	/^int snd_pcm_generic_nonblock(snd_pcm_t *pcm, int nonblock)$/;"	f
snd_pcm_generic_nonblock	pcm/pcm_generic.h	30;"	d
snd_pcm_generic_pause	pcm/pcm_generic.c	/^int snd_pcm_generic_pause(snd_pcm_t *pcm, int enable)$/;"	f
snd_pcm_generic_pause	pcm/pcm_generic.h	70;"	d
snd_pcm_generic_poll_descriptors	pcm/pcm_generic.c	/^int snd_pcm_generic_poll_descriptors(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int space)$/;"	f
snd_pcm_generic_poll_descriptors	pcm/pcm_generic.h	36;"	d
snd_pcm_generic_poll_descriptors_count	pcm/pcm_generic.c	/^int snd_pcm_generic_poll_descriptors_count(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_poll_descriptors_count	pcm/pcm_generic.h	34;"	d
snd_pcm_generic_poll_revents	pcm/pcm_generic.c	/^int snd_pcm_generic_poll_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_pcm_generic_poll_revents	pcm/pcm_generic.h	38;"	d
snd_pcm_generic_prepare	pcm/pcm_generic.c	/^int snd_pcm_generic_prepare(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_prepare	pcm/pcm_generic.h	58;"	d
snd_pcm_generic_readi	pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f
snd_pcm_generic_readi	pcm/pcm_generic.h	94;"	d
snd_pcm_generic_readn	pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
snd_pcm_generic_readn	pcm/pcm_generic.h	96;"	d
snd_pcm_generic_real_htimestamp	pcm/pcm_generic.c	/^int snd_pcm_generic_real_htimestamp(snd_pcm_t *pcm, snd_pcm_uframes_t *avail,$/;"	f
snd_pcm_generic_reset	pcm/pcm_generic.c	/^int snd_pcm_generic_reset(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_reset	pcm/pcm_generic.h	62;"	d
snd_pcm_generic_resume	pcm/pcm_generic.c	/^int snd_pcm_generic_resume(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_resume	pcm/pcm_generic.h	72;"	d
snd_pcm_generic_rewind	pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_generic_rewind	pcm/pcm_generic.h	82;"	d
snd_pcm_generic_rewindable	pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_rewindable(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_rewindable	pcm/pcm_generic.h	80;"	d
snd_pcm_generic_start	pcm/pcm_generic.c	/^int snd_pcm_generic_start(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_start	pcm/pcm_generic.h	64;"	d
snd_pcm_generic_state	pcm/pcm_generic.c	/^snd_pcm_state_t snd_pcm_generic_state(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_state	pcm/pcm_generic.h	56;"	d
snd_pcm_generic_status	pcm/pcm_generic.c	/^int snd_pcm_generic_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f
snd_pcm_generic_status	pcm/pcm_generic.h	54;"	d
snd_pcm_generic_sw_params	pcm/pcm_generic.c	/^int snd_pcm_generic_sw_params(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)$/;"	f
snd_pcm_generic_sw_params	pcm/pcm_generic.h	44;"	d
snd_pcm_generic_t	pcm/pcm_generic.h	/^} snd_pcm_generic_t;	$/;"	t	typeref:struct:__anon22
snd_pcm_generic_unlink	pcm/pcm_generic.c	/^int snd_pcm_generic_unlink(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_unlink	pcm/pcm_generic.h	88;"	d
snd_pcm_generic_writei	pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f
snd_pcm_generic_writei	pcm/pcm_generic.h	90;"	d
snd_pcm_generic_writen	pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
snd_pcm_generic_writen	pcm/pcm_generic.h	92;"	d
snd_pcm_get_params	pcm/pcm.c	/^int snd_pcm_get_params(snd_pcm_t *pcm,$/;"	f
snd_pcm_hook_add	pcm/pcm_hooks.c	/^int snd_pcm_hook_add(snd_pcm_hook_t **hookp, snd_pcm_t *pcm,$/;"	f
snd_pcm_hook_add_conf	pcm/pcm_hooks.c	/^static int snd_pcm_hook_add_conf(snd_pcm_t *pcm, snd_config_t *root, snd_config_t *conf)$/;"	f	file:
snd_pcm_hook_ctl_elems_close	pcm/pcm_hooks.c	/^static int snd_pcm_hook_ctl_elems_close(snd_pcm_hook_t *hook)$/;"	f	file:
snd_pcm_hook_ctl_elems_hw_free	pcm/pcm_hooks.c	/^static int snd_pcm_hook_ctl_elems_hw_free(snd_pcm_hook_t *hook)$/;"	f	file:
snd_pcm_hook_ctl_elems_hw_params	pcm/pcm_hooks.c	/^static int snd_pcm_hook_ctl_elems_hw_params(snd_pcm_hook_t *hook)$/;"	f	file:
snd_pcm_hook_dllist	pcm/pcm_hooks.c	/^struct snd_pcm_hook_dllist {$/;"	s	file:
snd_pcm_hook_get_pcm	pcm/pcm_hooks.c	/^snd_pcm_t *snd_pcm_hook_get_pcm(snd_pcm_hook_t *hook)$/;"	f
snd_pcm_hook_get_private	pcm/pcm_hooks.c	/^void *snd_pcm_hook_get_private(snd_pcm_hook_t *hook)$/;"	f
snd_pcm_hook_remove	pcm/pcm_hooks.c	/^int snd_pcm_hook_remove(snd_pcm_hook_t *hook)$/;"	f
snd_pcm_hook_set_private	pcm/pcm_hooks.c	/^void snd_pcm_hook_set_private(snd_pcm_hook_t *hook, void *private_data)$/;"	f
snd_pcm_hooks_close	pcm/pcm_hooks.c	/^static int snd_pcm_hooks_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hooks_dump	pcm/pcm_hooks.c	/^static void snd_pcm_hooks_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_hooks_fast_ops	pcm/pcm_hooks.c	/^static const snd_pcm_fast_ops_t snd_pcm_hooks_fast_ops = {$/;"	v	file:
snd_pcm_hooks_hw_free	pcm/pcm_hooks.c	/^static int snd_pcm_hooks_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hooks_hw_params	pcm/pcm_hooks.c	/^static int snd_pcm_hooks_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_hooks_open	pcm/pcm_hooks.c	/^int snd_pcm_hooks_open(snd_pcm_t **pcmp, const char *name, snd_pcm_t *slave, int close_slave)$/;"	f
snd_pcm_hooks_ops	pcm/pcm_hooks.c	/^static const snd_pcm_ops_t snd_pcm_hooks_ops = {$/;"	v	file:
snd_pcm_hooks_t	pcm/pcm_hooks.c	/^} snd_pcm_hooks_t;$/;"	t	typeref:struct:__anon37	file:
snd_pcm_htimestamp	pcm/pcm.c	/^int snd_pcm_htimestamp(snd_pcm_t *pcm, snd_pcm_uframes_t *avail, snd_htimestamp_t *tstamp)$/;"	f
snd_pcm_hw_async	pcm/pcm_hw.c	/^static int snd_pcm_hw_async(snd_pcm_t *pcm, int sig, pid_t pid)$/;"	f	file:
snd_pcm_hw_avail_update	pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_change_timer	pcm/pcm_hw.c	/^static int snd_pcm_hw_change_timer(snd_pcm_t *pcm, int enable)$/;"	f	file:
snd_pcm_hw_channel_info	pcm/pcm_hw.c	/^static int snd_pcm_hw_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t * info)$/;"	f	file:
snd_pcm_hw_clear_timer_queue	pcm/pcm_hw.c	/^static int snd_pcm_hw_clear_timer_queue(snd_pcm_hw_t *hw)$/;"	f	file:
snd_pcm_hw_close	pcm/pcm_hw.c	/^static int snd_pcm_hw_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_close_timer	pcm/pcm_hw.c	/^static void snd_pcm_hw_close_timer(snd_pcm_hw_t *hw)$/;"	f	file:
snd_pcm_hw_convert_from_old_params	pcm/pcm_hw.c	/^static void snd_pcm_hw_convert_from_old_params(snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_hw_convert_to_old_params	pcm/pcm_hw.c	/^static void snd_pcm_hw_convert_to_old_params(struct sndrv_pcm_hw_params_old *oparams,$/;"	f	file:
snd_pcm_hw_delay	pcm/pcm_hw.c	/^static int snd_pcm_hw_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_hw_drain	pcm/pcm_hw.c	/^static int snd_pcm_hw_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_drop	pcm/pcm_hw.c	/^static int snd_pcm_hw_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_dump	pcm/pcm_hw.c	/^static void snd_pcm_hw_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_hw_fast_ops	pcm/pcm_hw.c	/^static const snd_pcm_fast_ops_t snd_pcm_hw_fast_ops = {$/;"	v	file:
snd_pcm_hw_fast_ops	pcm/pcm_hw.c	/^static const snd_pcm_fast_ops_t snd_pcm_hw_fast_ops;$/;"	v	file:
snd_pcm_hw_fast_ops_timer	pcm/pcm_hw.c	/^static const snd_pcm_fast_ops_t snd_pcm_hw_fast_ops_timer = {$/;"	v	file:
snd_pcm_hw_fast_ops_timer	pcm/pcm_hw.c	/^static const snd_pcm_fast_ops_t snd_pcm_hw_fast_ops_timer;$/;"	v	file:
snd_pcm_hw_fast_tstamp	pcm/pcm_hw.c	/^struct timespec snd_pcm_hw_fast_tstamp(snd_pcm_t *pcm)$/;"	f
snd_pcm_hw_forward	pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_hw_forwardable	pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_free	pcm/pcm.c	/^int snd_pcm_hw_free(snd_pcm_t *pcm)$/;"	f
snd_pcm_hw_htimestamp	pcm/pcm_hw.c	/^static int snd_pcm_hw_htimestamp(snd_pcm_t *pcm, snd_pcm_uframes_t *avail,$/;"	f	file:
snd_pcm_hw_hw_free	pcm/pcm_hw.c	/^static int snd_pcm_hw_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_hw_params	pcm/pcm_hw.c	/^static int snd_pcm_hw_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_hw_hw_refine	pcm/pcm_hw.c	/^static int snd_pcm_hw_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_hw_hwsync	pcm/pcm_hw.c	/^static int snd_pcm_hw_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_info	pcm/pcm_hw.c	/^static int snd_pcm_hw_info(snd_pcm_t *pcm, snd_pcm_info_t * info)$/;"	f	file:
snd_pcm_hw_link	pcm/pcm_hw.c	/^static int snd_pcm_hw_link(snd_pcm_t *pcm1, snd_pcm_t *pcm2)$/;"	f	file:
snd_pcm_hw_link_slaves	pcm/pcm_hw.c	/^static int snd_pcm_hw_link_slaves(snd_pcm_t *pcm, snd_pcm_t *master)$/;"	f	file:
snd_pcm_hw_mmap	pcm/pcm_hw.c	/^static int snd_pcm_hw_mmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_hw_mmap_commit	pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_hw_mmap_control	pcm/pcm_hw.c	/^static int snd_pcm_hw_mmap_control(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_mmap_status	pcm/pcm_hw.c	/^static int snd_pcm_hw_mmap_status(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_munmap	pcm/pcm_hw.c	/^static int snd_pcm_hw_munmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_hw_munmap_control	pcm/pcm_hw.c	/^static int snd_pcm_hw_munmap_control(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_munmap_status	pcm/pcm_hw.c	/^static int snd_pcm_hw_munmap_status(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_nonblock	pcm/pcm_hw.c	/^static int snd_pcm_hw_nonblock(snd_pcm_t *pcm, int nonblock)$/;"	f	file:
snd_pcm_hw_open	pcm/pcm_hw.c	/^int snd_pcm_hw_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_hw_open_fd	pcm/pcm_hw.c	/^int snd_pcm_hw_open_fd(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_hw_open_fd	pcm/pcm_local.h	257;"	d
snd_pcm_hw_ops	pcm/pcm_hw.c	/^static const snd_pcm_ops_t snd_pcm_hw_ops = {$/;"	v	file:
snd_pcm_hw_param_always_eq	pcm/pcm_local.h	307;"	d
snd_pcm_hw_param_always_eq	pcm/pcm_params.c	/^int snd_pcm_hw_param_always_eq(const snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_any	pcm/pcm_local.h	315;"	d
snd_pcm_hw_param_any	pcm/pcm_params.c	/^int snd_pcm_hw_param_any(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_dump	pcm/pcm_params.c	/^void snd_pcm_hw_param_dump(const snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_empty	pcm/pcm_local.h	305;"	d
snd_pcm_hw_param_empty	pcm/pcm_params.c	/^int snd_pcm_hw_param_empty(const snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_get	pcm/pcm_local.h	335;"	d
snd_pcm_hw_param_get	pcm/pcm_params.c	/^int snd_pcm_hw_param_get(const snd_pcm_hw_params_t *params, snd_pcm_hw_param_t var,$/;"	f
snd_pcm_hw_param_get_interval	pcm/pcm_local.h	313;"	d
snd_pcm_hw_param_get_interval	pcm/pcm_params.c	/^const snd_interval_t *snd_pcm_hw_param_get_interval(const snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_get_mask	pcm/pcm_local.h	311;"	d
snd_pcm_hw_param_get_mask	pcm/pcm_params.c	/^const snd_mask_t *snd_pcm_hw_param_get_mask(const snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_get_max	pcm/pcm_local.h	339;"	d
snd_pcm_hw_param_get_max	pcm/pcm_params.c	/^int snd_pcm_hw_param_get_max(const snd_pcm_hw_params_t *params, snd_pcm_hw_param_t var,$/;"	f
snd_pcm_hw_param_get_min	pcm/pcm_local.h	337;"	d
snd_pcm_hw_param_get_min	pcm/pcm_params.c	/^int snd_pcm_hw_param_get_min(const snd_pcm_hw_params_t *params, snd_pcm_hw_param_t var,$/;"	f
snd_pcm_hw_param_name	pcm/pcm_local.h	341;"	d
snd_pcm_hw_param_name	pcm/pcm_params.c	/^const char *snd_pcm_hw_param_name(snd_pcm_hw_param_t param)$/;"	f
snd_pcm_hw_param_names	pcm/pcm_params.c	/^static const char *const snd_pcm_hw_param_names[] = {$/;"	v	file:
snd_pcm_hw_param_never_eq	pcm/pcm_local.h	309;"	d
snd_pcm_hw_param_never_eq	pcm/pcm_params.c	/^int snd_pcm_hw_param_never_eq(const snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_refine_multiple	pcm/pcm_local.h	303;"	d
snd_pcm_hw_param_refine_multiple	pcm/pcm_params.c	/^int snd_pcm_hw_param_refine_multiple(snd_pcm_t *pcm,$/;"	f
snd_pcm_hw_param_refine_near	pcm/pcm_local.h	301;"	d
snd_pcm_hw_param_refine_near	pcm/pcm_params.c	/^int snd_pcm_hw_param_refine_near(snd_pcm_t *pcm,$/;"	f
snd_pcm_hw_param_set	pcm/pcm_local.h	331;"	d
snd_pcm_hw_param_set	pcm/pcm_params.c	/^int snd_pcm_hw_param_set(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_set_first	pcm/pcm_local.h	319;"	d
snd_pcm_hw_param_set_first	pcm/pcm_params.c	/^int snd_pcm_hw_param_set_first(snd_pcm_t *pcm, $/;"	f
snd_pcm_hw_param_set_integer	pcm/pcm_local.h	317;"	d
snd_pcm_hw_param_set_integer	pcm/pcm_params.c	/^int snd_pcm_hw_param_set_integer(snd_pcm_t *pcm, $/;"	f
snd_pcm_hw_param_set_last	pcm/pcm_local.h	321;"	d
snd_pcm_hw_param_set_last	pcm/pcm_params.c	/^int snd_pcm_hw_param_set_last(snd_pcm_t *pcm, $/;"	f
snd_pcm_hw_param_set_mask	pcm/pcm_local.h	333;"	d
snd_pcm_hw_param_set_mask	pcm/pcm_params.c	/^int snd_pcm_hw_param_set_mask(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_set_max	pcm/pcm_local.h	327;"	d
snd_pcm_hw_param_set_max	pcm/pcm_params.c	/^int snd_pcm_hw_param_set_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_set_min	pcm/pcm_local.h	325;"	d
snd_pcm_hw_param_set_min	pcm/pcm_params.c	/^int snd_pcm_hw_param_set_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_set_minmax	pcm/pcm_local.h	329;"	d
snd_pcm_hw_param_set_minmax	pcm/pcm_params.c	/^int snd_pcm_hw_param_set_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_set_near	pcm/pcm_local.h	323;"	d
snd_pcm_hw_param_set_near	pcm/pcm_params.c	/^int snd_pcm_hw_param_set_near(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_set_near_minmax	pcm/pcm_params.c	/^static int snd_pcm_hw_param_set_near_minmax(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_hw_param_t	pcm/pcm_local.h	/^typedef enum sndrv_pcm_hw_param snd_pcm_hw_param_t;$/;"	t	typeref:enum:sndrv_pcm_hw_param
snd_pcm_hw_params	pcm/pcm.c	/^int snd_pcm_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_any	pcm/pcm.c	/^int snd_pcm_hw_params_any(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_can_mmap_sample_resolution	pcm/pcm.c	/^int snd_pcm_hw_params_can_mmap_sample_resolution(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_can_overrange	pcm/pcm.c	/^int snd_pcm_hw_params_can_overrange(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_can_pause	pcm/pcm.c	/^int snd_pcm_hw_params_can_pause(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_can_resume	pcm/pcm.c	/^int snd_pcm_hw_params_can_resume(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_can_sync_start	pcm/pcm.c	/^int snd_pcm_hw_params_can_sync_start(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_choose	pcm/pcm_params.c	/^static int snd_pcm_hw_params_choose(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_hw_params_copy	pcm/pcm.c	/^void snd_pcm_hw_params_copy(snd_pcm_hw_params_t *dst, const snd_pcm_hw_params_t *src)$/;"	f
snd_pcm_hw_params_current	pcm/pcm.c	/^int snd_pcm_hw_params_current(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_dump	pcm/pcm.c	/^int snd_pcm_hw_params_dump(snd_pcm_hw_params_t *params, snd_output_t *out)$/;"	f
snd_pcm_hw_params_free	pcm/pcm.c	/^void snd_pcm_hw_params_free(snd_pcm_hw_params_t *obj)$/;"	f
snd_pcm_hw_params_get_access	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_access)(const snd_pcm_hw_params_t *params, snd_pcm_access_t *access)$/;"	f
snd_pcm_hw_params_get_access_mask	pcm/pcm.c	/^int snd_pcm_hw_params_get_access_mask(snd_pcm_hw_params_t *params, snd_pcm_access_mask_t *mask)$/;"	f
snd_pcm_hw_params_get_buffer_size	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_buffer_size)(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_get_buffer_size_max	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_buffer_size_max)(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_get_buffer_size_min	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_buffer_size_min)(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_get_buffer_time	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_buffer_time)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_buffer_time_max	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_buffer_time_max)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_buffer_time_min	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_buffer_time_min)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_channels	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_channels)(const snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_get_channels_max	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_channels_max)(const snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_get_channels_min	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_channels_min)(const snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_get_export_buffer	pcm/pcm.c	/^int snd_pcm_hw_params_get_export_buffer(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_get_fifo_size	pcm/pcm.c	/^int snd_pcm_hw_params_get_fifo_size(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_get_format	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_format)(const snd_pcm_hw_params_t *params, snd_pcm_format_t *format)$/;"	f
snd_pcm_hw_params_get_format_mask	pcm/pcm.c	/^void snd_pcm_hw_params_get_format_mask(snd_pcm_hw_params_t *params, snd_pcm_format_mask_t *mask)$/;"	f
snd_pcm_hw_params_get_min_align	pcm/pcm.c	/^int snd_pcm_hw_params_get_min_align(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_get_period_size	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_period_size)(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_get_period_size_max	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_period_size_max)(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_get_period_size_min	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_period_size_min)(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_get_period_time	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_period_time)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_period_time_max	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_period_time_max)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_period_time_min	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_period_time_min)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_periods	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_periods)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_periods_max	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_periods_max)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_periods_min	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_periods_min)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_rate	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_rate)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_rate_max	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_rate_max)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_rate_min	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_rate_min)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_rate_numden	pcm/pcm.c	/^int snd_pcm_hw_params_get_rate_numden(const snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_params_get_rate_resample	pcm/pcm.c	/^int snd_pcm_hw_params_get_rate_resample(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_get_sbits	pcm/pcm.c	/^int snd_pcm_hw_params_get_sbits(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_get_subformat	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_subformat)(const snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)$/;"	f
snd_pcm_hw_params_get_subformat_mask	pcm/pcm.c	/^void snd_pcm_hw_params_get_subformat_mask(snd_pcm_hw_params_t *params, snd_pcm_subformat_mask_t *mask)$/;"	f
snd_pcm_hw_params_get_tick_time	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_tick_time)(const snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_get_tick_time_max	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_tick_time_max)(const snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_get_tick_time_min	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_tick_time_min)(const snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_is_batch	pcm/pcm.c	/^int snd_pcm_hw_params_is_batch(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_is_block_transfer	pcm/pcm.c	/^int snd_pcm_hw_params_is_block_transfer(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_is_double	pcm/pcm.c	/^int snd_pcm_hw_params_is_double(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_is_half_duplex	pcm/pcm.c	/^int snd_pcm_hw_params_is_half_duplex(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_is_joint_duplex	pcm/pcm.c	/^int snd_pcm_hw_params_is_joint_duplex(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_is_monotonic	pcm/pcm.c	/^int snd_pcm_hw_params_is_monotonic(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_malloc	pcm/pcm.c	/^int snd_pcm_hw_params_malloc(snd_pcm_hw_params_t **ptr)$/;"	f
snd_pcm_hw_params_set_access	pcm/pcm.c	/^int snd_pcm_hw_params_set_access(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t access)$/;"	f
snd_pcm_hw_params_set_access_first	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_access_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t *access)$/;"	f
snd_pcm_hw_params_set_access_last	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_access_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t *access)$/;"	f
snd_pcm_hw_params_set_access_mask	pcm/pcm.c	/^int snd_pcm_hw_params_set_access_mask(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_mask_t *mask)$/;"	f
snd_pcm_hw_params_set_buffer_size	pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_size(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val)$/;"	f
snd_pcm_hw_params_set_buffer_size_first	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_buffer_size_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_set_buffer_size_last	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_buffer_size_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_set_buffer_size_max	pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_size_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_set_buffer_size_min	pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_size_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_set_buffer_size_minmax	pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_size_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *min, snd_pcm_uframes_t *max)$/;"	f
snd_pcm_hw_params_set_buffer_size_near	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_buffer_size_near)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_set_buffer_time	pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_time(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_set_buffer_time_first	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_buffer_time_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_buffer_time_last	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_buffer_time_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_buffer_time_max	pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_time_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_buffer_time_min	pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_time_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_buffer_time_minmax	pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_time_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)$/;"	f
snd_pcm_hw_params_set_buffer_time_near	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_buffer_time_near)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_channels	pcm/pcm.c	/^int snd_pcm_hw_params_set_channels(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)$/;"	f
snd_pcm_hw_params_set_channels_first	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_channels_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_set_channels_last	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_channels_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_set_channels_max	pcm/pcm.c	/^int snd_pcm_hw_params_set_channels_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_set_channels_min	pcm/pcm.c	/^int snd_pcm_hw_params_set_channels_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_set_channels_minmax	pcm/pcm.c	/^int snd_pcm_hw_params_set_channels_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, unsigned int *max)$/;"	f
snd_pcm_hw_params_set_channels_near	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_channels_near)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_set_export_buffer	pcm/pcm.c	/^int snd_pcm_hw_params_set_export_buffer(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)$/;"	f
snd_pcm_hw_params_set_format	pcm/pcm.c	/^int snd_pcm_hw_params_set_format(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t format)$/;"	f
snd_pcm_hw_params_set_format_first	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_format_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t *format)$/;"	f
snd_pcm_hw_params_set_format_last	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_format_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t *format)$/;"	f
snd_pcm_hw_params_set_format_mask	pcm/pcm.c	/^int snd_pcm_hw_params_set_format_mask(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_mask_t *mask)$/;"	f
snd_pcm_hw_params_set_period_size	pcm/pcm.c	/^int snd_pcm_hw_params_set_period_size(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val, int dir)$/;"	f
snd_pcm_hw_params_set_period_size_first	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_period_size_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_size_integer	pcm/pcm.c	/^int snd_pcm_hw_params_set_period_size_integer(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_set_period_size_last	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_period_size_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_size_max	pcm/pcm.c	/^int snd_pcm_hw_params_set_period_size_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_size_min	pcm/pcm.c	/^int snd_pcm_hw_params_set_period_size_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_size_minmax	pcm/pcm.c	/^int snd_pcm_hw_params_set_period_size_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *min, int *mindir, snd_pcm_uframes_t *max, int *maxdir)$/;"	f
snd_pcm_hw_params_set_period_size_near	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_period_size_near)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_time	pcm/pcm.c	/^int snd_pcm_hw_params_set_period_time(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_set_period_time_first	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_period_time_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_time_last	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_period_time_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_time_max	pcm/pcm.c	/^int snd_pcm_hw_params_set_period_time_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_time_min	pcm/pcm.c	/^int snd_pcm_hw_params_set_period_time_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_time_minmax	pcm/pcm.c	/^int snd_pcm_hw_params_set_period_time_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)$/;"	f
snd_pcm_hw_params_set_period_time_near	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_period_time_near)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_periods	pcm/pcm.c	/^int snd_pcm_hw_params_set_periods(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_set_periods_first	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_periods_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_periods_integer	pcm/pcm.c	/^int snd_pcm_hw_params_set_periods_integer(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_set_periods_last	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_periods_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_periods_max	pcm/pcm.c	/^int snd_pcm_hw_params_set_periods_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_periods_min	pcm/pcm.c	/^int snd_pcm_hw_params_set_periods_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_periods_minmax	pcm/pcm.c	/^int snd_pcm_hw_params_set_periods_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)$/;"	f
snd_pcm_hw_params_set_periods_near	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_periods_near)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_rate	pcm/pcm.c	/^int snd_pcm_hw_params_set_rate(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_set_rate_first	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_rate_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_rate_last	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_rate_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_rate_max	pcm/pcm.c	/^int snd_pcm_hw_params_set_rate_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_rate_min	pcm/pcm.c	/^int snd_pcm_hw_params_set_rate_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_rate_minmax	pcm/pcm.c	/^int snd_pcm_hw_params_set_rate_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)$/;"	f
snd_pcm_hw_params_set_rate_near	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_rate_near)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_rate_resample	pcm/pcm.c	/^int snd_pcm_hw_params_set_rate_resample(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)$/;"	f
snd_pcm_hw_params_set_subformat	pcm/pcm.c	/^int snd_pcm_hw_params_set_subformat(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t subformat)$/;"	f
snd_pcm_hw_params_set_subformat_first	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_subformat_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)$/;"	f
snd_pcm_hw_params_set_subformat_last	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_subformat_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)$/;"	f
snd_pcm_hw_params_set_subformat_mask	pcm/pcm.c	/^int snd_pcm_hw_params_set_subformat_mask(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_mask_t *mask)$/;"	f
snd_pcm_hw_params_set_tick_time	pcm/pcm.c	/^int snd_pcm_hw_params_set_tick_time(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int val ATTRIBUTE_UNUSED, int dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_set_tick_time_first	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_tick_time_first)(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val ATTRIBUTE_UNUSED, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_set_tick_time_last	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_tick_time_last)(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val ATTRIBUTE_UNUSED, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_set_tick_time_max	pcm/pcm.c	/^int snd_pcm_hw_params_set_tick_time_max(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val ATTRIBUTE_UNUSED, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_set_tick_time_min	pcm/pcm.c	/^int snd_pcm_hw_params_set_tick_time_min(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val ATTRIBUTE_UNUSED, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_set_tick_time_minmax	pcm/pcm.c	/^int snd_pcm_hw_params_set_tick_time_minmax(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *min ATTRIBUTE_UNUSED, int *mindir ATTRIBUTE_UNUSED, unsigned int *max ATTRIBUTE_UNUSED, int *maxdir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_set_tick_time_near	pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_tick_time_near)(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val ATTRIBUTE_UNUSED, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_sizeof	pcm/pcm.c	/^size_t snd_pcm_hw_params_sizeof()$/;"	f
snd_pcm_hw_params_slave	pcm/pcm_local.h	299;"	d
snd_pcm_hw_params_slave	pcm/pcm_params.c	/^int snd_pcm_hw_params_slave(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_params_test_access	pcm/pcm.c	/^int snd_pcm_hw_params_test_access(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t access)$/;"	f
snd_pcm_hw_params_test_buffer_size	pcm/pcm.c	/^int snd_pcm_hw_params_test_buffer_size(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val)$/;"	f
snd_pcm_hw_params_test_buffer_time	pcm/pcm.c	/^int snd_pcm_hw_params_test_buffer_time(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_test_channels	pcm/pcm.c	/^int snd_pcm_hw_params_test_channels(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)$/;"	f
snd_pcm_hw_params_test_format	pcm/pcm.c	/^int snd_pcm_hw_params_test_format(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t format)$/;"	f
snd_pcm_hw_params_test_period_size	pcm/pcm.c	/^int snd_pcm_hw_params_test_period_size(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val, int dir)$/;"	f
snd_pcm_hw_params_test_period_time	pcm/pcm.c	/^int snd_pcm_hw_params_test_period_time(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_test_periods	pcm/pcm.c	/^int snd_pcm_hw_params_test_periods(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_test_rate	pcm/pcm.c	/^int snd_pcm_hw_params_test_rate(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_test_subformat	pcm/pcm.c	/^int snd_pcm_hw_params_test_subformat(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t subformat)$/;"	f
snd_pcm_hw_params_test_tick_time	pcm/pcm.c	/^int snd_pcm_hw_params_test_tick_time(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int val, int dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_pause	pcm/pcm_hw.c	/^static int snd_pcm_hw_pause(snd_pcm_t *pcm, int enable)$/;"	f	file:
snd_pcm_hw_poll_descriptors	pcm/pcm_hw.c	/^static int snd_pcm_hw_poll_descriptors(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int space)$/;"	f	file:
snd_pcm_hw_poll_descriptors_count	pcm/pcm_hw.c	/^static int snd_pcm_hw_poll_descriptors_count(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_hw_poll_revents	pcm/pcm_hw.c	/^static int snd_pcm_hw_poll_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned nfds, unsigned short *revents)$/;"	f	file:
snd_pcm_hw_prepare	pcm/pcm_hw.c	/^static int snd_pcm_hw_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_readi	pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_hw_readn	pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_hw_refine	pcm/pcm_params.c	/^int snd_pcm_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_refine_slave	pcm/pcm_local.h	297;"	d
snd_pcm_hw_refine_slave	pcm/pcm_params.c	/^int snd_pcm_hw_refine_slave(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_refine_soft	pcm/pcm_local.h	295;"	d
snd_pcm_hw_refine_soft	pcm/pcm_params.c	/^int snd_pcm_hw_refine_soft(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_reset	pcm/pcm_hw.c	/^static int snd_pcm_hw_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_resume	pcm/pcm_hw.c	/^static int snd_pcm_hw_resume(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_rewind	pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_hw_rewindable	pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_rule_div	pcm/pcm_params.c	/^static int snd_pcm_hw_rule_div(snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_hw_rule_format	pcm/pcm_params.c	/^static int snd_pcm_hw_rule_format(snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_hw_rule_func_t	pcm/pcm_params.c	/^typedef int (*snd_pcm_hw_rule_func_t)(snd_pcm_hw_params_t *params,$/;"	t	file:
snd_pcm_hw_rule_mul	pcm/pcm_params.c	/^static int snd_pcm_hw_rule_mul(snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_hw_rule_muldivk	pcm/pcm_params.c	/^static int snd_pcm_hw_rule_muldivk(snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_hw_rule_mulkdiv	pcm/pcm_params.c	/^static int snd_pcm_hw_rule_mulkdiv(snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_hw_rule_sample_bits	pcm/pcm_params.c	/^static int snd_pcm_hw_rule_sample_bits(snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_hw_rule_t	pcm/pcm_params.c	/^typedef struct _snd_pcm_hw_rule snd_pcm_hw_rule_t;$/;"	t	typeref:struct:_snd_pcm_hw_rule	file:
snd_pcm_hw_start	pcm/pcm_hw.c	/^static int snd_pcm_hw_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_state	pcm/pcm_hw.c	/^static snd_pcm_state_t snd_pcm_hw_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_status	pcm/pcm_hw.c	/^static int snd_pcm_hw_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_hw_sw_params	pcm/pcm_hw.c	/^static int snd_pcm_hw_sw_params(snd_pcm_t *pcm, snd_pcm_sw_params_t * params)$/;"	f	file:
snd_pcm_hw_t	pcm/pcm_hw.c	/^} snd_pcm_hw_t;$/;"	t	typeref:struct:__anon36	file:
snd_pcm_hw_unlink	pcm/pcm_hw.c	/^static int snd_pcm_hw_unlink(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_writei	pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_hw_writen	pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_hwsync	pcm/pcm.c	/^int snd_pcm_hwsync(snd_pcm_t *pcm)$/;"	f
snd_pcm_iec958	pcm/pcm_iec958.c	/^struct snd_pcm_iec958 {$/;"	s	file:
snd_pcm_iec958_decode	pcm/pcm_iec958.c	/^static void snd_pcm_iec958_decode(snd_pcm_iec958_t *iec,$/;"	f	file:
snd_pcm_iec958_dump	pcm/pcm_iec958.c	/^static void snd_pcm_iec958_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_iec958_encode	pcm/pcm_iec958.c	/^static void snd_pcm_iec958_encode(snd_pcm_iec958_t *iec,$/;"	f	file:
snd_pcm_iec958_hw_params	pcm/pcm_iec958.c	/^static int snd_pcm_iec958_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_iec958_hw_refine	pcm/pcm_iec958.c	/^static int snd_pcm_iec958_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_iec958_hw_refine_cchange	pcm/pcm_iec958.c	/^static int snd_pcm_iec958_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_iec958_hw_refine_cprepare	pcm/pcm_iec958.c	/^static int snd_pcm_iec958_hw_refine_cprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_iec958_hw_refine_schange	pcm/pcm_iec958.c	/^static int snd_pcm_iec958_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_iec958_hw_refine_sprepare	pcm/pcm_iec958.c	/^static int snd_pcm_iec958_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_iec958_init	pcm/pcm_iec958.c	/^static int snd_pcm_iec958_init(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_iec958_open	pcm/pcm_iec958.c	/^int snd_pcm_iec958_open(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat,$/;"	f
snd_pcm_iec958_ops	pcm/pcm_iec958.c	/^static const snd_pcm_ops_t snd_pcm_iec958_ops = {$/;"	v	file:
snd_pcm_iec958_read_areas	pcm/pcm_iec958.c	/^snd_pcm_iec958_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_iec958_t	pcm/pcm_iec958.c	/^typedef struct snd_pcm_iec958 snd_pcm_iec958_t;$/;"	t	typeref:struct:snd_pcm_iec958	file:
snd_pcm_iec958_write_areas	pcm/pcm_iec958.c	/^snd_pcm_iec958_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_info	pcm/pcm.c	/^int snd_pcm_info(snd_pcm_t *pcm, snd_pcm_info_t *info)$/;"	f
snd_pcm_info_copy	pcm/pcm.c	/^void snd_pcm_info_copy(snd_pcm_info_t *dst, const snd_pcm_info_t *src)$/;"	f
snd_pcm_info_free	pcm/pcm.c	/^void snd_pcm_info_free(snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_card	pcm/pcm.c	/^int snd_pcm_info_get_card(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_class	pcm/pcm.c	/^snd_pcm_class_t snd_pcm_info_get_class(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_device	pcm/pcm.c	/^unsigned int snd_pcm_info_get_device(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_id	pcm/pcm.c	/^const char *snd_pcm_info_get_id(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_name	pcm/pcm.c	/^const char *snd_pcm_info_get_name(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_stream	pcm/pcm.c	/^snd_pcm_stream_t snd_pcm_info_get_stream(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_subclass	pcm/pcm.c	/^snd_pcm_subclass_t snd_pcm_info_get_subclass(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_subdevice	pcm/pcm.c	/^unsigned int snd_pcm_info_get_subdevice(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_subdevice_name	pcm/pcm.c	/^const char *snd_pcm_info_get_subdevice_name(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_subdevices_avail	pcm/pcm.c	/^unsigned int snd_pcm_info_get_subdevices_avail(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_subdevices_count	pcm/pcm.c	/^unsigned int snd_pcm_info_get_subdevices_count(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_sync	pcm/pcm.c	/^snd_pcm_sync_id_t snd_pcm_info_get_sync(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_malloc	pcm/pcm.c	/^int snd_pcm_info_malloc(snd_pcm_info_t **ptr)$/;"	f
snd_pcm_info_set_device	pcm/pcm.c	/^void snd_pcm_info_set_device(snd_pcm_info_t *obj, unsigned int val)$/;"	f
snd_pcm_info_set_stream	pcm/pcm.c	/^void snd_pcm_info_set_stream(snd_pcm_info_t *obj, snd_pcm_stream_t val)$/;"	f
snd_pcm_info_set_subdevice	pcm/pcm.c	/^void snd_pcm_info_set_subdevice(snd_pcm_info_t *obj, unsigned int val)$/;"	f
snd_pcm_info_sizeof	pcm/pcm.c	/^size_t snd_pcm_info_sizeof()$/;"	f
snd_pcm_ioplug_async	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_async(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f	file:
snd_pcm_ioplug_avail_update	pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_channel_info	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t *info)$/;"	f	file:
snd_pcm_ioplug_close	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_create	pcm/pcm_ioplug.c	/^int snd_pcm_ioplug_create(snd_pcm_ioplug_t *ioplug, const char *name,$/;"	f
snd_pcm_ioplug_delay	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_ioplug_delete	pcm/pcm_ioplug.c	/^int snd_pcm_ioplug_delete(snd_pcm_ioplug_t *ioplug)$/;"	f
snd_pcm_ioplug_drain	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_drop	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_dump	pcm/pcm_ioplug.c	/^static void snd_pcm_ioplug_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_ioplug_fast_ops	pcm/pcm_ioplug.c	/^static const snd_pcm_fast_ops_t snd_pcm_ioplug_fast_ops = {$/;"	v	file:
snd_pcm_ioplug_forward	pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_ioplug_forwardable	pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_hw_free	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_hw_params	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_ioplug_hw_ptr_update	pcm/pcm_ioplug.c	/^static void snd_pcm_ioplug_hw_ptr_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_hw_refine	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_ioplug_hwsync	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_info	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_info(snd_pcm_t *pcm, snd_pcm_info_t *info)$/;"	f	file:
snd_pcm_ioplug_mmap	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_mmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_ioplug_mmap_areas	pcm/pcm_ioplug.c	/^const snd_pcm_channel_area_t *snd_pcm_ioplug_mmap_areas(snd_pcm_ioplug_t *ioplug)$/;"	f
snd_pcm_ioplug_mmap_commit	pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_ioplug_munmap	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_munmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_ioplug_nonblock	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_nonblock(snd_pcm_t *pcm, int nonblock)$/;"	f	file:
snd_pcm_ioplug_ops	pcm/pcm_ioplug.c	/^static const snd_pcm_ops_t snd_pcm_ioplug_ops = {$/;"	v	file:
snd_pcm_ioplug_params_reset	pcm/pcm_ioplug.c	/^void snd_pcm_ioplug_params_reset(snd_pcm_ioplug_t *ioplug)$/;"	f
snd_pcm_ioplug_pause	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_pause(snd_pcm_t *pcm, int enable)$/;"	f	file:
snd_pcm_ioplug_poll_descriptors	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_poll_descriptors(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int space)$/;"	f	file:
snd_pcm_ioplug_poll_descriptors_count	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_poll_descriptors_count(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_poll_revents	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_poll_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f	file:
snd_pcm_ioplug_prepare	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_priv	pcm/pcm_ioplug.c	/^typedef struct snd_pcm_ioplug_priv {$/;"	s	file:
snd_pcm_ioplug_readi	pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_ioplug_readn	pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_ioplug_reinit_status	pcm/pcm_ioplug.c	/^int snd_pcm_ioplug_reinit_status(snd_pcm_ioplug_t *ioplug)$/;"	f
snd_pcm_ioplug_reset	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_resume	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_resume(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_rewind	pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_ioplug_rewindable	pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_set_param_list	pcm/pcm_ioplug.c	/^int snd_pcm_ioplug_set_param_list(snd_pcm_ioplug_t *ioplug, int type, unsigned int num_list, const unsigned int *list)$/;"	f
snd_pcm_ioplug_set_param_minmax	pcm/pcm_ioplug.c	/^int snd_pcm_ioplug_set_param_minmax(snd_pcm_ioplug_t *ioplug, int type, unsigned int min, unsigned int max)$/;"	f
snd_pcm_ioplug_set_state	pcm/pcm_ioplug.c	/^int snd_pcm_ioplug_set_state(snd_pcm_ioplug_t *ioplug, snd_pcm_state_t state)$/;"	f
snd_pcm_ioplug_start	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_state	pcm/pcm_ioplug.c	/^static snd_pcm_state_t snd_pcm_ioplug_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_status	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_ioplug_sw_params	pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_sw_params(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)$/;"	f	file:
snd_pcm_ioplug_writei	pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_ioplug_writen	pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_ladspa_add_default_controls	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_add_default_controls(snd_pcm_ladspa_plugin_t *lplug,$/;"	f	file:
snd_pcm_ladspa_add_plugin	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_add_plugin(struct list_head *list,$/;"	f	file:
snd_pcm_ladspa_add_to_array	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_add_to_array(snd_pcm_ladspa_array_t *array,$/;"	f	file:
snd_pcm_ladspa_add_to_carray	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_add_to_carray(snd_pcm_ladspa_array_t *array,$/;"	f	file:
snd_pcm_ladspa_allocate_instances	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_allocate_instances(snd_pcm_t *pcm, snd_pcm_ladspa_t *ladspa)$/;"	f	file:
snd_pcm_ladspa_allocate_memory	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_allocate_memory(snd_pcm_t *pcm, snd_pcm_ladspa_t *ladspa)$/;"	f	file:
snd_pcm_ladspa_allocate_zero	pcm/pcm_ladspa.c	/^static LADSPA_Data *snd_pcm_ladspa_allocate_zero(snd_pcm_ladspa_t *ladspa, unsigned int idx)$/;"	f	file:
snd_pcm_ladspa_array_t	pcm/pcm_ladspa.c	/^} snd_pcm_ladspa_array_t;$/;"	t	typeref:struct:__anon55	file:
snd_pcm_ladspa_build_plugins	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_build_plugins(struct list_head *list,$/;"	f	file:
snd_pcm_ladspa_check_connect	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_check_connect(snd_pcm_ladspa_plugin_t *plugin,$/;"	f	file:
snd_pcm_ladspa_check_dir	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_check_dir(snd_pcm_ladspa_plugin_t * const plugin,$/;"	f	file:
snd_pcm_ladspa_check_file	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_check_file(snd_pcm_ladspa_plugin_t * const plugin,$/;"	f	file:
snd_pcm_ladspa_close	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ladspa_connect_controls	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_connect_controls(snd_pcm_ladspa_plugin_t *plugin,$/;"	f	file:
snd_pcm_ladspa_connect_plugin	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_connect_plugin(snd_pcm_ladspa_plugin_t *plugin,$/;"	f	file:
snd_pcm_ladspa_connect_plugin1	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_connect_plugin1(snd_pcm_ladspa_plugin_t *plugin,$/;"	f	file:
snd_pcm_ladspa_connect_plugin_duplicate	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_connect_plugin_duplicate(snd_pcm_ladspa_plugin_t *plugin,$/;"	f	file:
snd_pcm_ladspa_connect_plugin_duplicate1	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_connect_plugin_duplicate1(snd_pcm_ladspa_plugin_t *plugin,$/;"	f	file:
snd_pcm_ladspa_count_ports	pcm/pcm_ladspa.c	/^static unsigned int snd_pcm_ladspa_count_ports(snd_pcm_ladspa_plugin_t *lplug,$/;"	f	file:
snd_pcm_ladspa_dump	pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_ladspa_dump_array	pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_dump_array(snd_output_t *out,$/;"	f	file:
snd_pcm_ladspa_dump_direction	pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_dump_direction(snd_pcm_ladspa_plugin_t *plugin,$/;"	f	file:
snd_pcm_ladspa_eps_t	pcm/pcm_ladspa.c	/^} snd_pcm_ladspa_eps_t;$/;"	t	typeref:struct:__anon56	file:
snd_pcm_ladspa_find_port	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_find_port(unsigned int *res,$/;"	f	file:
snd_pcm_ladspa_find_port_idx	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_find_port_idx(unsigned int *res,$/;"	f	file:
snd_pcm_ladspa_find_sport	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_find_sport(unsigned int *res,$/;"	f	file:
snd_pcm_ladspa_free	pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_free(snd_pcm_ladspa_t *ladspa)$/;"	f	file:
snd_pcm_ladspa_free_eps	pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_free_eps(snd_pcm_ladspa_eps_t *eps)$/;"	f	file:
snd_pcm_ladspa_free_instances	pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_free_instances(snd_pcm_t *pcm, snd_pcm_ladspa_t *ladspa, int cleanup)$/;"	f	file:
snd_pcm_ladspa_free_io	pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_free_io(snd_pcm_ladspa_plugin_io_t *io)$/;"	f	file:
snd_pcm_ladspa_free_plugins	pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_free_plugins(struct list_head *plugins)$/;"	f	file:
snd_pcm_ladspa_get_default_cvalue	pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_get_default_cvalue(const LADSPA_Descriptor * desc, unsigned int port, LADSPA_Data *val) $/;"	f	file:
snd_pcm_ladspa_hw_free	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ladspa_hw_params	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_ladspa_hw_refine	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_ladspa_hw_refine_cchange	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_ladspa_hw_refine_cprepare	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_ladspa_hw_refine_schange	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_ladspa_hw_refine_sprepare	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_hw_refine_sprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_ladspa_init	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_init(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ladspa_instance	pcm/pcm_ladspa.c	/^typedef struct snd_pcm_ladspa_instance {$/;"	s	file:
snd_pcm_ladspa_instance_t	pcm/pcm_ladspa.c	/^} snd_pcm_ladspa_instance_t;$/;"	t	typeref:struct:snd_pcm_ladspa_instance	file:
snd_pcm_ladspa_look_for_plugin	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_look_for_plugin(snd_pcm_ladspa_plugin_t * const plugin,$/;"	f	file:
snd_pcm_ladspa_open	pcm/pcm_ladspa.c	/^int snd_pcm_ladspa_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_ladspa_ops	pcm/pcm_ladspa.c	/^static const snd_pcm_ops_t snd_pcm_ladspa_ops = {$/;"	v	file:
snd_pcm_ladspa_parse_bindings	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_parse_bindings(snd_pcm_ladspa_plugin_t *lplug,$/;"	f	file:
snd_pcm_ladspa_parse_controls	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_parse_controls(snd_pcm_ladspa_plugin_t *lplug,$/;"	f	file:
snd_pcm_ladspa_parse_ioconfig	pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_parse_ioconfig(snd_pcm_ladspa_plugin_t *lplug,$/;"	f	file:
snd_pcm_ladspa_plugin_io_t	pcm/pcm_ladspa.c	/^} snd_pcm_ladspa_plugin_io_t;$/;"	t	typeref:struct:__anon57	file:
snd_pcm_ladspa_plugin_t	pcm/pcm_ladspa.c	/^} snd_pcm_ladspa_plugin_t;$/;"	t	typeref:struct:__anon58	file:
snd_pcm_ladspa_plugins_dump	pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_plugins_dump(struct list_head *list, snd_output_t *out)$/;"	f	file:
snd_pcm_ladspa_policy_t	pcm/pcm_ladspa.c	/^} snd_pcm_ladspa_policy_t;$/;"	t	typeref:enum:_snd_pcm_ladspa_policy	file:
snd_pcm_ladspa_read_areas	pcm/pcm_ladspa.c	/^snd_pcm_ladspa_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_ladspa_t	pcm/pcm_ladspa.c	/^} snd_pcm_ladspa_t;$/;"	t	typeref:struct:__anon54	file:
snd_pcm_ladspa_write_areas	pcm/pcm_ladspa.c	/^snd_pcm_ladspa_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_lfloat_convert_float_integer	pcm/pcm_lfloat.c	/^void snd_pcm_lfloat_convert_float_integer(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_lfloat_convert_integer_float	pcm/pcm_lfloat.c	/^void snd_pcm_lfloat_convert_integer_float(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_lfloat_dump	pcm/pcm_lfloat.c	/^static void snd_pcm_lfloat_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_lfloat_get_s32_index	pcm/pcm_lfloat.c	/^int snd_pcm_lfloat_get_s32_index(snd_pcm_format_t format)$/;"	f
snd_pcm_lfloat_hw_params	pcm/pcm_lfloat.c	/^static int snd_pcm_lfloat_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_lfloat_hw_refine	pcm/pcm_lfloat.c	/^static int snd_pcm_lfloat_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_lfloat_hw_refine_cchange	pcm/pcm_lfloat.c	/^static int snd_pcm_lfloat_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_lfloat_hw_refine_cprepare	pcm/pcm_lfloat.c	/^static int snd_pcm_lfloat_hw_refine_cprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_lfloat_hw_refine_schange	pcm/pcm_lfloat.c	/^static int snd_pcm_lfloat_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_lfloat_hw_refine_sprepare	pcm/pcm_lfloat.c	/^static int snd_pcm_lfloat_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_lfloat_open	pcm/pcm_lfloat.c	/^int snd_pcm_lfloat_open(snd_pcm_t **pcmp ATTRIBUTE_UNUSED,$/;"	f
snd_pcm_lfloat_open	pcm/pcm_lfloat.c	/^int snd_pcm_lfloat_open(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave)$/;"	f
snd_pcm_lfloat_ops	pcm/pcm_lfloat.c	/^static const snd_pcm_ops_t snd_pcm_lfloat_ops = {$/;"	v	file:
snd_pcm_lfloat_put_s32_index	pcm/pcm_lfloat.c	/^int snd_pcm_lfloat_put_s32_index(snd_pcm_format_t format)$/;"	f
snd_pcm_lfloat_read_areas	pcm/pcm_lfloat.c	/^snd_pcm_lfloat_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_lfloat_t	pcm/pcm_lfloat.c	/^} snd_pcm_lfloat_t;$/;"	t	typeref:struct:__anon16	file:
snd_pcm_lfloat_write_areas	pcm/pcm_lfloat.c	/^snd_pcm_lfloat_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_linear_convert	pcm/pcm_linear.c	/^void snd_pcm_linear_convert(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_linear_convert	pcm/pcm_plugin.h	88;"	d
snd_pcm_linear_convert_index	pcm/pcm_linear.c	/^int snd_pcm_linear_convert_index(snd_pcm_format_t src_format,$/;"	f
snd_pcm_linear_convert_index	pcm/pcm_plugin.h	87;"	d
snd_pcm_linear_dump	pcm/pcm_linear.c	/^static void snd_pcm_linear_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_linear_get32_index	pcm/pcm_linear.c	/^int snd_pcm_linear_get32_index(snd_pcm_format_t src_format, snd_pcm_format_t dst_format)$/;"	f
snd_pcm_linear_get32_index	pcm/pcm_plugin.h	85;"	d
snd_pcm_linear_get_index	pcm/pcm_linear.c	/^int snd_pcm_linear_get_index(snd_pcm_format_t src_format, snd_pcm_format_t dst_format)$/;"	f
snd_pcm_linear_get_index	pcm/pcm_plugin.h	83;"	d
snd_pcm_linear_getput	pcm/pcm_linear.c	/^void snd_pcm_linear_getput(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_linear_getput	pcm/pcm_plugin.h	89;"	d
snd_pcm_linear_hw_params	pcm/pcm_linear.c	/^static int snd_pcm_linear_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_linear_hw_refine	pcm/pcm_linear.c	/^static int snd_pcm_linear_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_linear_hw_refine_cchange	pcm/pcm_linear.c	/^static int snd_pcm_linear_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_linear_hw_refine_cprepare	pcm/pcm_linear.c	/^static int snd_pcm_linear_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_linear_hw_refine_schange	pcm/pcm_linear.c	/^static int snd_pcm_linear_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_linear_hw_refine_sprepare	pcm/pcm_linear.c	/^static int snd_pcm_linear_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_linear_open	pcm/pcm_linear.c	/^int snd_pcm_linear_open(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave)$/;"	f
snd_pcm_linear_ops	pcm/pcm_linear.c	/^static const snd_pcm_ops_t snd_pcm_linear_ops = {$/;"	v	file:
snd_pcm_linear_put32_index	pcm/pcm_linear.c	/^int snd_pcm_linear_put32_index(snd_pcm_format_t src_format, snd_pcm_format_t dst_format)$/;"	f
snd_pcm_linear_put32_index	pcm/pcm_plugin.h	86;"	d
snd_pcm_linear_put_index	pcm/pcm_linear.c	/^int snd_pcm_linear_put_index(snd_pcm_format_t src_format, snd_pcm_format_t dst_format)$/;"	f
snd_pcm_linear_put_index	pcm/pcm_plugin.h	84;"	d
snd_pcm_linear_read_areas	pcm/pcm_linear.c	/^snd_pcm_linear_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_linear_t	pcm/pcm_linear.c	/^} snd_pcm_linear_t;$/;"	t	typeref:struct:__anon12	file:
snd_pcm_linear_write_areas	pcm/pcm_linear.c	/^snd_pcm_linear_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_link	pcm/pcm.c	/^int snd_pcm_link(snd_pcm_t *pcm1, snd_pcm_t *pcm2)$/;"	f
snd_pcm_link_appl_ptr	pcm/pcm.c	/^void snd_pcm_link_appl_ptr(snd_pcm_t *pcm, snd_pcm_t *slave)$/;"	f
snd_pcm_link_appl_ptr	pcm/pcm_local.h	269;"	d
snd_pcm_link_hw_ptr	pcm/pcm.c	/^void snd_pcm_link_hw_ptr(snd_pcm_t *pcm, snd_pcm_t *slave)$/;"	f
snd_pcm_link_hw_ptr	pcm/pcm_local.h	267;"	d
snd_pcm_link_ptr	pcm/pcm.c	/^static void snd_pcm_link_ptr(snd_pcm_t *pcm, snd_pcm_rbptr_t *pcm_rbptr,$/;"	f	file:
snd_pcm_meter_add_frames	pcm/pcm_meter.c	/^static void snd_pcm_meter_add_frames(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_meter_add_scope	pcm/pcm_meter.c	/^int snd_pcm_meter_add_scope(snd_pcm_t *pcm, snd_pcm_scope_t *scope)$/;"	f
snd_pcm_meter_add_scope_conf	pcm/pcm_meter.c	/^static int snd_pcm_meter_add_scope_conf(snd_pcm_t *pcm, const char *name,$/;"	f	file:
snd_pcm_meter_avail_update	pcm/pcm_meter.c	/^static snd_pcm_sframes_t snd_pcm_meter_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_meter_close	pcm/pcm_meter.c	/^static int snd_pcm_meter_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_meter_dump	pcm/pcm_meter.c	/^static void snd_pcm_meter_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_meter_fast_ops	pcm/pcm_meter.c	/^static const snd_pcm_fast_ops_t snd_pcm_meter_fast_ops = {$/;"	v	file:
snd_pcm_meter_forward	pcm/pcm_meter.c	/^static snd_pcm_sframes_t snd_pcm_meter_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_meter_get_boundary	pcm/pcm_meter.c	/^snd_pcm_uframes_t snd_pcm_meter_get_boundary(snd_pcm_t *pcm)$/;"	f
snd_pcm_meter_get_bufsize	pcm/pcm_meter.c	/^snd_pcm_uframes_t snd_pcm_meter_get_bufsize(snd_pcm_t *pcm)$/;"	f
snd_pcm_meter_get_channels	pcm/pcm_meter.c	/^unsigned int snd_pcm_meter_get_channels(snd_pcm_t *pcm)$/;"	f
snd_pcm_meter_get_now	pcm/pcm_meter.c	/^snd_pcm_uframes_t snd_pcm_meter_get_now(snd_pcm_t *pcm)$/;"	f
snd_pcm_meter_get_rate	pcm/pcm_meter.c	/^unsigned int snd_pcm_meter_get_rate(snd_pcm_t *pcm)$/;"	f
snd_pcm_meter_hw_free	pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_meter_hw_params	pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_meter_hw_params_slave	pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_params_slave(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_meter_hw_refine	pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_meter_hw_refine_cchange	pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_meter_hw_refine_cprepare	pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_meter_hw_refine_schange	pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_meter_hw_refine_slave	pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_refine_slave(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_meter_hw_refine_sprepare	pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_refine_sprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_meter_mmap_commit	pcm/pcm_meter.c	/^static snd_pcm_sframes_t snd_pcm_meter_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_meter_open	pcm/pcm_meter.c	/^int snd_pcm_meter_open(snd_pcm_t **pcmp, const char *name, unsigned int frequency,$/;"	f
snd_pcm_meter_ops	pcm/pcm_meter.c	/^static const snd_pcm_ops_t snd_pcm_meter_ops = {$/;"	v	file:
snd_pcm_meter_prepare	pcm/pcm_meter.c	/^static int snd_pcm_meter_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_meter_reset	pcm/pcm_meter.c	/^static int snd_pcm_meter_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_meter_rewind	pcm/pcm_meter.c	/^static snd_pcm_sframes_t snd_pcm_meter_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_meter_search_scope	pcm/pcm_meter.c	/^snd_pcm_scope_t *snd_pcm_meter_search_scope(snd_pcm_t *pcm, const char *name)$/;"	f
snd_pcm_meter_start	pcm/pcm_meter.c	/^static int snd_pcm_meter_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_meter_t	pcm/pcm_meter.c	/^} snd_pcm_meter_t;$/;"	t	typeref:struct:_snd_pcm_meter	file:
snd_pcm_meter_thread	pcm/pcm_meter.c	/^static void *snd_pcm_meter_thread(void *data)$/;"	f	file:
snd_pcm_meter_update_main	pcm/pcm_meter.c	/^static void snd_pcm_meter_update_main(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_meter_update_scope	pcm/pcm_meter.c	/^static int snd_pcm_meter_update_scope(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_mmap	pcm/pcm_mmap.c	/^int snd_pcm_mmap(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_appl_backward	pcm/pcm_local.h	277;"	d
snd_pcm_mmap_appl_backward	pcm/pcm_mmap.c	/^void snd_pcm_mmap_appl_backward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_mmap_appl_forward	pcm/pcm_local.h	279;"	d
snd_pcm_mmap_appl_forward	pcm/pcm_mmap.c	/^void snd_pcm_mmap_appl_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_mmap_appl_ptr	pcm/pcm_local.h	275;"	d
snd_pcm_mmap_areas	pcm/pcm_local.h	/^static inline const snd_pcm_channel_area_t *snd_pcm_mmap_areas(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_avail	pcm/pcm_local.h	/^static inline snd_pcm_uframes_t snd_pcm_mmap_avail(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_begin	pcm/pcm.c	/^int snd_pcm_mmap_begin(snd_pcm_t *pcm,$/;"	f
snd_pcm_mmap_capture_avail	pcm/pcm_local.h	/^static inline snd_pcm_uframes_t snd_pcm_mmap_capture_avail(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_capture_delay	pcm/pcm_local.h	/^static inline snd_pcm_uframes_t snd_pcm_mmap_capture_delay(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_capture_hw_avail	pcm/pcm_local.h	/^static inline snd_pcm_sframes_t snd_pcm_mmap_capture_hw_avail(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_commit	pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_mmap_commit(snd_pcm_t *pcm,$/;"	f
snd_pcm_mmap_delay	pcm/pcm_local.h	/^static inline snd_pcm_sframes_t snd_pcm_mmap_delay(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_emul_avail_update	pcm/pcm_mmap_emul.c	/^static snd_pcm_sframes_t snd_pcm_mmap_emul_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_mmap_emul_dump	pcm/pcm_mmap_emul.c	/^static void snd_pcm_mmap_emul_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_mmap_emul_fast_ops	pcm/pcm_mmap_emul.c	/^static const snd_pcm_fast_ops_t snd_pcm_mmap_emul_fast_ops = {$/;"	v	file:
snd_pcm_mmap_emul_forward	pcm/pcm_mmap_emul.c	/^snd_pcm_mmap_emul_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_mmap_emul_hw_params	pcm/pcm_mmap_emul.c	/^static int snd_pcm_mmap_emul_hw_params(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_mmap_emul_hw_refine	pcm/pcm_mmap_emul.c	/^static int snd_pcm_mmap_emul_hw_refine(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_mmap_emul_mmap_commit	pcm/pcm_mmap_emul.c	/^snd_pcm_mmap_emul_mmap_commit(snd_pcm_t *pcm, snd_pcm_uframes_t offset,$/;"	f	file:
snd_pcm_mmap_emul_ops	pcm/pcm_mmap_emul.c	/^static const snd_pcm_ops_t snd_pcm_mmap_emul_ops = {$/;"	v	file:
snd_pcm_mmap_emul_prepare	pcm/pcm_mmap_emul.c	/^static int snd_pcm_mmap_emul_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_mmap_emul_reset	pcm/pcm_mmap_emul.c	/^static int snd_pcm_mmap_emul_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_mmap_emul_rewind	pcm/pcm_mmap_emul.c	/^snd_pcm_mmap_emul_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_mmap_emul_sw_params	pcm/pcm_mmap_emul.c	/^static int snd_pcm_mmap_emul_sw_params(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_mmap_hw_avail	pcm/pcm_local.h	/^static inline snd_pcm_sframes_t snd_pcm_mmap_hw_avail(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_hw_backward	pcm/pcm_local.h	281;"	d
snd_pcm_mmap_hw_backward	pcm/pcm_mmap.c	/^void snd_pcm_mmap_hw_backward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_mmap_hw_forward	pcm/pcm_local.h	283;"	d
snd_pcm_mmap_hw_forward	pcm/pcm_mmap.c	/^void snd_pcm_mmap_hw_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_mmap_hw_offset	pcm/pcm_local.h	/^static inline snd_pcm_uframes_t snd_pcm_mmap_hw_offset(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_offset	pcm/pcm_local.h	/^static inline snd_pcm_uframes_t snd_pcm_mmap_offset(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_playback_avail	pcm/pcm_local.h	/^static inline snd_pcm_uframes_t snd_pcm_mmap_playback_avail(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_playback_delay	pcm/pcm_local.h	/^static inline snd_pcm_uframes_t snd_pcm_mmap_playback_delay(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_playback_hw_avail	pcm/pcm_local.h	/^static inline snd_pcm_sframes_t snd_pcm_mmap_playback_hw_avail(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_read_areas	pcm/pcm_mmap.c	/^static snd_pcm_sframes_t snd_pcm_mmap_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_mmap_readi	pcm/pcm_mmap.c	/^snd_pcm_sframes_t snd_pcm_mmap_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f
snd_pcm_mmap_readn	pcm/pcm_mmap.c	/^snd_pcm_sframes_t snd_pcm_mmap_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
snd_pcm_mmap_write_areas	pcm/pcm_mmap.c	/^static snd_pcm_sframes_t snd_pcm_mmap_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_mmap_writei	pcm/pcm_mmap.c	/^snd_pcm_sframes_t snd_pcm_mmap_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f
snd_pcm_mmap_writen	pcm/pcm_mmap.c	/^snd_pcm_sframes_t snd_pcm_mmap_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
snd_pcm_mulaw_decode	pcm/pcm_mulaw.c	/^void snd_pcm_mulaw_decode(const snd_pcm_channel_area_t *dst_areas,$/;"	f
snd_pcm_mulaw_decode	pcm/pcm_plugin.h	92;"	d
snd_pcm_mulaw_dump	pcm/pcm_mulaw.c	/^static void snd_pcm_mulaw_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_mulaw_encode	pcm/pcm_mulaw.c	/^void snd_pcm_mulaw_encode(const snd_pcm_channel_area_t *dst_areas,$/;"	f
snd_pcm_mulaw_encode	pcm/pcm_plugin.h	93;"	d
snd_pcm_mulaw_hw_params	pcm/pcm_mulaw.c	/^static int snd_pcm_mulaw_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_mulaw_hw_refine	pcm/pcm_mulaw.c	/^static int snd_pcm_mulaw_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_mulaw_hw_refine_cchange	pcm/pcm_mulaw.c	/^static int snd_pcm_mulaw_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_mulaw_hw_refine_cprepare	pcm/pcm_mulaw.c	/^static int snd_pcm_mulaw_hw_refine_cprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_mulaw_hw_refine_schange	pcm/pcm_mulaw.c	/^static int snd_pcm_mulaw_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_mulaw_hw_refine_sprepare	pcm/pcm_mulaw.c	/^static int snd_pcm_mulaw_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_mulaw_open	pcm/pcm_mulaw.c	/^int snd_pcm_mulaw_open(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave)$/;"	f
snd_pcm_mulaw_ops	pcm/pcm_mulaw.c	/^static const snd_pcm_ops_t snd_pcm_mulaw_ops = {$/;"	v	file:
snd_pcm_mulaw_read_areas	pcm/pcm_mulaw.c	/^snd_pcm_mulaw_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_mulaw_t	pcm/pcm_mulaw.c	/^} snd_pcm_mulaw_t;$/;"	t	typeref:struct:__anon45	file:
snd_pcm_mulaw_write_areas	pcm/pcm_mulaw.c	/^snd_pcm_mulaw_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_multi_async	pcm/pcm_multi.c	/^static int snd_pcm_multi_async(snd_pcm_t *pcm, int sig, pid_t pid)$/;"	f	file:
snd_pcm_multi_avail_update	pcm/pcm_multi.c	/^static snd_pcm_sframes_t snd_pcm_multi_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_channel_info	pcm/pcm_multi.c	/^static int snd_pcm_multi_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t *info)$/;"	f	file:
snd_pcm_multi_channel_t	pcm/pcm_multi.c	/^} snd_pcm_multi_channel_t;$/;"	t	typeref:struct:__anon40	file:
snd_pcm_multi_close	pcm/pcm_multi.c	/^static int snd_pcm_multi_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_delay	pcm/pcm_multi.c	/^static int snd_pcm_multi_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_multi_drain	pcm/pcm_multi.c	/^static int snd_pcm_multi_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_drop	pcm/pcm_multi.c	/^static int snd_pcm_multi_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_dump	pcm/pcm_multi.c	/^static void snd_pcm_multi_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_multi_fast_ops	pcm/pcm_multi.c	/^static const snd_pcm_fast_ops_t snd_pcm_multi_fast_ops = {$/;"	v	file:
snd_pcm_multi_forward	pcm/pcm_multi.c	/^static snd_pcm_sframes_t snd_pcm_multi_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_multi_htimestamp	pcm/pcm_multi.c	/^static int snd_pcm_multi_htimestamp(snd_pcm_t *pcm, snd_pcm_uframes_t *avail,$/;"	f	file:
snd_pcm_multi_hw_free	pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_hw_params	pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_multi_hw_params_slave	pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_params_slave(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_multi_hw_refine	pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_multi_hw_refine_cchange	pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f	file:
snd_pcm_multi_hw_refine_cprepare	pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_refine_cprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_multi_hw_refine_schange	pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f	file:
snd_pcm_multi_hw_refine_slave	pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_refine_slave(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_multi_hw_refine_sprepare	pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_refine_sprepare(snd_pcm_t *pcm, unsigned int slave_idx,$/;"	f	file:
snd_pcm_multi_hwsync	pcm/pcm_multi.c	/^static int snd_pcm_multi_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_info	pcm/pcm_multi.c	/^static int snd_pcm_multi_info(snd_pcm_t *pcm, snd_pcm_info_t *info)$/;"	f	file:
snd_pcm_multi_link	pcm/pcm_multi.c	/^static int snd_pcm_multi_link(snd_pcm_t *pcm1, snd_pcm_t *pcm2)$/;"	f	file:
snd_pcm_multi_link_slaves	pcm/pcm_multi.c	/^static int snd_pcm_multi_link_slaves(snd_pcm_t *pcm, snd_pcm_t *master)$/;"	f	file:
snd_pcm_multi_mmap	pcm/pcm_multi.c	/^static int snd_pcm_multi_mmap(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_mmap_commit	pcm/pcm_multi.c	/^static snd_pcm_sframes_t snd_pcm_multi_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_multi_munmap	pcm/pcm_multi.c	/^static int snd_pcm_multi_munmap(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_nonblock	pcm/pcm_multi.c	/^static int snd_pcm_multi_nonblock(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int nonblock ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_multi_open	pcm/pcm_multi.c	/^int snd_pcm_multi_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_multi_ops	pcm/pcm_multi.c	/^static const snd_pcm_ops_t snd_pcm_multi_ops = {$/;"	v	file:
snd_pcm_multi_pause	pcm/pcm_multi.c	/^static int snd_pcm_multi_pause(snd_pcm_t *pcm, int enable)$/;"	f	file:
snd_pcm_multi_poll_descriptors	pcm/pcm_multi.c	/^static int snd_pcm_multi_poll_descriptors(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int space)$/;"	f	file:
snd_pcm_multi_poll_descriptors_count	pcm/pcm_multi.c	/^static int snd_pcm_multi_poll_descriptors_count(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_poll_revents	pcm/pcm_multi.c	/^static int snd_pcm_multi_poll_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f	file:
snd_pcm_multi_prepare	pcm/pcm_multi.c	/^static int snd_pcm_multi_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_reset	pcm/pcm_multi.c	/^static int snd_pcm_multi_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_resume	pcm/pcm_multi.c	/^static int snd_pcm_multi_resume(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_rewind	pcm/pcm_multi.c	/^static snd_pcm_sframes_t snd_pcm_multi_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_multi_slave_t	pcm/pcm_multi.c	/^} snd_pcm_multi_slave_t;$/;"	t	typeref:struct:__anon39	file:
snd_pcm_multi_start	pcm/pcm_multi.c	/^static int snd_pcm_multi_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_state	pcm/pcm_multi.c	/^static snd_pcm_state_t snd_pcm_multi_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_status	pcm/pcm_multi.c	/^static int snd_pcm_multi_status(snd_pcm_t *pcm, snd_pcm_status_t *status)$/;"	f	file:
snd_pcm_multi_sw_params	pcm/pcm_multi.c	/^static int snd_pcm_multi_sw_params(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)$/;"	f	file:
snd_pcm_multi_t	pcm/pcm_multi.c	/^} snd_pcm_multi_t;$/;"	t	typeref:struct:__anon41	file:
snd_pcm_multi_unlink	pcm/pcm_multi.c	/^static int snd_pcm_multi_unlink(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_munmap	pcm/pcm_mmap.c	/^int snd_pcm_munmap(snd_pcm_t *pcm)$/;"	f
snd_pcm_name	pcm/pcm.c	/^const char *snd_pcm_name(snd_pcm_t *pcm)$/;"	f
snd_pcm_new	pcm/pcm.c	/^int snd_pcm_new(snd_pcm_t **pcmp, snd_pcm_type_t type, const char *name,$/;"	f
snd_pcm_new	pcm/pcm_local.h	245;"	d
snd_pcm_nonblock	pcm/pcm.c	/^int snd_pcm_nonblock(snd_pcm_t *pcm, int nonblock)$/;"	f
snd_pcm_null_async	pcm/pcm_null.c	/^static int snd_pcm_null_async(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int sig ATTRIBUTE_UNUSED, pid_t pid ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_null_avail_update	pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_close	pcm/pcm_null.c	/^static int snd_pcm_null_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_delay	pcm/pcm_null.c	/^static int snd_pcm_null_delay(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_null_drain	pcm/pcm_null.c	/^static int snd_pcm_null_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_drop	pcm/pcm_null.c	/^static int snd_pcm_null_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_dump	pcm/pcm_null.c	/^static void snd_pcm_null_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_null_fast_ops	pcm/pcm_null.c	/^static const snd_pcm_fast_ops_t snd_pcm_null_fast_ops = {$/;"	v	file:
snd_pcm_null_forward	pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_null_hw_free	pcm/pcm_null.c	/^static int snd_pcm_null_hw_free(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_null_hw_params	pcm/pcm_null.c	/^static int snd_pcm_null_hw_params(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t * params ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_null_hw_refine	pcm/pcm_null.c	/^static int snd_pcm_null_hw_refine(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_null_hwsync	pcm/pcm_null.c	/^static int snd_pcm_null_hwsync(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_null_info	pcm/pcm_null.c	/^static int snd_pcm_null_info(snd_pcm_t *pcm, snd_pcm_info_t * info)$/;"	f	file:
snd_pcm_null_mmap_commit	pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_null_nonblock	pcm/pcm_null.c	/^static int snd_pcm_null_nonblock(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int nonblock ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_null_open	pcm/pcm_null.c	/^int snd_pcm_null_open(snd_pcm_t **pcmp, const char *name, snd_pcm_stream_t stream, int mode)$/;"	f
snd_pcm_null_ops	pcm/pcm_null.c	/^static const snd_pcm_ops_t snd_pcm_null_ops = {$/;"	v	file:
snd_pcm_null_pause	pcm/pcm_null.c	/^static int snd_pcm_null_pause(snd_pcm_t *pcm, int enable)$/;"	f	file:
snd_pcm_null_prepare	pcm/pcm_null.c	/^static int snd_pcm_null_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_readi	pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_readi(snd_pcm_t *pcm, void *buffer ATTRIBUTE_UNUSED, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_null_readn	pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_readn(snd_pcm_t *pcm, void **bufs ATTRIBUTE_UNUSED, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_null_reset	pcm/pcm_null.c	/^static int snd_pcm_null_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_resume	pcm/pcm_null.c	/^static int snd_pcm_null_resume(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_null_rewind	pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_null_start	pcm/pcm_null.c	/^static int snd_pcm_null_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_state	pcm/pcm_null.c	/^static snd_pcm_state_t snd_pcm_null_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_status	pcm/pcm_null.c	/^static int snd_pcm_null_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_null_sw_params	pcm/pcm_null.c	/^static int snd_pcm_null_sw_params(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t * params ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_null_t	pcm/pcm_null.c	/^} snd_pcm_null_t;$/;"	t	typeref:struct:__anon26	file:
snd_pcm_null_writei	pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_writei(snd_pcm_t *pcm, const void *buffer ATTRIBUTE_UNUSED, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_null_writen	pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_writen(snd_pcm_t *pcm, void **bufs ATTRIBUTE_UNUSED, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_null_xfer_areas	pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_xfer_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_open	pcm/pcm.c	/^int snd_pcm_open(snd_pcm_t **pcmp, const char *name, $/;"	f
snd_pcm_open_conf	pcm/pcm.c	/^static int snd_pcm_open_conf(snd_pcm_t **pcmp, const char *name,$/;"	f	file:
snd_pcm_open_lconf	pcm/pcm.c	/^int snd_pcm_open_lconf(snd_pcm_t **pcmp, const char *name, $/;"	f
snd_pcm_open_named_slave	pcm/pcm.c	/^int snd_pcm_open_named_slave(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_open_named_slave	pcm/pcm_local.h	253;"	d
snd_pcm_open_noupdate	pcm/pcm.c	/^static int snd_pcm_open_noupdate(snd_pcm_t **pcmp, snd_config_t *root,$/;"	f	file:
snd_pcm_open_objects	pcm/pcm_symbols.c	/^static const char **snd_pcm_open_objects[] = {$/;"	v	file:
snd_pcm_open_slave	pcm/pcm_local.h	/^snd_pcm_open_slave(snd_pcm_t **pcmp, snd_config_t *root,$/;"	f
snd_pcm_open_symbols	pcm/pcm_symbols.c	/^void *snd_pcm_open_symbols(void)$/;"	f
snd_pcm_ops_t	pcm/pcm_local.h	/^} snd_pcm_ops_t;$/;"	t	typeref:struct:__anon50
snd_pcm_parse_control_id	pcm/pcm_misc.c	/^int snd_pcm_parse_control_id(snd_config_t *conf, snd_ctl_elem_id_t *ctl_id, int *cardp,$/;"	f
snd_pcm_pause	pcm/pcm.c	/^int snd_pcm_pause(snd_pcm_t *pcm, int enable)$/;"	f
snd_pcm_plug_change_access	pcm/pcm_plug.c	/^static int snd_pcm_plug_change_access(snd_pcm_t *pcm, snd_pcm_t **new, snd_pcm_plug_params_t *clt, snd_pcm_plug_params_t *slv)$/;"	f	file:
snd_pcm_plug_change_channels	pcm/pcm_plug.c	/^static int snd_pcm_plug_change_channels(snd_pcm_t *pcm, snd_pcm_t **new, snd_pcm_plug_params_t *clt, snd_pcm_plug_params_t *slv)$/;"	f	file:
snd_pcm_plug_change_format	pcm/pcm_plug.c	/^static int snd_pcm_plug_change_format(snd_pcm_t *pcm, snd_pcm_t **new, snd_pcm_plug_params_t *clt, snd_pcm_plug_params_t *slv)$/;"	f	file:
snd_pcm_plug_change_mmap	pcm/pcm_plug.c	/^static int snd_pcm_plug_change_mmap(snd_pcm_t *pcm, snd_pcm_t **new,$/;"	f	file:
snd_pcm_plug_change_rate	pcm/pcm_plug.c	/^static int snd_pcm_plug_change_rate(snd_pcm_t *pcm, snd_pcm_t **new, snd_pcm_plug_params_t *clt, snd_pcm_plug_params_t *slv)$/;"	f	file:
snd_pcm_plug_clear	pcm/pcm_plug.c	/^static void snd_pcm_plug_clear(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plug_close	pcm/pcm_plug.c	/^static int snd_pcm_plug_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plug_dump	pcm/pcm_plug.c	/^static void snd_pcm_plug_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_plug_hw_free	pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plug_hw_params	pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_plug_hw_refine	pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_plug_hw_refine_cchange	pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f	file:
snd_pcm_plug_hw_refine_cprepare	pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_plug_hw_refine_schange	pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_refine_schange(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_plug_hw_refine_slave	pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_refine_slave(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_plug_hw_refine_sprepare	pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_plug_info	pcm/pcm_plug.c	/^static int snd_pcm_plug_info(snd_pcm_t *pcm, snd_pcm_info_t *info)$/;"	f	file:
snd_pcm_plug_insert_plugins	pcm/pcm_plug.c	/^static int snd_pcm_plug_insert_plugins(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_plug_open	pcm/pcm_plug.c	/^int snd_pcm_plug_open(snd_pcm_t **pcmp,$/;"	f
snd_pcm_plug_ops	pcm/pcm_plug.c	/^static const snd_pcm_ops_t snd_pcm_plug_ops = {$/;"	v	file:
snd_pcm_plug_params_t	pcm/pcm_plug.c	/^} snd_pcm_plug_params_t;$/;"	t	typeref:struct:__anon15	file:
snd_pcm_plug_route_policy	pcm/pcm_plug.c	/^enum snd_pcm_plug_route_policy {$/;"	g	file:
snd_pcm_plug_slave_format	pcm/pcm_plug.c	/^static snd_pcm_format_t snd_pcm_plug_slave_format(snd_pcm_format_t format, const snd_pcm_format_mask_t *format_mask)$/;"	f	file:
snd_pcm_plug_t	pcm/pcm_plug.c	/^} snd_pcm_plug_t;$/;"	t	typeref:struct:__anon14	file:
snd_pcm_plugin_avail_update	pcm/pcm_plugin.c	/^static snd_pcm_sframes_t snd_pcm_plugin_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plugin_delay	pcm/pcm_plugin.c	/^static int snd_pcm_plugin_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_plugin_fast_ops	pcm/pcm_plugin.c	/^const snd_pcm_fast_ops_t snd_pcm_plugin_fast_ops = {$/;"	v
snd_pcm_plugin_fast_ops	pcm/pcm_plugin.h	57;"	d
snd_pcm_plugin_forward	pcm/pcm_plugin.c	/^static snd_pcm_sframes_t snd_pcm_plugin_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_plugin_forwardable	pcm/pcm_plugin.c	/^static snd_pcm_sframes_t snd_pcm_plugin_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plugin_init	pcm/pcm_plugin.c	/^void snd_pcm_plugin_init(snd_pcm_plugin_t *plugin)$/;"	f
snd_pcm_plugin_init	pcm/pcm_plugin.h	55;"	d
snd_pcm_plugin_mmap_commit	pcm/pcm_plugin.c	/^snd_pcm_plugin_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_plugin_prepare	pcm/pcm_plugin.c	/^static int snd_pcm_plugin_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plugin_read_areas	pcm/pcm_plugin.c	/^static snd_pcm_sframes_t snd_pcm_plugin_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_plugin_readi	pcm/pcm_plugin.c	/^snd_pcm_plugin_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_plugin_readn	pcm/pcm_plugin.c	/^snd_pcm_plugin_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_plugin_reset	pcm/pcm_plugin.c	/^static int snd_pcm_plugin_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plugin_rewind	pcm/pcm_plugin.c	/^static snd_pcm_sframes_t snd_pcm_plugin_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_plugin_rewindable	pcm/pcm_plugin.c	/^static snd_pcm_sframes_t snd_pcm_plugin_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plugin_status	pcm/pcm_plugin.c	/^static int snd_pcm_plugin_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_plugin_t	pcm/pcm_plugin.h	/^} snd_pcm_plugin_t;	$/;"	t	typeref:struct:__anon53
snd_pcm_plugin_undo_read	pcm/pcm_plugin.c	/^snd_pcm_plugin_undo_read(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f	file:
snd_pcm_plugin_undo_read_generic	pcm/pcm_plugin.c	/^snd_pcm_plugin_undo_read_generic(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f
snd_pcm_plugin_undo_read_generic	pcm/pcm_plugin.h	59;"	d
snd_pcm_plugin_undo_write	pcm/pcm_plugin.c	/^snd_pcm_plugin_undo_write(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f	file:
snd_pcm_plugin_undo_write_generic	pcm/pcm_plugin.c	/^snd_pcm_plugin_undo_write_generic(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f
snd_pcm_plugin_undo_write_generic	pcm/pcm_plugin.h	61;"	d
snd_pcm_plugin_write_areas	pcm/pcm_plugin.c	/^static snd_pcm_sframes_t snd_pcm_plugin_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_plugin_writei	pcm/pcm_plugin.c	/^snd_pcm_plugin_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_plugin_writen	pcm/pcm_plugin.c	/^snd_pcm_plugin_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_poll_descriptors	pcm/pcm.c	/^int snd_pcm_poll_descriptors(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int space)$/;"	f
snd_pcm_poll_descriptors_count	pcm/pcm.c	/^int snd_pcm_poll_descriptors_count(snd_pcm_t *pcm)$/;"	f
snd_pcm_poll_descriptors_revents	pcm/pcm.c	/^int snd_pcm_poll_descriptors_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_pcm_prepare	pcm/pcm.c	/^int snd_pcm_prepare(snd_pcm_t *pcm)$/;"	f
snd_pcm_rate_avail_update	pcm/pcm_rate.c	/^static snd_pcm_sframes_t snd_pcm_rate_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_close	pcm/pcm_rate.c	/^static int snd_pcm_rate_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_commit_area	pcm/pcm_rate.c	/^static int snd_pcm_rate_commit_area(snd_pcm_t *pcm, snd_pcm_rate_t *rate,$/;"	f	file:
snd_pcm_rate_commit_next_period	pcm/pcm_rate.c	/^static int snd_pcm_rate_commit_next_period(snd_pcm_t *pcm, snd_pcm_uframes_t appl_offset)$/;"	f	file:
snd_pcm_rate_delay	pcm/pcm_rate.c	/^static int snd_pcm_rate_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_rate_drain	pcm/pcm_rate.c	/^static int snd_pcm_rate_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_dump	pcm/pcm_rate.c	/^static void snd_pcm_rate_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_rate_fast_ops	pcm/pcm_rate.c	/^static const snd_pcm_fast_ops_t snd_pcm_rate_fast_ops = {$/;"	v	file:
snd_pcm_rate_forward	pcm/pcm_rate.c	/^static snd_pcm_sframes_t snd_pcm_rate_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_rate_get_default_converter	pcm/pcm_local.h	261;"	d
snd_pcm_rate_get_default_converter	pcm/pcm_rate.c	/^const snd_config_t *snd_pcm_rate_get_default_converter(snd_config_t *root)$/;"	f
snd_pcm_rate_grab_next_period	pcm/pcm_rate.c	/^static int snd_pcm_rate_grab_next_period(snd_pcm_t *pcm, snd_pcm_uframes_t hw_offset)$/;"	f	file:
snd_pcm_rate_htimestamp	pcm/pcm_rate.c	/^static int snd_pcm_rate_htimestamp(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_rate_hw_free	pcm/pcm_rate.c	/^static int snd_pcm_rate_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_hw_params	pcm/pcm_rate.c	/^static int snd_pcm_rate_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_rate_hw_refine	pcm/pcm_rate.c	/^static int snd_pcm_rate_hw_refine(snd_pcm_t *pcm, $/;"	f	file:
snd_pcm_rate_hw_refine_cchange	pcm/pcm_rate.c	/^static int snd_pcm_rate_hw_refine_cchange(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_rate_hw_refine_cprepare	pcm/pcm_rate.c	/^static int snd_pcm_rate_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_rate_hw_refine_schange	pcm/pcm_rate.c	/^static int snd_pcm_rate_hw_refine_schange(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_rate_hw_refine_sprepare	pcm/pcm_rate.c	/^static int snd_pcm_rate_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_rate_hwsync	pcm/pcm_rate.c	/^static int snd_pcm_rate_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_init	pcm/pcm_rate.c	/^static int snd_pcm_rate_init(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_mmap_commit	pcm/pcm_rate.c	/^static snd_pcm_sframes_t snd_pcm_rate_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_rate_move_applptr	pcm/pcm_rate.c	/^static inline snd_pcm_sframes_t snd_pcm_rate_move_applptr(snd_pcm_t *pcm, snd_pcm_sframes_t frames)$/;"	f	file:
snd_pcm_rate_open	pcm/pcm_rate.c	/^int snd_pcm_rate_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_rate_ops	pcm/pcm_rate.c	/^static const snd_pcm_ops_t snd_pcm_rate_ops = {$/;"	v	file:
snd_pcm_rate_poll_revents	pcm/pcm_rate.c	/^static int snd_pcm_rate_poll_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f	file:
snd_pcm_rate_prepare	pcm/pcm_rate.c	/^static int snd_pcm_rate_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_read_areas1	pcm/pcm_rate.c	/^snd_pcm_rate_read_areas1(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_rate_reset	pcm/pcm_rate.c	/^static int snd_pcm_rate_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_rewind	pcm/pcm_rate.c	/^static snd_pcm_sframes_t snd_pcm_rate_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_rate_start	pcm/pcm_rate.c	/^static int snd_pcm_rate_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_state	pcm/pcm_rate.c	/^static snd_pcm_state_t snd_pcm_rate_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_status	pcm/pcm_rate.c	/^static int snd_pcm_rate_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_rate_sw_params	pcm/pcm_rate.c	/^static int snd_pcm_rate_sw_params(snd_pcm_t *pcm, snd_pcm_sw_params_t * params)$/;"	f	file:
snd_pcm_rate_sync_hwptr	pcm/pcm_rate.c	/^static inline void snd_pcm_rate_sync_hwptr(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_sync_playback_area	pcm/pcm_rate.c	/^static int snd_pcm_rate_sync_playback_area(snd_pcm_t *pcm, snd_pcm_uframes_t appl_ptr)$/;"	f	file:
snd_pcm_rate_t	pcm/pcm_rate.c	/^typedef struct _snd_pcm_rate snd_pcm_rate_t;$/;"	t	typeref:struct:_snd_pcm_rate	file:
snd_pcm_rate_write_areas1	pcm/pcm_rate.c	/^snd_pcm_rate_write_areas1(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_rbptr_t	pcm/pcm_local.h	/^} snd_pcm_rbptr_t;$/;"	t	typeref:struct:_snd_pcm_rbptr
snd_pcm_read_areas	pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_read_areas(snd_pcm_t *pcm, const snd_pcm_channel_area_t *areas,$/;"	f
snd_pcm_read_areas	pcm/pcm_local.h	285;"	d
snd_pcm_read_mmap	pcm/pcm_local.h	289;"	d
snd_pcm_read_mmap	pcm/pcm_mmap.c	/^snd_pcm_sframes_t snd_pcm_read_mmap(snd_pcm_t *pcm, snd_pcm_uframes_t offset,$/;"	f
snd_pcm_readi	pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f
snd_pcm_readn	pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
snd_pcm_recover	pcm/pcm.c	/^int snd_pcm_recover(snd_pcm_t *pcm, int err, int silent)$/;"	f
snd_pcm_reset	pcm/pcm.c	/^int snd_pcm_reset(snd_pcm_t *pcm)$/;"	f
snd_pcm_resume	pcm/pcm.c	/^int snd_pcm_resume(snd_pcm_t *pcm)$/;"	f
snd_pcm_rewind	pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_rewindable	pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_rewindable(snd_pcm_t *pcm)$/;"	f
snd_pcm_route_close	pcm/pcm_route.c	/^static int snd_pcm_route_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_route_convert	pcm/pcm_route.c	/^static void snd_pcm_route_convert(const snd_pcm_channel_area_t *dst_areas,$/;"	f	file:
snd_pcm_route_convert1_many	pcm/pcm_route.c	/^static void snd_pcm_route_convert1_many(const snd_pcm_channel_area_t *dst_area,$/;"	f	file:
snd_pcm_route_convert1_one	pcm/pcm_route.c	/^static void snd_pcm_route_convert1_one(const snd_pcm_channel_area_t *dst_area,$/;"	f	file:
snd_pcm_route_convert1_one_getput	pcm/pcm_route.c	/^static void snd_pcm_route_convert1_one_getput(const snd_pcm_channel_area_t *dst_area,$/;"	f	file:
snd_pcm_route_convert1_zero	pcm/pcm_route.c	/^static void snd_pcm_route_convert1_zero(const snd_pcm_channel_area_t *dst_area,$/;"	f	file:
snd_pcm_route_determine_ttable	pcm/pcm_route.c	/^int snd_pcm_route_determine_ttable(snd_config_t *tt,$/;"	f
snd_pcm_route_dump	pcm/pcm_route.c	/^static void snd_pcm_route_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_route_hw_params	pcm/pcm_route.c	/^static int snd_pcm_route_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_route_hw_refine	pcm/pcm_route.c	/^static int snd_pcm_route_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_route_hw_refine_cchange	pcm/pcm_route.c	/^static int snd_pcm_route_hw_refine_cchange(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_route_hw_refine_cprepare	pcm/pcm_route.c	/^static int snd_pcm_route_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_route_hw_refine_schange	pcm/pcm_route.c	/^static int snd_pcm_route_hw_refine_schange(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_route_hw_refine_sprepare	pcm/pcm_route.c	/^static int snd_pcm_route_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_route_load_ttable	pcm/pcm_route.c	/^int snd_pcm_route_load_ttable(snd_config_t *tt, snd_pcm_route_ttable_entry_t *ttable,$/;"	f
snd_pcm_route_open	pcm/pcm_route.c	/^int snd_pcm_route_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_route_ops	pcm/pcm_route.c	/^static const snd_pcm_ops_t snd_pcm_route_ops = {$/;"	v	file:
snd_pcm_route_params_t	pcm/pcm_route.c	/^} snd_pcm_route_params_t;$/;"	t	typeref:struct:__anon18	file:
snd_pcm_route_read_areas	pcm/pcm_route.c	/^snd_pcm_route_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_route_t	pcm/pcm_route.c	/^} snd_pcm_route_t;$/;"	t	typeref:struct:__anon21	file:
snd_pcm_route_ttable_dst	pcm/pcm_route.c	/^struct snd_pcm_route_ttable_dst {$/;"	s	file:
snd_pcm_route_ttable_dst_t	pcm/pcm_route.c	/^typedef struct snd_pcm_route_ttable_dst snd_pcm_route_ttable_dst_t;$/;"	t	typeref:struct:snd_pcm_route_ttable_dst	file:
snd_pcm_route_ttable_src_t	pcm/pcm_route.c	/^} snd_pcm_route_ttable_src_t;$/;"	t	typeref:struct:__anon17	file:
snd_pcm_route_write_areas	pcm/pcm_route.c	/^snd_pcm_route_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_samples_to_bytes	pcm/pcm.c	/^ssize_t snd_pcm_samples_to_bytes(snd_pcm_t *pcm, long samples)$/;"	f
snd_pcm_scope_disable	pcm/pcm_meter.c	/^static int snd_pcm_scope_disable(snd_pcm_scope_t *scope)$/;"	f	file:
snd_pcm_scope_enable	pcm/pcm_meter.c	/^static int snd_pcm_scope_enable(snd_pcm_scope_t *scope)$/;"	f	file:
snd_pcm_scope_get_callback_private	pcm/pcm_meter.c	/^void *snd_pcm_scope_get_callback_private(snd_pcm_scope_t *scope)$/;"	f
snd_pcm_scope_get_name	pcm/pcm_meter.c	/^const char *snd_pcm_scope_get_name(snd_pcm_scope_t *scope)$/;"	f
snd_pcm_scope_level_channel_t	pcm/scopes/level.c	/^} snd_pcm_scope_level_channel_t;$/;"	t	typeref:struct:_snd_pcm_scope_level_channel	file:
snd_pcm_scope_level_open	pcm/scopes/level.c	/^int snd_pcm_scope_level_open(snd_pcm_t *pcm, const char *name,$/;"	f
snd_pcm_scope_level_t	pcm/scopes/level.c	/^} snd_pcm_scope_level_t;$/;"	t	typeref:struct:_snd_pcm_scope_level	file:
snd_pcm_scope_malloc	pcm/pcm_meter.c	/^int snd_pcm_scope_malloc(snd_pcm_scope_t **ptr)$/;"	f
snd_pcm_scope_remove	pcm/pcm_meter.c	/^static int snd_pcm_scope_remove(snd_pcm_scope_t *scope)$/;"	f	file:
snd_pcm_scope_s16_get_channel_buffer	pcm/pcm_meter.c	/^int16_t *snd_pcm_scope_s16_get_channel_buffer(snd_pcm_scope_t *scope,$/;"	f
snd_pcm_scope_s16_open	pcm/pcm_meter.c	/^int snd_pcm_scope_s16_open(snd_pcm_t *pcm, const char *name,$/;"	f
snd_pcm_scope_s16_t	pcm/pcm_meter.c	/^} snd_pcm_scope_s16_t;$/;"	t	typeref:struct:_snd_pcm_scope_s16	file:
snd_pcm_scope_set_callback_private	pcm/pcm_meter.c	/^void snd_pcm_scope_set_callback_private(snd_pcm_scope_t *scope, void *val)$/;"	f
snd_pcm_scope_set_name	pcm/pcm_meter.c	/^void snd_pcm_scope_set_name(snd_pcm_scope_t *scope, const char *val)$/;"	f
snd_pcm_scope_set_ops	pcm/pcm_meter.c	/^void snd_pcm_scope_set_ops(snd_pcm_scope_t *scope, const snd_pcm_scope_ops_t *val)$/;"	f
snd_pcm_set_appl_ptr	pcm/pcm.c	/^void snd_pcm_set_appl_ptr(snd_pcm_t *pcm, volatile snd_pcm_uframes_t *appl_ptr, int fd, off_t offset)$/;"	f
snd_pcm_set_appl_ptr	pcm/pcm_local.h	265;"	d
snd_pcm_set_hw_ptr	pcm/pcm.c	/^void snd_pcm_set_hw_ptr(snd_pcm_t *pcm, volatile snd_pcm_uframes_t *hw_ptr, int fd, off_t offset)$/;"	f
snd_pcm_set_hw_ptr	pcm/pcm_local.h	263;"	d
snd_pcm_set_params	pcm/pcm.c	/^int snd_pcm_set_params(snd_pcm_t *pcm,$/;"	f
snd_pcm_set_ptr	pcm/pcm.c	/^static void snd_pcm_set_ptr(snd_pcm_t *pcm, snd_pcm_rbptr_t *rbptr,$/;"	f	file:
snd_pcm_share_async	pcm/pcm_share.c	/^static int snd_pcm_share_async(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int sig ATTRIBUTE_UNUSED, pid_t pid ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_share_avail_update	pcm/pcm_share.c	/^static snd_pcm_sframes_t snd_pcm_share_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_channel_info	pcm/pcm_share.c	/^static int snd_pcm_share_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t *info)$/;"	f	file:
snd_pcm_share_close	pcm/pcm_share.c	/^static int snd_pcm_share_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_delay	pcm/pcm_share.c	/^static int snd_pcm_share_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_share_drain	pcm/pcm_share.c	/^static int snd_pcm_share_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_drop	pcm/pcm_share.c	/^static int snd_pcm_share_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_dump	pcm/pcm_share.c	/^static void snd_pcm_share_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_share_fast_ops	pcm/pcm_share.c	/^static const snd_pcm_fast_ops_t snd_pcm_share_fast_ops = {$/;"	v	file:
snd_pcm_share_forward	pcm/pcm_share.c	/^static snd_pcm_sframes_t snd_pcm_share_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_share_forwardable	pcm/pcm_share.c	/^static snd_pcm_sframes_t snd_pcm_share_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_htimestamp	pcm/pcm_share.c	/^static int snd_pcm_share_htimestamp(snd_pcm_t *pcm, snd_pcm_uframes_t *avail,$/;"	f	file:
snd_pcm_share_hw_free	pcm/pcm_share.c	/^static int snd_pcm_share_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_hw_params	pcm/pcm_share.c	/^static int snd_pcm_share_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_share_hw_params_slave	pcm/pcm_share.c	/^static int snd_pcm_share_hw_params_slave(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_share_hw_refine	pcm/pcm_share.c	/^static int snd_pcm_share_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_share_hw_refine_cchange	pcm/pcm_share.c	/^static int snd_pcm_share_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_share_hw_refine_cprepare	pcm/pcm_share.c	/^static int snd_pcm_share_hw_refine_cprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_share_hw_refine_schange	pcm/pcm_share.c	/^static int snd_pcm_share_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_share_hw_refine_slave	pcm/pcm_share.c	/^static int snd_pcm_share_hw_refine_slave(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_share_hw_refine_sprepare	pcm/pcm_share.c	/^static int snd_pcm_share_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_share_hwsync	pcm/pcm_share.c	/^static int snd_pcm_share_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_info	pcm/pcm_share.c	/^static int snd_pcm_share_info(snd_pcm_t *pcm, snd_pcm_info_t *info)$/;"	f	file:
snd_pcm_share_mmap	pcm/pcm_share.c	/^static int snd_pcm_share_mmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_share_mmap_commit	pcm/pcm_share.c	/^static snd_pcm_sframes_t snd_pcm_share_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_share_munmap	pcm/pcm_share.c	/^static int snd_pcm_share_munmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_share_nonblock	pcm/pcm_share.c	/^static int snd_pcm_share_nonblock(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int nonblock ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_share_open	pcm/pcm_share.c	/^int snd_pcm_share_open(snd_pcm_t **pcmp, const char *name, const char *sname,$/;"	f
snd_pcm_share_ops	pcm/pcm_share.c	/^static const snd_pcm_ops_t snd_pcm_share_ops = {$/;"	v	file:
snd_pcm_share_pause	pcm/pcm_share.c	/^static int snd_pcm_share_pause(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int enable ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_share_prepare	pcm/pcm_share.c	/^static int snd_pcm_share_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_reset	pcm/pcm_share.c	/^static int snd_pcm_share_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_resume	pcm/pcm_share.c	/^static int snd_pcm_share_resume(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_share_rewind	pcm/pcm_share.c	/^static snd_pcm_sframes_t snd_pcm_share_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_share_rewindable	pcm/pcm_share.c	/^static snd_pcm_sframes_t snd_pcm_share_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_slave_avail	pcm/pcm_share.c	/^static snd_pcm_uframes_t snd_pcm_share_slave_avail(snd_pcm_share_slave_t *slave)$/;"	f	file:
snd_pcm_share_slave_t	pcm/pcm_share.c	/^} snd_pcm_share_slave_t;$/;"	t	typeref:struct:__anon24	file:
snd_pcm_share_slaves_mutex	pcm/pcm_share.c	/^static pthread_mutex_t snd_pcm_share_slaves_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
snd_pcm_share_start	pcm/pcm_share.c	/^static int snd_pcm_share_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_state	pcm/pcm_share.c	/^static snd_pcm_state_t snd_pcm_share_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_status	pcm/pcm_share.c	/^static int snd_pcm_share_status(snd_pcm_t *pcm, snd_pcm_status_t *status)$/;"	f	file:
snd_pcm_share_sw_params	pcm/pcm_share.c	/^static int snd_pcm_share_sw_params(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_share_t	pcm/pcm_share.c	/^} snd_pcm_share_t;$/;"	t	typeref:struct:__anon25	file:
snd_pcm_share_thread	pcm/pcm_share.c	/^static void *snd_pcm_share_thread(void *data)$/;"	f	file:
snd_pcm_shm_action	pcm/pcm_shm.c	/^static long snd_pcm_shm_action(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_action_fd	pcm/pcm_shm.c	/^static long snd_pcm_shm_action_fd(snd_pcm_t *pcm, int *fd)$/;"	f	file:
snd_pcm_shm_action_fd0	pcm/pcm_shm.c	/^static long snd_pcm_shm_action_fd0(snd_pcm_t *pcm, int *fd)$/;"	f	file:
snd_pcm_shm_async	pcm/pcm_shm.c	/^static int snd_pcm_shm_async(snd_pcm_t *pcm, int sig, pid_t pid)$/;"	f	file:
snd_pcm_shm_avail_update	pcm/pcm_shm.c	/^static snd_pcm_sframes_t snd_pcm_shm_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_channel_info	pcm/pcm_shm.c	/^static int snd_pcm_shm_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t * info)$/;"	f	file:
snd_pcm_shm_close	pcm/pcm_shm.c	/^static int snd_pcm_shm_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_delay	pcm/pcm_shm.c	/^static int snd_pcm_shm_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_shm_drain	pcm/pcm_shm.c	/^static int snd_pcm_shm_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_drop	pcm/pcm_shm.c	/^static int snd_pcm_shm_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_dump	pcm/pcm_shm.c	/^static void snd_pcm_shm_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_shm_fast_ops	pcm/pcm_shm.c	/^static const snd_pcm_fast_ops_t snd_pcm_shm_fast_ops = {$/;"	v	file:
snd_pcm_shm_forward	pcm/pcm_shm.c	/^static snd_pcm_sframes_t snd_pcm_shm_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_shm_forwardable	pcm/pcm_shm.c	/^static snd_pcm_sframes_t snd_pcm_shm_forwardable(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_shm_htimestamp	pcm/pcm_shm.c	/^static int snd_pcm_shm_htimestamp(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f	file:
snd_pcm_shm_hw_free	pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_hw_params	pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_shm_hw_params_slave	pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_params_slave(snd_pcm_t *pcm, $/;"	f	file:
snd_pcm_shm_hw_refine	pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_shm_hw_refine_cchange	pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_shm_hw_refine_cprepare	pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_shm_hw_refine_schange	pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_shm_hw_refine_slave	pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_refine_slave(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_shm_hw_refine_sprepare	pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_refine_sprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_shm_hwsync	pcm/pcm_shm.c	/^static int snd_pcm_shm_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_info	pcm/pcm_shm.c	/^static int snd_pcm_shm_info(snd_pcm_t *pcm, snd_pcm_info_t * info)$/;"	f	file:
snd_pcm_shm_mmap	pcm/pcm_shm.c	/^static int snd_pcm_shm_mmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_shm_mmap_commit	pcm/pcm_shm.c	/^static snd_pcm_sframes_t snd_pcm_shm_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_shm_munmap	pcm/pcm_shm.c	/^static int snd_pcm_shm_munmap(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_new_rbptr	pcm/pcm_shm.c	/^static int snd_pcm_shm_new_rbptr(snd_pcm_t *pcm, snd_pcm_shm_t *shm,$/;"	f	file:
snd_pcm_shm_nonblock	pcm/pcm_shm.c	/^static int snd_pcm_shm_nonblock(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int nonblock ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_shm_open	pcm/pcm_shm.c	/^int snd_pcm_shm_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_shm_ops	pcm/pcm_shm.c	/^static const snd_pcm_ops_t snd_pcm_shm_ops = {$/;"	v	file:
snd_pcm_shm_pause	pcm/pcm_shm.c	/^static int snd_pcm_shm_pause(snd_pcm_t *pcm, int enable)$/;"	f	file:
snd_pcm_shm_poll_descriptor	pcm/pcm_shm.c	/^static int snd_pcm_shm_poll_descriptor(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_prepare	pcm/pcm_shm.c	/^static int snd_pcm_shm_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_reset	pcm/pcm_shm.c	/^static int snd_pcm_shm_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_resume	pcm/pcm_shm.c	/^static int snd_pcm_shm_resume(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_rewind	pcm/pcm_shm.c	/^static snd_pcm_sframes_t snd_pcm_shm_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_shm_rewindable	pcm/pcm_shm.c	/^static snd_pcm_sframes_t snd_pcm_shm_rewindable(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_shm_start	pcm/pcm_shm.c	/^static int snd_pcm_shm_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_state	pcm/pcm_shm.c	/^static snd_pcm_state_t snd_pcm_shm_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_status	pcm/pcm_shm.c	/^static int snd_pcm_shm_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_shm_sw_params	pcm/pcm_shm.c	/^static int snd_pcm_shm_sw_params(snd_pcm_t *pcm, snd_pcm_sw_params_t * params)$/;"	f	file:
snd_pcm_shm_t	pcm/pcm_shm.c	/^} snd_pcm_shm_t;$/;"	t	typeref:struct:__anon42	file:
snd_pcm_slave_conf	pcm/pcm.c	/^int snd_pcm_slave_conf(snd_config_t *root, snd_config_t *conf,$/;"	f
snd_pcm_slave_xfer_areas_func_t	pcm/pcm_plugin.h	/^typedef snd_pcm_uframes_t (*snd_pcm_slave_xfer_areas_func_t)$/;"	t
snd_pcm_slave_xfer_areas_undo_func_t	pcm/pcm_plugin.h	/^typedef snd_pcm_sframes_t (*snd_pcm_slave_xfer_areas_undo_func_t)$/;"	t
snd_pcm_softvol_close	pcm/pcm_softvol.c	/^static int snd_pcm_softvol_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_softvol_dump	pcm/pcm_softvol.c	/^static void snd_pcm_softvol_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_softvol_hw_params	pcm/pcm_softvol.c	/^static int snd_pcm_softvol_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_softvol_hw_refine	pcm/pcm_softvol.c	/^static int snd_pcm_softvol_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_softvol_hw_refine_cchange	pcm/pcm_softvol.c	/^static int snd_pcm_softvol_hw_refine_cchange(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_softvol_hw_refine_cprepare	pcm/pcm_softvol.c	/^static int snd_pcm_softvol_hw_refine_cprepare(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_softvol_hw_refine_schange	pcm/pcm_softvol.c	/^static int snd_pcm_softvol_hw_refine_schange(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_softvol_hw_refine_sprepare	pcm/pcm_softvol.c	/^static int snd_pcm_softvol_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_softvol_open	pcm/pcm_softvol.c	/^int snd_pcm_softvol_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_softvol_ops	pcm/pcm_softvol.c	/^static const snd_pcm_ops_t snd_pcm_softvol_ops = {$/;"	v	file:
snd_pcm_softvol_read_areas	pcm/pcm_softvol.c	/^snd_pcm_softvol_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_softvol_t	pcm/pcm_softvol.c	/^} snd_pcm_softvol_t;$/;"	t	typeref:struct:__anon43	file:
snd_pcm_softvol_write_areas	pcm/pcm_softvol.c	/^snd_pcm_softvol_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_start	pcm/pcm.c	/^int snd_pcm_start(snd_pcm_t *pcm)$/;"	f
snd_pcm_start_mode_name	pcm/pcm.c	/^const char *snd_pcm_start_mode_name(snd_pcm_start_t mode)$/;"	f
snd_pcm_start_mode_names	pcm/pcm.c	/^static const char *const snd_pcm_start_mode_names[] = {$/;"	v	file:
snd_pcm_state	pcm/pcm.c	/^snd_pcm_state_t snd_pcm_state(snd_pcm_t *pcm)$/;"	f
snd_pcm_state_name	pcm/pcm.c	/^const char *snd_pcm_state_name(snd_pcm_state_t state)$/;"	f
snd_pcm_state_names	pcm/pcm.c	/^static const char *const snd_pcm_state_names[] = {$/;"	v	file:
snd_pcm_status	pcm/pcm.c	/^int snd_pcm_status(snd_pcm_t *pcm, snd_pcm_status_t *status)$/;"	f
snd_pcm_status_copy	pcm/pcm.c	/^void snd_pcm_status_copy(snd_pcm_status_t *dst, const snd_pcm_status_t *src)$/;"	f
snd_pcm_status_dump	pcm/pcm.c	/^int snd_pcm_status_dump(snd_pcm_status_t *status, snd_output_t *out)$/;"	f
snd_pcm_status_free	pcm/pcm.c	/^void snd_pcm_status_free(snd_pcm_status_t *obj)$/;"	f
snd_pcm_status_get_avail	pcm/pcm.c	/^snd_pcm_uframes_t snd_pcm_status_get_avail(const snd_pcm_status_t *obj)$/;"	f
snd_pcm_status_get_avail_max	pcm/pcm.c	/^snd_pcm_uframes_t snd_pcm_status_get_avail_max(const snd_pcm_status_t *obj)$/;"	f
snd_pcm_status_get_delay	pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_status_get_delay(const snd_pcm_status_t *obj)$/;"	f
snd_pcm_status_get_htstamp	pcm/pcm.c	/^void INTERNAL(snd_pcm_status_get_htstamp)(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)$/;"	f
snd_pcm_status_get_overrange	pcm/pcm.c	/^snd_pcm_uframes_t snd_pcm_status_get_overrange(const snd_pcm_status_t *obj)$/;"	f
snd_pcm_status_get_state	pcm/pcm.c	/^snd_pcm_state_t snd_pcm_status_get_state(const snd_pcm_status_t *obj)$/;"	f
snd_pcm_status_get_trigger_htstamp	pcm/pcm.c	/^void INTERNAL(snd_pcm_status_get_trigger_htstamp)(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)$/;"	f
snd_pcm_status_get_trigger_tstamp	pcm/pcm.c	/^void snd_pcm_status_get_trigger_tstamp(const snd_pcm_status_t *obj, snd_timestamp_t *ptr)$/;"	f
snd_pcm_status_get_tstamp	pcm/pcm.c	/^void snd_pcm_status_get_tstamp(const snd_pcm_status_t *obj, snd_timestamp_t *ptr)$/;"	f
snd_pcm_status_malloc	pcm/pcm.c	/^int snd_pcm_status_malloc(snd_pcm_status_t **ptr)$/;"	f
snd_pcm_status_sizeof	pcm/pcm.c	/^size_t snd_pcm_status_sizeof()$/;"	f
snd_pcm_stream	pcm/pcm.c	/^snd_pcm_stream_t snd_pcm_stream(snd_pcm_t *pcm)$/;"	f
snd_pcm_stream_name	pcm/pcm.c	/^const char *snd_pcm_stream_name(snd_pcm_stream_t stream)$/;"	f
snd_pcm_stream_names	pcm/pcm.c	/^static const char *const snd_pcm_stream_names[] = {$/;"	v	file:
snd_pcm_subformat_description	pcm/pcm.c	/^const char *snd_pcm_subformat_description(snd_pcm_subformat_t subformat)$/;"	f
snd_pcm_subformat_descriptions	pcm/pcm.c	/^static const char *const snd_pcm_subformat_descriptions[] = {$/;"	v	file:
snd_pcm_subformat_mask_any	pcm/pcm.c	/^void snd_pcm_subformat_mask_any(snd_pcm_subformat_mask_t *mask)$/;"	f
snd_pcm_subformat_mask_copy	pcm/pcm.c	/^void snd_pcm_subformat_mask_copy(snd_pcm_subformat_mask_t *dst, const snd_pcm_subformat_mask_t *src)$/;"	f
snd_pcm_subformat_mask_empty	pcm/pcm.c	/^int snd_pcm_subformat_mask_empty(const snd_pcm_subformat_mask_t *mask)$/;"	f
snd_pcm_subformat_mask_free	pcm/pcm.c	/^void snd_pcm_subformat_mask_free(snd_pcm_subformat_mask_t *obj)$/;"	f
snd_pcm_subformat_mask_malloc	pcm/pcm.c	/^int snd_pcm_subformat_mask_malloc(snd_pcm_subformat_mask_t **ptr)$/;"	f
snd_pcm_subformat_mask_none	pcm/pcm.c	/^void snd_pcm_subformat_mask_none(snd_pcm_subformat_mask_t *mask)$/;"	f
snd_pcm_subformat_mask_reset	pcm/pcm.c	/^void snd_pcm_subformat_mask_reset(snd_pcm_subformat_mask_t *mask, snd_pcm_subformat_t val)$/;"	f
snd_pcm_subformat_mask_set	pcm/pcm.c	/^void snd_pcm_subformat_mask_set(snd_pcm_subformat_mask_t *mask, snd_pcm_subformat_t val)$/;"	f
snd_pcm_subformat_mask_sizeof	pcm/pcm.c	/^size_t snd_pcm_subformat_mask_sizeof()$/;"	f
snd_pcm_subformat_mask_test	pcm/pcm.c	/^int snd_pcm_subformat_mask_test(const snd_pcm_subformat_mask_t *mask, snd_pcm_subformat_t val)$/;"	f
snd_pcm_subformat_name	pcm/pcm.c	/^const char *snd_pcm_subformat_name(snd_pcm_subformat_t subformat)$/;"	f
snd_pcm_subformat_names	pcm/pcm.c	/^static const char *const snd_pcm_subformat_names[] = {$/;"	v	file:
snd_pcm_sw_params	pcm/pcm.c	/^int snd_pcm_sw_params(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)$/;"	f
snd_pcm_sw_params_copy	pcm/pcm.c	/^void snd_pcm_sw_params_copy(snd_pcm_sw_params_t *dst, const snd_pcm_sw_params_t *src)$/;"	f
snd_pcm_sw_params_current	pcm/pcm.c	/^int snd_pcm_sw_params_current(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)$/;"	f
snd_pcm_sw_params_default	pcm/pcm_params.c	/^static int snd_pcm_sw_params_default(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)$/;"	f	file:
snd_pcm_sw_params_dump	pcm/pcm.c	/^int snd_pcm_sw_params_dump(snd_pcm_sw_params_t *params, snd_output_t *out)$/;"	f
snd_pcm_sw_params_free	pcm/pcm.c	/^void snd_pcm_sw_params_free(snd_pcm_sw_params_t *obj)$/;"	f
snd_pcm_sw_params_get_avail_min	pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_avail_min)(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_sw_params_get_boundary	pcm/pcm.c	/^int snd_pcm_sw_params_get_boundary(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_sw_params_get_period_event	pcm/pcm.c	/^int snd_pcm_sw_params_get_period_event(const snd_pcm_sw_params_t *params, int *val)$/;"	f
snd_pcm_sw_params_get_silence_size	pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_silence_size)(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_sw_params_get_silence_threshold	pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_silence_threshold)(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_sw_params_get_sleep_min	pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_sleep_min)(const snd_pcm_sw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val)$/;"	f
snd_pcm_sw_params_get_start_mode	pcm/pcm.c	/^snd_pcm_start_t snd_pcm_sw_params_get_start_mode(const snd_pcm_sw_params_t *params)$/;"	f
snd_pcm_sw_params_get_start_threshold	pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_start_threshold)(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_sw_params_get_stop_threshold	pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_stop_threshold)(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_sw_params_get_tstamp_mode	pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_tstamp_mode)(const snd_pcm_sw_params_t *params, snd_pcm_tstamp_t *val)$/;"	f
snd_pcm_sw_params_get_xfer_align	pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_xfer_align)(const snd_pcm_sw_params_t *params ATTRIBUTE_UNUSED, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_sw_params_get_xrun_mode	pcm/pcm.c	/^snd_pcm_xrun_t snd_pcm_sw_params_get_xrun_mode(const snd_pcm_sw_params_t *params)$/;"	f
snd_pcm_sw_params_malloc	pcm/pcm.c	/^int snd_pcm_sw_params_malloc(snd_pcm_sw_params_t **ptr)$/;"	f
snd_pcm_sw_params_set_avail_min	pcm/pcm.c	/^int snd_pcm_sw_params_set_avail_min(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)$/;"	f
snd_pcm_sw_params_set_period_event	pcm/pcm.c	/^int snd_pcm_sw_params_set_period_event(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, int val)$/;"	f
snd_pcm_sw_params_set_silence_size	pcm/pcm.c	/^int snd_pcm_sw_params_set_silence_size(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)$/;"	f
snd_pcm_sw_params_set_silence_threshold	pcm/pcm.c	/^int snd_pcm_sw_params_set_silence_threshold(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)$/;"	f
snd_pcm_sw_params_set_sleep_min	pcm/pcm.c	/^int snd_pcm_sw_params_set_sleep_min(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params ATTRIBUTE_UNUSED, unsigned int val ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_sw_params_set_start_mode	pcm/pcm.c	/^int snd_pcm_sw_params_set_start_mode(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_start_t val)$/;"	f
snd_pcm_sw_params_set_start_threshold	pcm/pcm.c	/^int snd_pcm_sw_params_set_start_threshold(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)$/;"	f
snd_pcm_sw_params_set_stop_threshold	pcm/pcm.c	/^int snd_pcm_sw_params_set_stop_threshold(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)$/;"	f
snd_pcm_sw_params_set_tstamp_mode	pcm/pcm.c	/^int snd_pcm_sw_params_set_tstamp_mode(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params, snd_pcm_tstamp_t val)$/;"	f
snd_pcm_sw_params_set_xfer_align	pcm/pcm.c	/^int snd_pcm_sw_params_set_xfer_align(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params ATTRIBUTE_UNUSED, snd_pcm_uframes_t val ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_sw_params_set_xrun_mode	pcm/pcm.c	/^int snd_pcm_sw_params_set_xrun_mode(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params, snd_pcm_xrun_t val)$/;"	f
snd_pcm_sw_params_sizeof	pcm/pcm.c	/^size_t snd_pcm_sw_params_sizeof()$/;"	f
snd_pcm_tstamp_mode_name	pcm/pcm.c	/^const char *snd_pcm_tstamp_mode_name(snd_pcm_tstamp_t mode)$/;"	f
snd_pcm_tstamp_mode_names	pcm/pcm.c	/^static const char *const snd_pcm_tstamp_mode_names[] = {$/;"	v	file:
snd_pcm_type	pcm/pcm.c	/^snd_pcm_type_t snd_pcm_type(snd_pcm_t *pcm)$/;"	f
snd_pcm_type_name	pcm/pcm.c	/^const char *INTERNAL(snd_pcm_type_name)(snd_pcm_type_t type)$/;"	f
snd_pcm_type_names	pcm/pcm.c	/^static const char *const snd_pcm_type_names[] = {$/;"	v	file:
snd_pcm_unlink	pcm/pcm.c	/^int snd_pcm_unlink(snd_pcm_t *pcm)$/;"	f
snd_pcm_unlink_appl_ptr	pcm/pcm.c	/^void snd_pcm_unlink_appl_ptr(snd_pcm_t *pcm, snd_pcm_t *slave)$/;"	f
snd_pcm_unlink_appl_ptr	pcm/pcm_local.h	273;"	d
snd_pcm_unlink_hw_ptr	pcm/pcm.c	/^void snd_pcm_unlink_hw_ptr(snd_pcm_t *pcm, snd_pcm_t *slave)$/;"	f
snd_pcm_unlink_hw_ptr	pcm/pcm_local.h	271;"	d
snd_pcm_unlink_ptr	pcm/pcm.c	/^static void snd_pcm_unlink_ptr(snd_pcm_t *pcm, snd_pcm_rbptr_t *pcm_rbptr,$/;"	f	file:
snd_pcm_wait	pcm/pcm.c	/^int snd_pcm_wait(snd_pcm_t *pcm, int timeout)$/;"	f
snd_pcm_wait_nocheck	pcm/pcm.c	/^int snd_pcm_wait_nocheck(snd_pcm_t *pcm, int timeout)$/;"	f
snd_pcm_wait_nocheck	pcm/pcm_local.h	259;"	d
snd_pcm_write_areas	pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_write_areas(snd_pcm_t *pcm, const snd_pcm_channel_area_t *areas,$/;"	f
snd_pcm_write_areas	pcm/pcm_local.h	287;"	d
snd_pcm_write_mmap	pcm/pcm_local.h	291;"	d
snd_pcm_write_mmap	pcm/pcm_mmap.c	/^snd_pcm_sframes_t snd_pcm_write_mmap(snd_pcm_t *pcm, snd_pcm_uframes_t offset,$/;"	f
snd_pcm_writei	pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f
snd_pcm_writen	pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
snd_pcm_xfer_areas_func_t	pcm/pcm_local.h	/^typedef snd_pcm_sframes_t (*snd_pcm_xfer_areas_func_t)(snd_pcm_t *pcm, $/;"	t
snd_pcm_xrun_mode_name	pcm/pcm.c	/^const char *snd_pcm_xrun_mode_name(snd_pcm_xrun_t mode)$/;"	f
snd_pcm_xrun_mode_names	pcm/pcm.c	/^static const char *const snd_pcm_xrun_mode_names[] = {$/;"	v	file:
snd_rawmidi_close	rawmidi/rawmidi.c	/^int snd_rawmidi_close(snd_rawmidi_t *rawmidi)$/;"	f
snd_rawmidi_conf_generic_id	rawmidi/rawmidi.c	/^int snd_rawmidi_conf_generic_id(const char *id)$/;"	f
snd_rawmidi_drain	rawmidi/rawmidi.c	/^int snd_rawmidi_drain(snd_rawmidi_t *rawmidi)$/;"	f
snd_rawmidi_drop	rawmidi/rawmidi.c	/^int snd_rawmidi_drop(snd_rawmidi_t *rawmidi)$/;"	f
snd_rawmidi_hw_close	rawmidi/rawmidi_hw.c	/^static int snd_rawmidi_hw_close(snd_rawmidi_t *rmidi)$/;"	f	file:
snd_rawmidi_hw_drain	rawmidi/rawmidi_hw.c	/^static int snd_rawmidi_hw_drain(snd_rawmidi_t *rmidi)$/;"	f	file:
snd_rawmidi_hw_drop	rawmidi/rawmidi_hw.c	/^static int snd_rawmidi_hw_drop(snd_rawmidi_t *rmidi)$/;"	f	file:
snd_rawmidi_hw_info	rawmidi/rawmidi_hw.c	/^static int snd_rawmidi_hw_info(snd_rawmidi_t *rmidi, snd_rawmidi_info_t * info)$/;"	f	file:
snd_rawmidi_hw_nonblock	rawmidi/rawmidi_hw.c	/^static int snd_rawmidi_hw_nonblock(snd_rawmidi_t *rmidi, int nonblock)$/;"	f	file:
snd_rawmidi_hw_open	rawmidi/rawmidi_hw.c	/^int snd_rawmidi_hw_open(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f
snd_rawmidi_hw_ops	rawmidi/rawmidi_hw.c	/^static const snd_rawmidi_ops_t snd_rawmidi_hw_ops = {$/;"	v	file:
snd_rawmidi_hw_params	rawmidi/rawmidi_hw.c	/^static int snd_rawmidi_hw_params(snd_rawmidi_t *rmidi, snd_rawmidi_params_t * params)$/;"	f	file:
snd_rawmidi_hw_read	rawmidi/rawmidi_hw.c	/^static ssize_t snd_rawmidi_hw_read(snd_rawmidi_t *rmidi, void *buffer, size_t size)$/;"	f	file:
snd_rawmidi_hw_status	rawmidi/rawmidi_hw.c	/^static int snd_rawmidi_hw_status(snd_rawmidi_t *rmidi, snd_rawmidi_status_t * status)$/;"	f	file:
snd_rawmidi_hw_t	rawmidi/rawmidi_hw.c	/^} snd_rawmidi_hw_t;$/;"	t	typeref:struct:__anon59	file:
snd_rawmidi_hw_write	rawmidi/rawmidi_hw.c	/^static ssize_t snd_rawmidi_hw_write(snd_rawmidi_t *rmidi, const void *buffer, size_t size)$/;"	f	file:
snd_rawmidi_info	rawmidi/rawmidi.c	/^int snd_rawmidi_info(snd_rawmidi_t *rawmidi, snd_rawmidi_info_t * info)$/;"	f
snd_rawmidi_info_copy	rawmidi/rawmidi.c	/^void snd_rawmidi_info_copy(snd_rawmidi_info_t *dst, const snd_rawmidi_info_t *src)$/;"	f
snd_rawmidi_info_free	rawmidi/rawmidi.c	/^void snd_rawmidi_info_free(snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_card	rawmidi/rawmidi.c	/^int snd_rawmidi_info_get_card(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_device	rawmidi/rawmidi.c	/^unsigned int snd_rawmidi_info_get_device(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_flags	rawmidi/rawmidi.c	/^unsigned int snd_rawmidi_info_get_flags(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_id	rawmidi/rawmidi.c	/^const char *snd_rawmidi_info_get_id(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_name	rawmidi/rawmidi.c	/^const char *snd_rawmidi_info_get_name(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_stream	rawmidi/rawmidi.c	/^snd_rawmidi_stream_t snd_rawmidi_info_get_stream(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_subdevice	rawmidi/rawmidi.c	/^unsigned int snd_rawmidi_info_get_subdevice(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_subdevice_name	rawmidi/rawmidi.c	/^const char *snd_rawmidi_info_get_subdevice_name(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_subdevices_avail	rawmidi/rawmidi.c	/^unsigned int snd_rawmidi_info_get_subdevices_avail(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_subdevices_count	rawmidi/rawmidi.c	/^unsigned int snd_rawmidi_info_get_subdevices_count(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_malloc	rawmidi/rawmidi.c	/^int snd_rawmidi_info_malloc(snd_rawmidi_info_t **info)$/;"	f
snd_rawmidi_info_set_device	rawmidi/rawmidi.c	/^void snd_rawmidi_info_set_device(snd_rawmidi_info_t *info, unsigned int val)$/;"	f
snd_rawmidi_info_set_stream	rawmidi/rawmidi.c	/^void snd_rawmidi_info_set_stream(snd_rawmidi_info_t *info, snd_rawmidi_stream_t val)$/;"	f
snd_rawmidi_info_set_subdevice	rawmidi/rawmidi.c	/^void snd_rawmidi_info_set_subdevice(snd_rawmidi_info_t *info, unsigned int val)$/;"	f
snd_rawmidi_info_sizeof	rawmidi/rawmidi.c	/^size_t snd_rawmidi_info_sizeof()$/;"	f
snd_rawmidi_name	rawmidi/rawmidi.c	/^const char *snd_rawmidi_name(snd_rawmidi_t *rawmidi)$/;"	f
snd_rawmidi_nonblock	rawmidi/rawmidi.c	/^int snd_rawmidi_nonblock(snd_rawmidi_t *rawmidi, int nonblock)$/;"	f
snd_rawmidi_open	rawmidi/rawmidi.c	/^int snd_rawmidi_open(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f
snd_rawmidi_open_conf	rawmidi/rawmidi.c	/^static int snd_rawmidi_open_conf(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f	file:
snd_rawmidi_open_lconf	rawmidi/rawmidi.c	/^int snd_rawmidi_open_lconf(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f
snd_rawmidi_open_noupdate	rawmidi/rawmidi.c	/^static int snd_rawmidi_open_noupdate(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f	file:
snd_rawmidi_open_objects	rawmidi/rawmidi_symbols.c	/^static const char **snd_rawmidi_open_objects[] = {$/;"	v	file:
snd_rawmidi_open_symbols	rawmidi/rawmidi_symbols.c	/^void *snd_rawmidi_open_symbols(void)$/;"	f
snd_rawmidi_ops_t	rawmidi/rawmidi_local.h	/^} snd_rawmidi_ops_t;$/;"	t	typeref:struct:__anon61
snd_rawmidi_params	rawmidi/rawmidi.c	/^int snd_rawmidi_params(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t * params)$/;"	f
snd_rawmidi_params_copy	rawmidi/rawmidi.c	/^void snd_rawmidi_params_copy(snd_rawmidi_params_t *dst, const snd_rawmidi_params_t *src)$/;"	f
snd_rawmidi_params_current	rawmidi/rawmidi.c	/^int snd_rawmidi_params_current(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params)$/;"	f
snd_rawmidi_params_default	rawmidi/rawmidi.c	/^static int snd_rawmidi_params_default(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params)$/;"	f	file:
snd_rawmidi_params_free	rawmidi/rawmidi.c	/^void snd_rawmidi_params_free(snd_rawmidi_params_t *params)$/;"	f
snd_rawmidi_params_get_avail_min	rawmidi/rawmidi.c	/^size_t snd_rawmidi_params_get_avail_min(const snd_rawmidi_params_t *params)$/;"	f
snd_rawmidi_params_get_buffer_size	rawmidi/rawmidi.c	/^size_t snd_rawmidi_params_get_buffer_size(const snd_rawmidi_params_t *params)$/;"	f
snd_rawmidi_params_get_no_active_sensing	rawmidi/rawmidi.c	/^int snd_rawmidi_params_get_no_active_sensing(const snd_rawmidi_params_t *params)$/;"	f
snd_rawmidi_params_malloc	rawmidi/rawmidi.c	/^int snd_rawmidi_params_malloc(snd_rawmidi_params_t **params)$/;"	f
snd_rawmidi_params_set_avail_min	rawmidi/rawmidi.c	/^int snd_rawmidi_params_set_avail_min(snd_rawmidi_t *rawmidi ATTRIBUTE_UNUSED, snd_rawmidi_params_t *params, size_t val)$/;"	f
snd_rawmidi_params_set_buffer_size	rawmidi/rawmidi.c	/^int snd_rawmidi_params_set_buffer_size(snd_rawmidi_t *rawmidi ATTRIBUTE_UNUSED, snd_rawmidi_params_t *params, size_t val)$/;"	f
snd_rawmidi_params_set_no_active_sensing	rawmidi/rawmidi.c	/^int snd_rawmidi_params_set_no_active_sensing(snd_rawmidi_t *rawmidi ATTRIBUTE_UNUSED, snd_rawmidi_params_t *params, int val)$/;"	f
snd_rawmidi_params_sizeof	rawmidi/rawmidi.c	/^size_t snd_rawmidi_params_sizeof()$/;"	f
snd_rawmidi_poll_descriptors	rawmidi/rawmidi.c	/^int snd_rawmidi_poll_descriptors(snd_rawmidi_t *rawmidi, struct pollfd *pfds, unsigned int space)$/;"	f
snd_rawmidi_poll_descriptors_count	rawmidi/rawmidi.c	/^int snd_rawmidi_poll_descriptors_count(snd_rawmidi_t *rawmidi)$/;"	f
snd_rawmidi_poll_descriptors_revents	rawmidi/rawmidi.c	/^int snd_rawmidi_poll_descriptors_revents(snd_rawmidi_t *rawmidi, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_rawmidi_read	rawmidi/rawmidi.c	/^ssize_t snd_rawmidi_read(snd_rawmidi_t *rawmidi, void *buffer, size_t size)$/;"	f
snd_rawmidi_status	rawmidi/rawmidi.c	/^int snd_rawmidi_status(snd_rawmidi_t *rawmidi, snd_rawmidi_status_t * status)$/;"	f
snd_rawmidi_status_copy	rawmidi/rawmidi.c	/^void snd_rawmidi_status_copy(snd_rawmidi_status_t *dst, const snd_rawmidi_status_t *src)$/;"	f
snd_rawmidi_status_free	rawmidi/rawmidi.c	/^void snd_rawmidi_status_free(snd_rawmidi_status_t *status)$/;"	f
snd_rawmidi_status_get_avail	rawmidi/rawmidi.c	/^size_t snd_rawmidi_status_get_avail(const snd_rawmidi_status_t *status)$/;"	f
snd_rawmidi_status_get_tstamp	rawmidi/rawmidi.c	/^void snd_rawmidi_status_get_tstamp(const snd_rawmidi_status_t *status, snd_htimestamp_t *tstamp)$/;"	f
snd_rawmidi_status_get_xruns	rawmidi/rawmidi.c	/^size_t snd_rawmidi_status_get_xruns(const snd_rawmidi_status_t *status)$/;"	f
snd_rawmidi_status_malloc	rawmidi/rawmidi.c	/^int snd_rawmidi_status_malloc(snd_rawmidi_status_t **ptr)$/;"	f
snd_rawmidi_status_sizeof	rawmidi/rawmidi.c	/^size_t snd_rawmidi_status_sizeof()$/;"	f
snd_rawmidi_stream	rawmidi/rawmidi.c	/^snd_rawmidi_stream_t snd_rawmidi_stream(snd_rawmidi_t *rawmidi)$/;"	f
snd_rawmidi_type	rawmidi/rawmidi.c	/^snd_rawmidi_type_t snd_rawmidi_type(snd_rawmidi_t *rawmidi)$/;"	f
snd_rawmidi_virtual_close	rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_close(snd_rawmidi_t *rmidi)$/;"	f	file:
snd_rawmidi_virtual_drain	rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_drain(snd_rawmidi_t *rmidi)$/;"	f	file:
snd_rawmidi_virtual_drop	rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_drop(snd_rawmidi_t *rmidi)$/;"	f	file:
snd_rawmidi_virtual_info	rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_info(snd_rawmidi_t *rmidi, snd_rawmidi_info_t * info)$/;"	f	file:
snd_rawmidi_virtual_input_params	rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_input_params(snd_rawmidi_virtual_t *virt, snd_rawmidi_params_t *params)$/;"	f	file:
snd_rawmidi_virtual_nonblock	rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_nonblock(snd_rawmidi_t *rmidi, int nonblock)$/;"	f	file:
snd_rawmidi_virtual_open	rawmidi/rawmidi_virt.c	/^int snd_rawmidi_virtual_open(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f
snd_rawmidi_virtual_ops	rawmidi/rawmidi_virt.c	/^static const snd_rawmidi_ops_t snd_rawmidi_virtual_ops = {$/;"	v	file:
snd_rawmidi_virtual_output_params	rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_output_params(snd_rawmidi_virtual_t *virt, snd_rawmidi_params_t *params)$/;"	f	file:
snd_rawmidi_virtual_params	rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_params(snd_rawmidi_t *rmidi, snd_rawmidi_params_t * params)$/;"	f	file:
snd_rawmidi_virtual_read	rawmidi/rawmidi_virt.c	/^static ssize_t snd_rawmidi_virtual_read(snd_rawmidi_t *rmidi, void *buffer, size_t size)$/;"	f	file:
snd_rawmidi_virtual_status	rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_status(snd_rawmidi_t *rmidi, snd_rawmidi_status_t * status)$/;"	f	file:
snd_rawmidi_virtual_t	rawmidi/rawmidi_virt.c	/^} snd_rawmidi_virtual_t;$/;"	t	typeref:struct:__anon60	file:
snd_rawmidi_virtual_write	rawmidi/rawmidi_virt.c	/^static ssize_t snd_rawmidi_virtual_write(snd_rawmidi_t *rmidi, const void *buffer, size_t size)$/;"	f	file:
snd_rawmidi_write	rawmidi/rawmidi.c	/^ssize_t snd_rawmidi_write(snd_rawmidi_t *rawmidi, const void *buffer, size_t size)$/;"	f
snd_receive_fd	socket.c	/^int snd_receive_fd(int sock, void *data, size_t len, int *fd)$/;"	f
snd_sctl_build	control/setup.c	/^int snd_sctl_build(snd_sctl_t **sctl, snd_ctl_t *handle, snd_config_t *conf, snd_config_t *private_data, int mode)$/;"	f
snd_sctl_elem_t	control/setup.c	/^} snd_sctl_elem_t;$/;"	t	typeref:struct:__anon6	file:
snd_sctl_free	control/setup.c	/^int snd_sctl_free(snd_sctl_t *sctl)$/;"	f
snd_sctl_install	control/setup.c	/^int snd_sctl_install(snd_sctl_t *h)$/;"	f
snd_sctl_remove	control/setup.c	/^int snd_sctl_remove(snd_sctl_t *h)$/;"	f
snd_send_fd	socket.c	/^int snd_send_fd(int sock, void *data, size_t len, int fd)$/;"	f
snd_seq_alloc_named_queue	seq/seq.c	/^int snd_seq_alloc_named_queue(snd_seq_t *seq, const char *name)$/;"	f
snd_seq_alloc_queue	seq/seq.c	/^int snd_seq_alloc_queue(snd_seq_t *seq)$/;"	f
snd_seq_change_bit	seq/seq.c	/^int snd_seq_change_bit(int nr, void *array)$/;"	f
snd_seq_client_id	seq/seq.c	/^int snd_seq_client_id(snd_seq_t *seq)$/;"	f
snd_seq_client_info_copy	seq/seq.c	/^void snd_seq_client_info_copy(snd_seq_client_info_t *dst, const snd_seq_client_info_t *src)$/;"	f
snd_seq_client_info_event_filter_add	seq/seq.c	/^void snd_seq_client_info_event_filter_add(snd_seq_client_info_t *info, int event_type)$/;"	f
snd_seq_client_info_event_filter_check	seq/seq.c	/^int snd_seq_client_info_event_filter_check(snd_seq_client_info_t *info, int event_type)$/;"	f
snd_seq_client_info_event_filter_clear	seq/seq.c	/^void snd_seq_client_info_event_filter_clear(snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_event_filter_del	seq/seq.c	/^void snd_seq_client_info_event_filter_del(snd_seq_client_info_t *info, int event_type)$/;"	f
snd_seq_client_info_free	seq/seq.c	/^void snd_seq_client_info_free(snd_seq_client_info_t *obj)$/;"	f
snd_seq_client_info_get_broadcast_filter	seq/seq.c	/^int snd_seq_client_info_get_broadcast_filter(const snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_get_client	seq/seq.c	/^int snd_seq_client_info_get_client(const snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_get_error_bounce	seq/seq.c	/^int snd_seq_client_info_get_error_bounce(const snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_get_event_filter	seq/seq.c	/^const unsigned char *snd_seq_client_info_get_event_filter(const snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_get_event_lost	seq/seq.c	/^int snd_seq_client_info_get_event_lost(const snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_get_name	seq/seq.c	/^const char *snd_seq_client_info_get_name(snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_get_num_ports	seq/seq.c	/^int snd_seq_client_info_get_num_ports(const snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_get_type	seq/seq.c	/^snd_seq_client_type_t snd_seq_client_info_get_type(const snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_malloc	seq/seq.c	/^int snd_seq_client_info_malloc(snd_seq_client_info_t **ptr)$/;"	f
snd_seq_client_info_set_broadcast_filter	seq/seq.c	/^void snd_seq_client_info_set_broadcast_filter(snd_seq_client_info_t *info, int val)$/;"	f
snd_seq_client_info_set_client	seq/seq.c	/^void snd_seq_client_info_set_client(snd_seq_client_info_t *info, int client)$/;"	f
snd_seq_client_info_set_error_bounce	seq/seq.c	/^void snd_seq_client_info_set_error_bounce(snd_seq_client_info_t *info, int val)$/;"	f
snd_seq_client_info_set_event_filter	seq/seq.c	/^void snd_seq_client_info_set_event_filter(snd_seq_client_info_t *info, unsigned char *filter)$/;"	f
snd_seq_client_info_set_name	seq/seq.c	/^void snd_seq_client_info_set_name(snd_seq_client_info_t *info, const char *name)$/;"	f
snd_seq_client_info_sizeof	seq/seq.c	/^size_t snd_seq_client_info_sizeof()$/;"	f
snd_seq_client_pool_copy	seq/seq.c	/^void snd_seq_client_pool_copy(snd_seq_client_pool_t *dst, const snd_seq_client_pool_t *src)$/;"	f
snd_seq_client_pool_free	seq/seq.c	/^void snd_seq_client_pool_free(snd_seq_client_pool_t *obj)$/;"	f
snd_seq_client_pool_get_client	seq/seq.c	/^int snd_seq_client_pool_get_client(const snd_seq_client_pool_t *info)$/;"	f
snd_seq_client_pool_get_input_free	seq/seq.c	/^size_t snd_seq_client_pool_get_input_free(const snd_seq_client_pool_t *info)$/;"	f
snd_seq_client_pool_get_input_pool	seq/seq.c	/^size_t snd_seq_client_pool_get_input_pool(const snd_seq_client_pool_t *info)$/;"	f
snd_seq_client_pool_get_output_free	seq/seq.c	/^size_t snd_seq_client_pool_get_output_free(const snd_seq_client_pool_t *info)$/;"	f
snd_seq_client_pool_get_output_pool	seq/seq.c	/^size_t snd_seq_client_pool_get_output_pool(const snd_seq_client_pool_t *info)$/;"	f
snd_seq_client_pool_get_output_room	seq/seq.c	/^size_t snd_seq_client_pool_get_output_room(const snd_seq_client_pool_t *info)$/;"	f
snd_seq_client_pool_malloc	seq/seq.c	/^int snd_seq_client_pool_malloc(snd_seq_client_pool_t **ptr)$/;"	f
snd_seq_client_pool_set_input_pool	seq/seq.c	/^void snd_seq_client_pool_set_input_pool(snd_seq_client_pool_t *info, size_t size)$/;"	f
snd_seq_client_pool_set_output_pool	seq/seq.c	/^void snd_seq_client_pool_set_output_pool(snd_seq_client_pool_t *info, size_t size)$/;"	f
snd_seq_client_pool_set_output_room	seq/seq.c	/^void snd_seq_client_pool_set_output_room(snd_seq_client_pool_t *info, size_t size)$/;"	f
snd_seq_client_pool_sizeof	seq/seq.c	/^size_t snd_seq_client_pool_sizeof()$/;"	f
snd_seq_close	seq/seq.c	/^int snd_seq_close(snd_seq_t *seq)$/;"	f
snd_seq_compare_real_time	seq/seq.c	/^static inline int snd_seq_compare_real_time(snd_seq_real_time_t *a, snd_seq_real_time_t *b)$/;"	f	file:
snd_seq_compare_tick_time	seq/seq.c	/^static inline int snd_seq_compare_tick_time(snd_seq_tick_time_t *a, snd_seq_tick_time_t *b)$/;"	f	file:
snd_seq_connect_from	seq/seqmid.c	/^int snd_seq_connect_from(snd_seq_t *seq, int myport, int src_client, int src_port)$/;"	f
snd_seq_connect_to	seq/seqmid.c	/^int snd_seq_connect_to(snd_seq_t *seq, int myport, int dest_client, int dest_port)$/;"	f
snd_seq_control_queue	seq/seqmid.c	/^int snd_seq_control_queue(snd_seq_t *seq, int q, int type, int value, snd_seq_event_t *ev)$/;"	f
snd_seq_create_event	seq/seq.c	/^snd_seq_event_t *snd_seq_create_event(void)$/;"	f
snd_seq_create_port	seq/seq.c	/^int snd_seq_create_port(snd_seq_t *seq, snd_seq_port_info_t * port)$/;"	f
snd_seq_create_queue	seq/seq.c	/^int snd_seq_create_queue(snd_seq_t *seq, snd_seq_queue_info_t *info)$/;"	f
snd_seq_create_simple_port	seq/seqmid.c	/^int snd_seq_create_simple_port(snd_seq_t *seq, const char *name,$/;"	f
snd_seq_delete_port	seq/seq.c	/^int snd_seq_delete_port(snd_seq_t *seq, int port)$/;"	f
snd_seq_delete_simple_port	seq/seqmid.c	/^int snd_seq_delete_simple_port(snd_seq_t *seq, int port)$/;"	f
snd_seq_disconnect_from	seq/seqmid.c	/^int snd_seq_disconnect_from(snd_seq_t *seq, int myport, int src_client, int src_port)$/;"	f
snd_seq_disconnect_to	seq/seqmid.c	/^int snd_seq_disconnect_to(snd_seq_t *seq, int myport, int dest_client, int dest_port)$/;"	f
snd_seq_drain_output	seq/seq.c	/^int snd_seq_drain_output(snd_seq_t *seq)$/;"	f
snd_seq_drop_input	seq/seq.c	/^int snd_seq_drop_input(snd_seq_t *seq)$/;"	f
snd_seq_drop_input_buffer	seq/seq.c	/^int snd_seq_drop_input_buffer(snd_seq_t *seq)$/;"	f
snd_seq_drop_output	seq/seq.c	/^int snd_seq_drop_output(snd_seq_t *seq)$/;"	f
snd_seq_drop_output_buffer	seq/seq.c	/^int snd_seq_drop_output_buffer(snd_seq_t *seq)$/;"	f
snd_seq_event_input	seq/seq.c	/^int snd_seq_event_input(snd_seq_t *seq, snd_seq_event_t **ev)$/;"	f
snd_seq_event_input_feed	seq/seq.c	/^static int snd_seq_event_input_feed(snd_seq_t *seq, int timeout)$/;"	f	file:
snd_seq_event_input_pending	seq/seq.c	/^int snd_seq_event_input_pending(snd_seq_t *seq, int fetch_sequencer)$/;"	f
snd_seq_event_length	seq/seq.c	/^ssize_t snd_seq_event_length(snd_seq_event_t *ev)$/;"	f
snd_seq_event_output	seq/seq.c	/^int snd_seq_event_output(snd_seq_t *seq, snd_seq_event_t *ev)$/;"	f
snd_seq_event_output_buffer	seq/seq.c	/^int snd_seq_event_output_buffer(snd_seq_t *seq, snd_seq_event_t *ev)$/;"	f
snd_seq_event_output_direct	seq/seq.c	/^int snd_seq_event_output_direct(snd_seq_t *seq, snd_seq_event_t *ev)$/;"	f
snd_seq_event_output_pending	seq/seq.c	/^int snd_seq_event_output_pending(snd_seq_t *seq)$/;"	f
snd_seq_event_read_buffer	seq/seq.c	/^static ssize_t snd_seq_event_read_buffer(snd_seq_t *seq)$/;"	f	file:
snd_seq_event_retrieve_buffer	seq/seq.c	/^static int snd_seq_event_retrieve_buffer(snd_seq_t *seq, snd_seq_event_t **retp)$/;"	f	file:
snd_seq_event_types	seq/seq_event.c	/^const unsigned int snd_seq_event_types[256] = {$/;"	v
snd_seq_extract_output	seq/seq.c	/^int snd_seq_extract_output(snd_seq_t *seq, snd_seq_event_t **ev_res)$/;"	f
snd_seq_free_event	seq/seq.c	/^int snd_seq_free_event(snd_seq_event_t *ev ATTRIBUTE_UNUSED)$/;"	f
snd_seq_free_queue	seq/seq.c	/^int snd_seq_free_queue(snd_seq_t *seq, int q)$/;"	f
snd_seq_get_any_client_info	seq/seq.c	/^int snd_seq_get_any_client_info(snd_seq_t *seq, int client, snd_seq_client_info_t *info)$/;"	f
snd_seq_get_any_port_info	seq/seq.c	/^int snd_seq_get_any_port_info(snd_seq_t *seq, int client, int port, snd_seq_port_info_t * info)$/;"	f
snd_seq_get_bit	seq/seq.c	/^int snd_seq_get_bit(int nr, void *array)$/;"	f
snd_seq_get_client_info	seq/seq.c	/^int snd_seq_get_client_info(snd_seq_t *seq, snd_seq_client_info_t *info)$/;"	f
snd_seq_get_client_pool	seq/seq.c	/^int snd_seq_get_client_pool(snd_seq_t *seq, snd_seq_client_pool_t *info)$/;"	f
snd_seq_get_input_buffer_size	seq/seq.c	/^size_t snd_seq_get_input_buffer_size(snd_seq_t *seq)$/;"	f
snd_seq_get_output_buffer_size	seq/seq.c	/^size_t snd_seq_get_output_buffer_size(snd_seq_t *seq)$/;"	f
snd_seq_get_port_info	seq/seq.c	/^int snd_seq_get_port_info(snd_seq_t *seq, int port, snd_seq_port_info_t * info)$/;"	f
snd_seq_get_port_subscription	seq/seq.c	/^int snd_seq_get_port_subscription(snd_seq_t *seq, snd_seq_port_subscribe_t * sub)$/;"	f
snd_seq_get_queue_info	seq/seq.c	/^int snd_seq_get_queue_info(snd_seq_t *seq, int q, snd_seq_queue_info_t *info)$/;"	f
snd_seq_get_queue_status	seq/seq.c	/^int snd_seq_get_queue_status(snd_seq_t *seq, int q, snd_seq_queue_status_t * status)$/;"	f
snd_seq_get_queue_tempo	seq/seq.c	/^int snd_seq_get_queue_tempo(snd_seq_t *seq, int q, snd_seq_queue_tempo_t * tempo)$/;"	f
snd_seq_get_queue_timer	seq/seq.c	/^int snd_seq_get_queue_timer(snd_seq_t *seq, int q, snd_seq_queue_timer_t * timer)$/;"	f
snd_seq_get_queue_usage	seq/seq.c	/^int snd_seq_get_queue_usage(snd_seq_t *seq, int q)$/;"	f
snd_seq_hw_client_id	seq/seq_hw.c	/^static int snd_seq_hw_client_id(snd_seq_t *seq)$/;"	f	file:
snd_seq_hw_close	seq/seq_hw.c	/^static int snd_seq_hw_close(snd_seq_t *seq)$/;"	f	file:
snd_seq_hw_create_port	seq/seq_hw.c	/^static int snd_seq_hw_create_port(snd_seq_t *seq, snd_seq_port_info_t * port)$/;"	f	file:
snd_seq_hw_create_queue	seq/seq_hw.c	/^static int snd_seq_hw_create_queue(snd_seq_t *seq, snd_seq_queue_info_t *info)$/;"	f	file:
snd_seq_hw_delete_port	seq/seq_hw.c	/^static int snd_seq_hw_delete_port(snd_seq_t *seq, snd_seq_port_info_t * port)$/;"	f	file:
snd_seq_hw_delete_queue	seq/seq_hw.c	/^static int snd_seq_hw_delete_queue(snd_seq_t *seq, snd_seq_queue_info_t *info)$/;"	f	file:
snd_seq_hw_get_client_info	seq/seq_hw.c	/^static int snd_seq_hw_get_client_info(snd_seq_t *seq, snd_seq_client_info_t * info)$/;"	f	file:
snd_seq_hw_get_client_pool	seq/seq_hw.c	/^static int snd_seq_hw_get_client_pool(snd_seq_t *seq, snd_seq_client_pool_t *info)$/;"	f	file:
snd_seq_hw_get_named_queue	seq/seq_hw.c	/^static int snd_seq_hw_get_named_queue(snd_seq_t *seq, snd_seq_queue_info_t *info)$/;"	f	file:
snd_seq_hw_get_port_info	seq/seq_hw.c	/^static int snd_seq_hw_get_port_info(snd_seq_t *seq, snd_seq_port_info_t * info)$/;"	f	file:
snd_seq_hw_get_port_subscription	seq/seq_hw.c	/^static int snd_seq_hw_get_port_subscription(snd_seq_t *seq, snd_seq_port_subscribe_t * sub)$/;"	f	file:
snd_seq_hw_get_queue_client	seq/seq_hw.c	/^static int snd_seq_hw_get_queue_client(snd_seq_t *seq, snd_seq_queue_client_t * info)$/;"	f	file:
snd_seq_hw_get_queue_info	seq/seq_hw.c	/^static int snd_seq_hw_get_queue_info(snd_seq_t *seq, snd_seq_queue_info_t *info)$/;"	f	file:
snd_seq_hw_get_queue_status	seq/seq_hw.c	/^static int snd_seq_hw_get_queue_status(snd_seq_t *seq, snd_seq_queue_status_t * status)$/;"	f	file:
snd_seq_hw_get_queue_tempo	seq/seq_hw.c	/^static int snd_seq_hw_get_queue_tempo(snd_seq_t *seq, snd_seq_queue_tempo_t * tempo)$/;"	f	file:
snd_seq_hw_get_queue_timer	seq/seq_hw.c	/^static int snd_seq_hw_get_queue_timer(snd_seq_t *seq, snd_seq_queue_timer_t * timer)$/;"	f	file:
snd_seq_hw_nonblock	seq/seq_hw.c	/^static int snd_seq_hw_nonblock(snd_seq_t *seq, int nonblock)$/;"	f	file:
snd_seq_hw_open	seq/seq_hw.c	/^int snd_seq_hw_open(snd_seq_t **handle, const char *name, int streams, int mode)$/;"	f
snd_seq_hw_ops	seq/seq_hw.c	/^static const snd_seq_ops_t snd_seq_hw_ops = {$/;"	v	file:
snd_seq_hw_query_next_client	seq/seq_hw.c	/^static int snd_seq_hw_query_next_client(snd_seq_t *seq, snd_seq_client_info_t *info)$/;"	f	file:
snd_seq_hw_query_next_port	seq/seq_hw.c	/^static int snd_seq_hw_query_next_port(snd_seq_t *seq, snd_seq_port_info_t *info)$/;"	f	file:
snd_seq_hw_query_port_subscribers	seq/seq_hw.c	/^static int snd_seq_hw_query_port_subscribers(snd_seq_t *seq, snd_seq_query_subscribe_t * subs)$/;"	f	file:
snd_seq_hw_read	seq/seq_hw.c	/^static ssize_t snd_seq_hw_read(snd_seq_t *seq, void *buf, size_t len)$/;"	f	file:
snd_seq_hw_remove_events	seq/seq_hw.c	/^static int snd_seq_hw_remove_events(snd_seq_t *seq, snd_seq_remove_events_t *rmp)$/;"	f	file:
snd_seq_hw_set_client_info	seq/seq_hw.c	/^static int snd_seq_hw_set_client_info(snd_seq_t *seq, snd_seq_client_info_t * info)$/;"	f	file:
snd_seq_hw_set_client_pool	seq/seq_hw.c	/^static int snd_seq_hw_set_client_pool(snd_seq_t *seq, snd_seq_client_pool_t *info)$/;"	f	file:
snd_seq_hw_set_port_info	seq/seq_hw.c	/^static int snd_seq_hw_set_port_info(snd_seq_t *seq, snd_seq_port_info_t * info)$/;"	f	file:
snd_seq_hw_set_queue_client	seq/seq_hw.c	/^static int snd_seq_hw_set_queue_client(snd_seq_t *seq, snd_seq_queue_client_t * info)$/;"	f	file:
snd_seq_hw_set_queue_info	seq/seq_hw.c	/^static int snd_seq_hw_set_queue_info(snd_seq_t *seq, snd_seq_queue_info_t *info)$/;"	f	file:
snd_seq_hw_set_queue_tempo	seq/seq_hw.c	/^static int snd_seq_hw_set_queue_tempo(snd_seq_t *seq, snd_seq_queue_tempo_t * tempo)$/;"	f	file:
snd_seq_hw_set_queue_timer	seq/seq_hw.c	/^static int snd_seq_hw_set_queue_timer(snd_seq_t *seq, snd_seq_queue_timer_t * timer)$/;"	f	file:
snd_seq_hw_subscribe_port	seq/seq_hw.c	/^static int snd_seq_hw_subscribe_port(snd_seq_t *seq, snd_seq_port_subscribe_t * sub)$/;"	f	file:
snd_seq_hw_system_info	seq/seq_hw.c	/^static int snd_seq_hw_system_info(snd_seq_t *seq, snd_seq_system_info_t * info)$/;"	f	file:
snd_seq_hw_t	seq/seq_hw.c	/^} snd_seq_hw_t;$/;"	t	typeref:struct:__anon62	file:
snd_seq_hw_unsubscribe_port	seq/seq_hw.c	/^static int snd_seq_hw_unsubscribe_port(snd_seq_t *seq, snd_seq_port_subscribe_t * sub)$/;"	f	file:
snd_seq_hw_write	seq/seq_hw.c	/^static ssize_t snd_seq_hw_write(snd_seq_t *seq, void *buf, size_t len)$/;"	f	file:
snd_seq_name	seq/seq.c	/^const char *snd_seq_name(snd_seq_t *seq)$/;"	f
snd_seq_nonblock	seq/seq.c	/^int snd_seq_nonblock(snd_seq_t *seq, int nonblock)$/;"	f
snd_seq_open	seq/seq.c	/^int snd_seq_open(snd_seq_t **seqp, const char *name, $/;"	f
snd_seq_open_conf	seq/seq.c	/^static int snd_seq_open_conf(snd_seq_t **seqp, const char *name,$/;"	f	file:
snd_seq_open_lconf	seq/seq.c	/^int snd_seq_open_lconf(snd_seq_t **seqp, const char *name, $/;"	f
snd_seq_open_noupdate	seq/seq.c	/^static int snd_seq_open_noupdate(snd_seq_t **seqp, snd_config_t *root,$/;"	f	file:
snd_seq_open_objects	seq/seq_symbols.c	/^static const char **snd_seq_open_objects[] = {$/;"	v	file:
snd_seq_open_symbols	seq/seq_symbols.c	/^void *snd_seq_open_symbols(void)$/;"	f
snd_seq_ops_t	seq/seq_local.h	/^} snd_seq_ops_t;$/;"	t	typeref:struct:__anon63
snd_seq_parse_address	seq/seqmid.c	/^int snd_seq_parse_address(snd_seq_t *seq, snd_seq_addr_t *addr, const char *arg)$/;"	f
snd_seq_poll_descriptors	seq/seq.c	/^int snd_seq_poll_descriptors(snd_seq_t *seq, struct pollfd *pfds, unsigned int space, short events)$/;"	f
snd_seq_poll_descriptors_count	seq/seq.c	/^int snd_seq_poll_descriptors_count(snd_seq_t *seq, short events)$/;"	f
snd_seq_poll_descriptors_revents	seq/seq.c	/^int snd_seq_poll_descriptors_revents(snd_seq_t *seq, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_seq_port_info_copy	seq/seq.c	/^void snd_seq_port_info_copy(snd_seq_port_info_t *dst, const snd_seq_port_info_t *src)$/;"	f
snd_seq_port_info_free	seq/seq.c	/^void snd_seq_port_info_free(snd_seq_port_info_t *obj)$/;"	f
snd_seq_port_info_get_addr	seq/seq.c	/^const snd_seq_addr_t *snd_seq_port_info_get_addr(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_capability	seq/seq.c	/^unsigned int snd_seq_port_info_get_capability(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_client	seq/seq.c	/^int snd_seq_port_info_get_client(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_midi_channels	seq/seq.c	/^int snd_seq_port_info_get_midi_channels(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_midi_voices	seq/seq.c	/^int snd_seq_port_info_get_midi_voices(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_name	seq/seq.c	/^const char *snd_seq_port_info_get_name(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_port	seq/seq.c	/^int snd_seq_port_info_get_port(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_port_specified	seq/seq.c	/^int snd_seq_port_info_get_port_specified(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_read_use	seq/seq.c	/^int snd_seq_port_info_get_read_use(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_synth_voices	seq/seq.c	/^int snd_seq_port_info_get_synth_voices(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_timestamp_queue	seq/seq.c	/^int snd_seq_port_info_get_timestamp_queue(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_timestamp_real	seq/seq.c	/^int snd_seq_port_info_get_timestamp_real(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_timestamping	seq/seq.c	/^int snd_seq_port_info_get_timestamping(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_type	seq/seq.c	/^unsigned int snd_seq_port_info_get_type(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_write_use	seq/seq.c	/^int snd_seq_port_info_get_write_use(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_malloc	seq/seq.c	/^int snd_seq_port_info_malloc(snd_seq_port_info_t **ptr)$/;"	f
snd_seq_port_info_set_addr	seq/seq.c	/^void snd_seq_port_info_set_addr(snd_seq_port_info_t *info, const snd_seq_addr_t *addr)$/;"	f
snd_seq_port_info_set_capability	seq/seq.c	/^void snd_seq_port_info_set_capability(snd_seq_port_info_t *info, unsigned int capability)$/;"	f
snd_seq_port_info_set_client	seq/seq.c	/^void snd_seq_port_info_set_client(snd_seq_port_info_t *info, int client)$/;"	f
snd_seq_port_info_set_midi_channels	seq/seq.c	/^void snd_seq_port_info_set_midi_channels(snd_seq_port_info_t *info, int channels)$/;"	f
snd_seq_port_info_set_midi_voices	seq/seq.c	/^void snd_seq_port_info_set_midi_voices(snd_seq_port_info_t *info, int voices)$/;"	f
snd_seq_port_info_set_name	seq/seq.c	/^void snd_seq_port_info_set_name(snd_seq_port_info_t *info, const char *name)$/;"	f
snd_seq_port_info_set_port	seq/seq.c	/^void snd_seq_port_info_set_port(snd_seq_port_info_t *info, int port)$/;"	f
snd_seq_port_info_set_port_specified	seq/seq.c	/^void snd_seq_port_info_set_port_specified(snd_seq_port_info_t *info, int val)$/;"	f
snd_seq_port_info_set_synth_voices	seq/seq.c	/^void snd_seq_port_info_set_synth_voices(snd_seq_port_info_t *info, int voices)$/;"	f
snd_seq_port_info_set_timestamp_queue	seq/seq.c	/^void snd_seq_port_info_set_timestamp_queue(snd_seq_port_info_t *info, int queue)$/;"	f
snd_seq_port_info_set_timestamp_real	seq/seq.c	/^void snd_seq_port_info_set_timestamp_real(snd_seq_port_info_t *info, int enable)$/;"	f
snd_seq_port_info_set_timestamping	seq/seq.c	/^void snd_seq_port_info_set_timestamping(snd_seq_port_info_t *info, int enable)$/;"	f
snd_seq_port_info_set_type	seq/seq.c	/^void snd_seq_port_info_set_type(snd_seq_port_info_t *info, unsigned int type)$/;"	f
snd_seq_port_info_sizeof	seq/seq.c	/^size_t snd_seq_port_info_sizeof()$/;"	f
snd_seq_port_subscribe_copy	seq/seq.c	/^void snd_seq_port_subscribe_copy(snd_seq_port_subscribe_t *dst, const snd_seq_port_subscribe_t *src)$/;"	f
snd_seq_port_subscribe_free	seq/seq.c	/^void snd_seq_port_subscribe_free(snd_seq_port_subscribe_t *obj)$/;"	f
snd_seq_port_subscribe_get_dest	seq/seq.c	/^const snd_seq_addr_t *snd_seq_port_subscribe_get_dest(const snd_seq_port_subscribe_t *info)$/;"	f
snd_seq_port_subscribe_get_exclusive	seq/seq.c	/^int snd_seq_port_subscribe_get_exclusive(const snd_seq_port_subscribe_t *info)$/;"	f
snd_seq_port_subscribe_get_queue	seq/seq.c	/^int snd_seq_port_subscribe_get_queue(const snd_seq_port_subscribe_t *info)$/;"	f
snd_seq_port_subscribe_get_sender	seq/seq.c	/^const snd_seq_addr_t *snd_seq_port_subscribe_get_sender(const snd_seq_port_subscribe_t *info)$/;"	f
snd_seq_port_subscribe_get_time_real	seq/seq.c	/^int snd_seq_port_subscribe_get_time_real(const snd_seq_port_subscribe_t *info)$/;"	f
snd_seq_port_subscribe_get_time_update	seq/seq.c	/^int snd_seq_port_subscribe_get_time_update(const snd_seq_port_subscribe_t *info)$/;"	f
snd_seq_port_subscribe_malloc	seq/seq.c	/^int snd_seq_port_subscribe_malloc(snd_seq_port_subscribe_t **ptr)$/;"	f
snd_seq_port_subscribe_set_dest	seq/seq.c	/^void snd_seq_port_subscribe_set_dest(snd_seq_port_subscribe_t *info, const snd_seq_addr_t *addr)$/;"	f
snd_seq_port_subscribe_set_exclusive	seq/seq.c	/^void snd_seq_port_subscribe_set_exclusive(snd_seq_port_subscribe_t *info, int val)$/;"	f
snd_seq_port_subscribe_set_queue	seq/seq.c	/^void snd_seq_port_subscribe_set_queue(snd_seq_port_subscribe_t *info, int q)$/;"	f
snd_seq_port_subscribe_set_sender	seq/seq.c	/^void snd_seq_port_subscribe_set_sender(snd_seq_port_subscribe_t *info, const snd_seq_addr_t *addr)$/;"	f
snd_seq_port_subscribe_set_time_real	seq/seq.c	/^void snd_seq_port_subscribe_set_time_real(snd_seq_port_subscribe_t *info, int val)$/;"	f
snd_seq_port_subscribe_set_time_update	seq/seq.c	/^void snd_seq_port_subscribe_set_time_update(snd_seq_port_subscribe_t *info, int val)$/;"	f
snd_seq_port_subscribe_sizeof	seq/seq.c	/^size_t snd_seq_port_subscribe_sizeof()$/;"	f
snd_seq_query_named_queue	seq/seq.c	/^int snd_seq_query_named_queue(snd_seq_t *seq, const char *name)$/;"	f
snd_seq_query_next_client	seq/seq.c	/^int snd_seq_query_next_client(snd_seq_t *seq, snd_seq_client_info_t *info)$/;"	f
snd_seq_query_next_port	seq/seq.c	/^int snd_seq_query_next_port(snd_seq_t *seq, snd_seq_port_info_t *info)$/;"	f
snd_seq_query_port_subscribers	seq/seq.c	/^int snd_seq_query_port_subscribers(snd_seq_t *seq, snd_seq_query_subscribe_t * subs)$/;"	f
snd_seq_query_subscribe_copy	seq/seq.c	/^void snd_seq_query_subscribe_copy(snd_seq_query_subscribe_t *dst, const snd_seq_query_subscribe_t *src)$/;"	f
snd_seq_query_subscribe_free	seq/seq.c	/^void snd_seq_query_subscribe_free(snd_seq_query_subscribe_t *obj)$/;"	f
snd_seq_query_subscribe_get_addr	seq/seq.c	/^const snd_seq_addr_t *snd_seq_query_subscribe_get_addr(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_client	seq/seq.c	/^int snd_seq_query_subscribe_get_client(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_exclusive	seq/seq.c	/^int snd_seq_query_subscribe_get_exclusive(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_index	seq/seq.c	/^int snd_seq_query_subscribe_get_index(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_num_subs	seq/seq.c	/^int snd_seq_query_subscribe_get_num_subs(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_port	seq/seq.c	/^int snd_seq_query_subscribe_get_port(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_queue	seq/seq.c	/^int snd_seq_query_subscribe_get_queue(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_root	seq/seq.c	/^const snd_seq_addr_t *snd_seq_query_subscribe_get_root(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_time_real	seq/seq.c	/^int snd_seq_query_subscribe_get_time_real(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_time_update	seq/seq.c	/^int snd_seq_query_subscribe_get_time_update(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_type	seq/seq.c	/^snd_seq_query_subs_type_t snd_seq_query_subscribe_get_type(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_malloc	seq/seq.c	/^int snd_seq_query_subscribe_malloc(snd_seq_query_subscribe_t **ptr)$/;"	f
snd_seq_query_subscribe_set_client	seq/seq.c	/^void snd_seq_query_subscribe_set_client(snd_seq_query_subscribe_t *info, int client)$/;"	f
snd_seq_query_subscribe_set_index	seq/seq.c	/^void snd_seq_query_subscribe_set_index(snd_seq_query_subscribe_t *info, int index)$/;"	f
snd_seq_query_subscribe_set_port	seq/seq.c	/^void snd_seq_query_subscribe_set_port(snd_seq_query_subscribe_t *info, int port)$/;"	f
snd_seq_query_subscribe_set_root	seq/seq.c	/^void snd_seq_query_subscribe_set_root(snd_seq_query_subscribe_t *info, const snd_seq_addr_t *addr)$/;"	f
snd_seq_query_subscribe_set_type	seq/seq.c	/^void snd_seq_query_subscribe_set_type(snd_seq_query_subscribe_t *info, snd_seq_query_subs_type_t type)$/;"	f
snd_seq_query_subscribe_sizeof	seq/seq.c	/^size_t snd_seq_query_subscribe_sizeof()$/;"	f
snd_seq_queue_client_t	seq/seq_local.h	/^typedef struct sndrv_seq_queue_client snd_seq_queue_client_t;$/;"	t	typeref:struct:sndrv_seq_queue_client
snd_seq_queue_info_copy	seq/seq.c	/^void snd_seq_queue_info_copy(snd_seq_queue_info_t *dst, const snd_seq_queue_info_t *src)$/;"	f
snd_seq_queue_info_free	seq/seq.c	/^void snd_seq_queue_info_free(snd_seq_queue_info_t *obj)$/;"	f
snd_seq_queue_info_get_flags	seq/seq.c	/^unsigned int snd_seq_queue_info_get_flags(const snd_seq_queue_info_t *info)$/;"	f
snd_seq_queue_info_get_locked	seq/seq.c	/^int snd_seq_queue_info_get_locked(const snd_seq_queue_info_t *info)$/;"	f
snd_seq_queue_info_get_name	seq/seq.c	/^const char *snd_seq_queue_info_get_name(const snd_seq_queue_info_t *info)$/;"	f
snd_seq_queue_info_get_owner	seq/seq.c	/^int snd_seq_queue_info_get_owner(const snd_seq_queue_info_t *info)$/;"	f
snd_seq_queue_info_get_queue	seq/seq.c	/^int snd_seq_queue_info_get_queue(const snd_seq_queue_info_t *info)$/;"	f
snd_seq_queue_info_malloc	seq/seq.c	/^int snd_seq_queue_info_malloc(snd_seq_queue_info_t **ptr)$/;"	f
snd_seq_queue_info_set_flags	seq/seq.c	/^void snd_seq_queue_info_set_flags(snd_seq_queue_info_t *info, unsigned int flags)$/;"	f
snd_seq_queue_info_set_locked	seq/seq.c	/^void snd_seq_queue_info_set_locked(snd_seq_queue_info_t *info, int locked)$/;"	f
snd_seq_queue_info_set_name	seq/seq.c	/^void snd_seq_queue_info_set_name(snd_seq_queue_info_t *info, const char *name)$/;"	f
snd_seq_queue_info_set_owner	seq/seq.c	/^void snd_seq_queue_info_set_owner(snd_seq_queue_info_t *info, int owner)$/;"	f
snd_seq_queue_info_sizeof	seq/seq.c	/^size_t snd_seq_queue_info_sizeof()$/;"	f
snd_seq_queue_status_copy	seq/seq.c	/^void snd_seq_queue_status_copy(snd_seq_queue_status_t *dst, const snd_seq_queue_status_t *src)$/;"	f
snd_seq_queue_status_free	seq/seq.c	/^void snd_seq_queue_status_free(snd_seq_queue_status_t *obj)$/;"	f
snd_seq_queue_status_get_events	seq/seq.c	/^int snd_seq_queue_status_get_events(const snd_seq_queue_status_t *info)$/;"	f
snd_seq_queue_status_get_queue	seq/seq.c	/^int snd_seq_queue_status_get_queue(const snd_seq_queue_status_t *info)$/;"	f
snd_seq_queue_status_get_real_time	seq/seq.c	/^const snd_seq_real_time_t *snd_seq_queue_status_get_real_time(const snd_seq_queue_status_t *info)$/;"	f
snd_seq_queue_status_get_status	seq/seq.c	/^unsigned int snd_seq_queue_status_get_status(const snd_seq_queue_status_t *info)$/;"	f
snd_seq_queue_status_get_tick_time	seq/seq.c	/^snd_seq_tick_time_t snd_seq_queue_status_get_tick_time(const snd_seq_queue_status_t *info)$/;"	f
snd_seq_queue_status_malloc	seq/seq.c	/^int snd_seq_queue_status_malloc(snd_seq_queue_status_t **ptr)$/;"	f
snd_seq_queue_status_sizeof	seq/seq.c	/^size_t snd_seq_queue_status_sizeof()$/;"	f
snd_seq_queue_tempo_copy	seq/seq.c	/^void snd_seq_queue_tempo_copy(snd_seq_queue_tempo_t *dst, const snd_seq_queue_tempo_t *src)$/;"	f
snd_seq_queue_tempo_free	seq/seq.c	/^void snd_seq_queue_tempo_free(snd_seq_queue_tempo_t *obj)$/;"	f
snd_seq_queue_tempo_get_ppq	seq/seq.c	/^int snd_seq_queue_tempo_get_ppq(const snd_seq_queue_tempo_t *info)$/;"	f
snd_seq_queue_tempo_get_queue	seq/seq.c	/^int snd_seq_queue_tempo_get_queue(const snd_seq_queue_tempo_t *info)$/;"	f
snd_seq_queue_tempo_get_skew	seq/seq.c	/^unsigned int snd_seq_queue_tempo_get_skew(const snd_seq_queue_tempo_t *info)$/;"	f
snd_seq_queue_tempo_get_skew_base	seq/seq.c	/^unsigned int snd_seq_queue_tempo_get_skew_base(const snd_seq_queue_tempo_t *info)$/;"	f
snd_seq_queue_tempo_get_tempo	seq/seq.c	/^unsigned int snd_seq_queue_tempo_get_tempo(const snd_seq_queue_tempo_t *info)$/;"	f
snd_seq_queue_tempo_malloc	seq/seq.c	/^int snd_seq_queue_tempo_malloc(snd_seq_queue_tempo_t **ptr)$/;"	f
snd_seq_queue_tempo_set_ppq	seq/seq.c	/^void snd_seq_queue_tempo_set_ppq(snd_seq_queue_tempo_t *info, int ppq)$/;"	f
snd_seq_queue_tempo_set_skew	seq/seq.c	/^void snd_seq_queue_tempo_set_skew(snd_seq_queue_tempo_t *info, unsigned int skew)$/;"	f
snd_seq_queue_tempo_set_skew_base	seq/seq.c	/^void snd_seq_queue_tempo_set_skew_base(snd_seq_queue_tempo_t *info, unsigned int base)$/;"	f
snd_seq_queue_tempo_set_tempo	seq/seq.c	/^void snd_seq_queue_tempo_set_tempo(snd_seq_queue_tempo_t *info, unsigned int tempo)$/;"	f
snd_seq_queue_tempo_sizeof	seq/seq.c	/^size_t snd_seq_queue_tempo_sizeof()$/;"	f
snd_seq_queue_timer_copy	seq/seq.c	/^void snd_seq_queue_timer_copy(snd_seq_queue_timer_t *dst, const snd_seq_queue_timer_t *src)$/;"	f
snd_seq_queue_timer_free	seq/seq.c	/^void snd_seq_queue_timer_free(snd_seq_queue_timer_t *obj)$/;"	f
snd_seq_queue_timer_get_id	seq/seq.c	/^const snd_timer_id_t *snd_seq_queue_timer_get_id(const snd_seq_queue_timer_t *info)$/;"	f
snd_seq_queue_timer_get_queue	seq/seq.c	/^int snd_seq_queue_timer_get_queue(const snd_seq_queue_timer_t *info)$/;"	f
snd_seq_queue_timer_get_resolution	seq/seq.c	/^unsigned int snd_seq_queue_timer_get_resolution(const snd_seq_queue_timer_t *info)$/;"	f
snd_seq_queue_timer_get_type	seq/seq.c	/^snd_seq_queue_timer_type_t snd_seq_queue_timer_get_type(const snd_seq_queue_timer_t *info)$/;"	f
snd_seq_queue_timer_malloc	seq/seq.c	/^int snd_seq_queue_timer_malloc(snd_seq_queue_timer_t **ptr)$/;"	f
snd_seq_queue_timer_set_id	seq/seq.c	/^void snd_seq_queue_timer_set_id(snd_seq_queue_timer_t *info, const snd_timer_id_t *id)$/;"	f
snd_seq_queue_timer_set_resolution	seq/seq.c	/^void snd_seq_queue_timer_set_resolution(snd_seq_queue_timer_t *info, unsigned int resolution)$/;"	f
snd_seq_queue_timer_set_type	seq/seq.c	/^void snd_seq_queue_timer_set_type(snd_seq_queue_timer_t *info, snd_seq_queue_timer_type_t type)$/;"	f
snd_seq_queue_timer_sizeof	seq/seq.c	/^size_t snd_seq_queue_timer_sizeof()$/;"	f
snd_seq_remove_events	seq/seq.c	/^int snd_seq_remove_events(snd_seq_t *seq, snd_seq_remove_events_t *rmp)$/;"	f
snd_seq_remove_events_copy	seq/seq.c	/^void snd_seq_remove_events_copy(snd_seq_remove_events_t *dst, const snd_seq_remove_events_t *src)$/;"	f
snd_seq_remove_events_free	seq/seq.c	/^void snd_seq_remove_events_free(snd_seq_remove_events_t *obj)$/;"	f
snd_seq_remove_events_get_channel	seq/seq.c	/^int snd_seq_remove_events_get_channel(const snd_seq_remove_events_t *info)$/;"	f
snd_seq_remove_events_get_condition	seq/seq.c	/^unsigned int snd_seq_remove_events_get_condition(const snd_seq_remove_events_t *info)$/;"	f
snd_seq_remove_events_get_dest	seq/seq.c	/^const snd_seq_addr_t *snd_seq_remove_events_get_dest(const snd_seq_remove_events_t *info)$/;"	f
snd_seq_remove_events_get_event_type	seq/seq.c	/^int snd_seq_remove_events_get_event_type(const snd_seq_remove_events_t *info)$/;"	f
snd_seq_remove_events_get_queue	seq/seq.c	/^int snd_seq_remove_events_get_queue(const snd_seq_remove_events_t *info)$/;"	f
snd_seq_remove_events_get_tag	seq/seq.c	/^int snd_seq_remove_events_get_tag(const snd_seq_remove_events_t *info)$/;"	f
snd_seq_remove_events_get_time	seq/seq.c	/^const snd_seq_timestamp_t *snd_seq_remove_events_get_time(const snd_seq_remove_events_t *info)$/;"	f
snd_seq_remove_events_malloc	seq/seq.c	/^int snd_seq_remove_events_malloc(snd_seq_remove_events_t **ptr)$/;"	f
snd_seq_remove_events_set_channel	seq/seq.c	/^void snd_seq_remove_events_set_channel(snd_seq_remove_events_t *info, int channel)$/;"	f
snd_seq_remove_events_set_condition	seq/seq.c	/^void snd_seq_remove_events_set_condition(snd_seq_remove_events_t *info, unsigned int flags)$/;"	f
snd_seq_remove_events_set_dest	seq/seq.c	/^void snd_seq_remove_events_set_dest(snd_seq_remove_events_t *info, const snd_seq_addr_t *addr)$/;"	f
snd_seq_remove_events_set_event_type	seq/seq.c	/^void snd_seq_remove_events_set_event_type(snd_seq_remove_events_t *info, int type)$/;"	f
snd_seq_remove_events_set_queue	seq/seq.c	/^void snd_seq_remove_events_set_queue(snd_seq_remove_events_t *info, int queue)$/;"	f
snd_seq_remove_events_set_tag	seq/seq.c	/^void snd_seq_remove_events_set_tag(snd_seq_remove_events_t *info, int tag)$/;"	f
snd_seq_remove_events_set_time	seq/seq.c	/^void snd_seq_remove_events_set_time(snd_seq_remove_events_t *info, const snd_seq_timestamp_t *time)$/;"	f
snd_seq_remove_events_sizeof	seq/seq.c	/^size_t snd_seq_remove_events_sizeof()$/;"	f
snd_seq_reset_pool_input	seq/seqmid.c	/^int snd_seq_reset_pool_input(snd_seq_t *seq)$/;"	f
snd_seq_reset_pool_output	seq/seqmid.c	/^int snd_seq_reset_pool_output(snd_seq_t *seq)$/;"	f
snd_seq_set_bit	seq/seq.c	/^void snd_seq_set_bit(int nr, void *array)$/;"	f
snd_seq_set_client_event_filter	seq/seqmid.c	/^int snd_seq_set_client_event_filter(snd_seq_t *seq, int event_type)$/;"	f
snd_seq_set_client_info	seq/seq.c	/^int snd_seq_set_client_info(snd_seq_t *seq, snd_seq_client_info_t *info)$/;"	f
snd_seq_set_client_name	seq/seqmid.c	/^int snd_seq_set_client_name(snd_seq_t *seq, const char *name)$/;"	f
snd_seq_set_client_pool	seq/seq.c	/^int snd_seq_set_client_pool(snd_seq_t *seq, snd_seq_client_pool_t *info)$/;"	f
snd_seq_set_client_pool_input	seq/seqmid.c	/^int snd_seq_set_client_pool_input(snd_seq_t *seq, size_t size)$/;"	f
snd_seq_set_client_pool_output	seq/seqmid.c	/^int snd_seq_set_client_pool_output(snd_seq_t *seq, size_t size)$/;"	f
snd_seq_set_client_pool_output_room	seq/seqmid.c	/^int snd_seq_set_client_pool_output_room(snd_seq_t *seq, size_t size)$/;"	f
snd_seq_set_input_buffer_size	seq/seq.c	/^int snd_seq_set_input_buffer_size(snd_seq_t *seq, size_t size)$/;"	f
snd_seq_set_output_buffer_size	seq/seq.c	/^int snd_seq_set_output_buffer_size(snd_seq_t *seq, size_t size)$/;"	f
snd_seq_set_port_info	seq/seq.c	/^int snd_seq_set_port_info(snd_seq_t *seq, int port, snd_seq_port_info_t * info)$/;"	f
snd_seq_set_queue_info	seq/seq.c	/^int snd_seq_set_queue_info(snd_seq_t *seq, int q, snd_seq_queue_info_t *info)$/;"	f
snd_seq_set_queue_tempo	seq/seq.c	/^int snd_seq_set_queue_tempo(snd_seq_t *seq, int q, snd_seq_queue_tempo_t * tempo)$/;"	f
snd_seq_set_queue_timer	seq/seq.c	/^int snd_seq_set_queue_timer(snd_seq_t *seq, int q, snd_seq_queue_timer_t * timer)$/;"	f
snd_seq_set_queue_usage	seq/seq.c	/^int snd_seq_set_queue_usage(snd_seq_t *seq, int q, int used)$/;"	f
snd_seq_subscribe_port	seq/seq.c	/^int snd_seq_subscribe_port(snd_seq_t *seq, snd_seq_port_subscribe_t * sub)$/;"	f
snd_seq_sync_output_queue	seq/seqmid.c	/^int snd_seq_sync_output_queue(snd_seq_t *seq)$/;"	f
snd_seq_system_info	seq/seq.c	/^int snd_seq_system_info(snd_seq_t *seq, snd_seq_system_info_t * info)$/;"	f
snd_seq_system_info_copy	seq/seq.c	/^void snd_seq_system_info_copy(snd_seq_system_info_t *dst, const snd_seq_system_info_t *src)$/;"	f
snd_seq_system_info_free	seq/seq.c	/^void snd_seq_system_info_free(snd_seq_system_info_t *obj)$/;"	f
snd_seq_system_info_get_channels	seq/seq.c	/^int snd_seq_system_info_get_channels(const snd_seq_system_info_t *info)$/;"	f
snd_seq_system_info_get_clients	seq/seq.c	/^int snd_seq_system_info_get_clients(const snd_seq_system_info_t *info)$/;"	f
snd_seq_system_info_get_cur_clients	seq/seq.c	/^int snd_seq_system_info_get_cur_clients(const snd_seq_system_info_t *info)$/;"	f
snd_seq_system_info_get_cur_queues	seq/seq.c	/^int snd_seq_system_info_get_cur_queues(const snd_seq_system_info_t *info)$/;"	f
snd_seq_system_info_get_ports	seq/seq.c	/^int snd_seq_system_info_get_ports(const snd_seq_system_info_t *info)$/;"	f
snd_seq_system_info_get_queues	seq/seq.c	/^int snd_seq_system_info_get_queues(const snd_seq_system_info_t *info)$/;"	f
snd_seq_system_info_malloc	seq/seq.c	/^int snd_seq_system_info_malloc(snd_seq_system_info_t **ptr)$/;"	f
snd_seq_system_info_sizeof	seq/seq.c	/^size_t snd_seq_system_info_sizeof()$/;"	f
snd_seq_type	seq/seq.c	/^snd_seq_type_t snd_seq_type(snd_seq_t *seq)$/;"	f
snd_seq_unset_bit	seq/seq.c	/^void snd_seq_unset_bit(int nr, void *array)$/;"	f
snd_seq_unsubscribe_port	seq/seq.c	/^int snd_seq_unsubscribe_port(snd_seq_t *seq, snd_seq_port_subscribe_t * sub)$/;"	f
snd_shm_area	shmarea.c	/^struct snd_shm_area {$/;"	s	file:
snd_shm_area_create	shmarea.c	/^struct snd_shm_area *snd_shm_area_create(int shmid, void *ptr)$/;"	f
snd_shm_area_destroy	shmarea.c	/^int snd_shm_area_destroy(struct snd_shm_area *area)$/;"	f
snd_shm_area_destructor	shmarea.c	/^void snd_shm_area_destructor(void)$/;"	f
snd_shm_area_share	shmarea.c	/^struct snd_shm_area *snd_shm_area_share(struct snd_shm_area *area)$/;"	f
snd_spcm_init	pcm/pcm_simple.c	/^int snd_spcm_init(snd_pcm_t *pcm,$/;"	f
snd_spcm_init_duplex	pcm/pcm_simple.c	/^int snd_spcm_init_duplex(snd_pcm_t *playback_pcm,$/;"	f
snd_spcm_init_get_params	pcm/pcm_simple.c	/^int snd_spcm_init_get_params(snd_pcm_t *pcm,$/;"	f
snd_str_p_t	alisp/alisp_snd.c	/^typedef char * (*snd_str_p_t)(void *rctl);$/;"	t	file:
snd_strerror	error.c	/^const char *snd_strerror(int errnum)$/;"	f
snd_timer_async	timer/timer.c	/^int snd_timer_async(snd_timer_t *timer, int sig, pid_t pid)$/;"	f
snd_timer_close	timer/timer.c	/^int snd_timer_close(snd_timer_t *timer)$/;"	f
snd_timer_continue	timer/timer.c	/^int snd_timer_continue(snd_timer_t *timer)$/;"	f
snd_timer_ginfo_copy	timer/timer_query.c	/^void snd_timer_ginfo_copy(snd_timer_ginfo_t *dst, const snd_timer_ginfo_t *src)$/;"	f
snd_timer_ginfo_free	timer/timer_query.c	/^void snd_timer_ginfo_free(snd_timer_ginfo_t *info)$/;"	f
snd_timer_ginfo_get_card	timer/timer_query.c	/^int snd_timer_ginfo_get_card(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_clients	timer/timer_query.c	/^unsigned int snd_timer_ginfo_get_clients(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_flags	timer/timer_query.c	/^unsigned int snd_timer_ginfo_get_flags(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_id	timer/timer_query.c	/^char *snd_timer_ginfo_get_id(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_name	timer/timer_query.c	/^char *snd_timer_ginfo_get_name(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_resolution	timer/timer_query.c	/^unsigned long snd_timer_ginfo_get_resolution(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_resolution_max	timer/timer_query.c	/^unsigned long snd_timer_ginfo_get_resolution_max(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_resolution_min	timer/timer_query.c	/^unsigned long snd_timer_ginfo_get_resolution_min(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_tid	timer/timer_query.c	/^snd_timer_id_t *snd_timer_ginfo_get_tid(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_malloc	timer/timer_query.c	/^int snd_timer_ginfo_malloc(snd_timer_ginfo_t **info)$/;"	f
snd_timer_ginfo_set_tid	timer/timer_query.c	/^int snd_timer_ginfo_set_tid(snd_timer_ginfo_t *obj, snd_timer_id_t *tid)$/;"	f
snd_timer_ginfo_sizeof	timer/timer_query.c	/^size_t snd_timer_ginfo_sizeof(void)$/;"	f
snd_timer_hw_async	timer/timer_hw.c	/^static int snd_timer_hw_async(snd_timer_t *timer, int sig, pid_t pid)$/;"	f	file:
snd_timer_hw_close	timer/timer_hw.c	/^static int snd_timer_hw_close(snd_timer_t *handle)$/;"	f	file:
snd_timer_hw_continue	timer/timer_hw.c	/^static int snd_timer_hw_continue(snd_timer_t *handle)$/;"	f	file:
snd_timer_hw_info	timer/timer_hw.c	/^static int snd_timer_hw_info(snd_timer_t *handle, snd_timer_info_t * info)$/;"	f	file:
snd_timer_hw_nonblock	timer/timer_hw.c	/^static int snd_timer_hw_nonblock(snd_timer_t *timer, int nonblock)$/;"	f	file:
snd_timer_hw_open	timer/timer_hw.c	/^int snd_timer_hw_open(snd_timer_t **handle, const char *name, int dev_class, int dev_sclass, int card, int device, int subdevice, int mode)$/;"	f
snd_timer_hw_ops	timer/timer_hw.c	/^static const snd_timer_ops_t snd_timer_hw_ops = {$/;"	v	file:
snd_timer_hw_params	timer/timer_hw.c	/^static int snd_timer_hw_params(snd_timer_t *handle, snd_timer_params_t * params)$/;"	f	file:
snd_timer_hw_read	timer/timer_hw.c	/^static ssize_t snd_timer_hw_read(snd_timer_t *handle, void *buffer, size_t size)$/;"	f	file:
snd_timer_hw_start	timer/timer_hw.c	/^static int snd_timer_hw_start(snd_timer_t *handle)$/;"	f	file:
snd_timer_hw_status	timer/timer_hw.c	/^static int snd_timer_hw_status(snd_timer_t *handle, snd_timer_status_t * status)$/;"	f	file:
snd_timer_hw_stop	timer/timer_hw.c	/^static int snd_timer_hw_stop(snd_timer_t *handle)$/;"	f	file:
snd_timer_id_copy	timer/timer_query.c	/^void snd_timer_id_copy(snd_timer_id_t *dst, const snd_timer_id_t *src)$/;"	f
snd_timer_id_free	timer/timer_query.c	/^void snd_timer_id_free(snd_timer_id_t *info)$/;"	f
snd_timer_id_get_card	timer/timer_query.c	/^int snd_timer_id_get_card(snd_timer_id_t * tid)$/;"	f
snd_timer_id_get_class	timer/timer_query.c	/^int snd_timer_id_get_class(snd_timer_id_t * tid)$/;"	f
snd_timer_id_get_device	timer/timer_query.c	/^int snd_timer_id_get_device(snd_timer_id_t * tid)$/;"	f
snd_timer_id_get_sclass	timer/timer_query.c	/^int snd_timer_id_get_sclass(snd_timer_id_t * tid)$/;"	f
snd_timer_id_get_subdevice	timer/timer_query.c	/^int snd_timer_id_get_subdevice(snd_timer_id_t * tid)$/;"	f
snd_timer_id_malloc	timer/timer_query.c	/^int snd_timer_id_malloc(snd_timer_id_t **info)$/;"	f
snd_timer_id_set_card	timer/timer_query.c	/^void snd_timer_id_set_card(snd_timer_id_t * tid, int card)$/;"	f
snd_timer_id_set_class	timer/timer_query.c	/^void snd_timer_id_set_class(snd_timer_id_t * tid, int dev_class)$/;"	f
snd_timer_id_set_device	timer/timer_query.c	/^void snd_timer_id_set_device(snd_timer_id_t * tid, int device)$/;"	f
snd_timer_id_set_sclass	timer/timer_query.c	/^void snd_timer_id_set_sclass(snd_timer_id_t * tid, int dev_sclass)$/;"	f
snd_timer_id_set_subdevice	timer/timer_query.c	/^void snd_timer_id_set_subdevice(snd_timer_id_t * tid, int subdevice)$/;"	f
snd_timer_id_sizeof	timer/timer_query.c	/^size_t snd_timer_id_sizeof()$/;"	f
snd_timer_info	timer/timer.c	/^int snd_timer_info(snd_timer_t *timer, snd_timer_info_t * info)$/;"	f
snd_timer_info_copy	timer/timer.c	/^void snd_timer_info_copy(snd_timer_info_t *dst, const snd_timer_info_t *src)$/;"	f
snd_timer_info_free	timer/timer.c	/^void snd_timer_info_free(snd_timer_info_t *info)$/;"	f
snd_timer_info_get_card	timer/timer.c	/^int snd_timer_info_get_card(snd_timer_info_t * info)$/;"	f
snd_timer_info_get_id	timer/timer.c	/^const char *snd_timer_info_get_id(snd_timer_info_t * info)$/;"	f
snd_timer_info_get_name	timer/timer.c	/^const char *snd_timer_info_get_name(snd_timer_info_t * info)$/;"	f
snd_timer_info_get_resolution	timer/timer.c	/^long snd_timer_info_get_resolution(snd_timer_info_t * info)$/;"	f
snd_timer_info_get_ticks	timer/timer.c	/^long snd_timer_info_get_ticks(snd_timer_info_t * info)$/;"	f
snd_timer_info_is_slave	timer/timer.c	/^int snd_timer_info_is_slave(snd_timer_info_t * info)$/;"	f
snd_timer_info_malloc	timer/timer.c	/^int snd_timer_info_malloc(snd_timer_info_t **info)$/;"	f
snd_timer_info_sizeof	timer/timer.c	/^size_t snd_timer_info_sizeof()$/;"	f
snd_timer_name	timer/timer.c	/^const char *snd_timer_name(snd_timer_t *timer)$/;"	f
snd_timer_nonblock	timer/timer.c	/^int snd_timer_nonblock(snd_timer_t *timer, int nonblock)$/;"	f
snd_timer_open	timer/timer.c	/^int snd_timer_open(snd_timer_t **timer, const char *name, int mode)$/;"	f
snd_timer_open_conf	timer/timer.c	/^static int snd_timer_open_conf(snd_timer_t **timer,$/;"	f	file:
snd_timer_open_lconf	timer/timer.c	/^int snd_timer_open_lconf(snd_timer_t **timer, const char *name,$/;"	f
snd_timer_open_noupdate	timer/timer.c	/^static int snd_timer_open_noupdate(snd_timer_t **timer, snd_config_t *root, const char *name, int mode)$/;"	f	file:
snd_timer_open_objects	timer/timer_symbols.c	/^static const char **snd_timer_open_objects[] = {$/;"	v	file:
snd_timer_open_symbols	timer/timer_symbols.c	/^void *snd_timer_open_symbols(void)$/;"	f
snd_timer_ops_t	timer/timer_local.h	/^} snd_timer_ops_t;$/;"	t	typeref:struct:__anon65
snd_timer_params	timer/timer.c	/^int snd_timer_params(snd_timer_t *timer, snd_timer_params_t * params)$/;"	f
snd_timer_params_copy	timer/timer.c	/^void snd_timer_params_copy(snd_timer_params_t *dst, const snd_timer_params_t *src)$/;"	f
snd_timer_params_free	timer/timer.c	/^void snd_timer_params_free(snd_timer_params_t *params)$/;"	f
snd_timer_params_get_auto_start	timer/timer.c	/^int snd_timer_params_get_auto_start(snd_timer_params_t * params)$/;"	f
snd_timer_params_get_early_event	timer/timer.c	/^int snd_timer_params_get_early_event(snd_timer_params_t * params)$/;"	f
snd_timer_params_get_exclusive	timer/timer.c	/^int INTERNAL(snd_timer_params_get_exclusive)(snd_timer_params_t * params)$/;"	f
snd_timer_params_get_filter	timer/timer.c	/^unsigned int INTERNAL(snd_timer_params_get_filter)(snd_timer_params_t * params)$/;"	f
snd_timer_params_get_queue_size	timer/timer.c	/^long snd_timer_params_get_queue_size(snd_timer_params_t * params)$/;"	f
snd_timer_params_get_ticks	timer/timer.c	/^long snd_timer_params_get_ticks(snd_timer_params_t * params)$/;"	f
snd_timer_params_malloc	timer/timer.c	/^int snd_timer_params_malloc(snd_timer_params_t **params)$/;"	f
snd_timer_params_set_auto_start	timer/timer.c	/^int snd_timer_params_set_auto_start(snd_timer_params_t * params, int auto_start)$/;"	f
snd_timer_params_set_early_event	timer/timer.c	/^int snd_timer_params_set_early_event(snd_timer_params_t * params, int early_event)$/;"	f
snd_timer_params_set_exclusive	timer/timer.c	/^int INTERNAL(snd_timer_params_set_exclusive)(snd_timer_params_t * params, int exclusive)$/;"	f
snd_timer_params_set_filter	timer/timer.c	/^void INTERNAL(snd_timer_params_set_filter)(snd_timer_params_t * params, unsigned int filter)$/;"	f
snd_timer_params_set_queue_size	timer/timer.c	/^void snd_timer_params_set_queue_size(snd_timer_params_t * params, long queue_size)$/;"	f
snd_timer_params_set_ticks	timer/timer.c	/^void snd_timer_params_set_ticks(snd_timer_params_t * params, long ticks)$/;"	f
snd_timer_params_sizeof	timer/timer.c	/^size_t snd_timer_params_sizeof()$/;"	f
snd_timer_poll_descriptors	timer/timer.c	/^int snd_timer_poll_descriptors(snd_timer_t *timer, struct pollfd *pfds, unsigned int space)$/;"	f
snd_timer_poll_descriptors_count	timer/timer.c	/^int snd_timer_poll_descriptors_count(snd_timer_t *timer)$/;"	f
snd_timer_poll_descriptors_revents	timer/timer.c	/^int snd_timer_poll_descriptors_revents(snd_timer_t *timer, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_timer_query_close	timer/timer_query.c	/^int snd_timer_query_close(snd_timer_query_t *timer)$/;"	f
snd_timer_query_hw_close	timer/timer_query_hw.c	/^static int snd_timer_query_hw_close(snd_timer_query_t *handle)$/;"	f	file:
snd_timer_query_hw_info	timer/timer_query_hw.c	/^static int snd_timer_query_hw_info(snd_timer_query_t *handle, snd_timer_ginfo_t *info)$/;"	f	file:
snd_timer_query_hw_next_device	timer/timer_query_hw.c	/^static int snd_timer_query_hw_next_device(snd_timer_query_t *handle, snd_timer_id_t * tid)$/;"	f	file:
snd_timer_query_hw_open	timer/timer_query_hw.c	/^int snd_timer_query_hw_open(snd_timer_query_t **handle, const char *name, int mode)$/;"	f
snd_timer_query_hw_ops	timer/timer_query_hw.c	/^static const snd_timer_query_ops_t snd_timer_query_hw_ops = {$/;"	v	file:
snd_timer_query_hw_params	timer/timer_query_hw.c	/^static int snd_timer_query_hw_params(snd_timer_query_t *handle, snd_timer_gparams_t *params)$/;"	f	file:
snd_timer_query_hw_status	timer/timer_query_hw.c	/^static int snd_timer_query_hw_status(snd_timer_query_t *handle, snd_timer_gstatus_t *status)$/;"	f	file:
snd_timer_query_info	timer/timer_query.c	/^int INTERNAL(snd_timer_query_info)(snd_timer_query_t *timer, snd_timer_ginfo_t *info)$/;"	f
snd_timer_query_next_device	timer/timer_query.c	/^int snd_timer_query_next_device(snd_timer_query_t *timer, snd_timer_id_t *tid)$/;"	f
snd_timer_query_open	timer/timer_query.c	/^int snd_timer_query_open(snd_timer_query_t **timer, const char *name, int mode)$/;"	f
snd_timer_query_open_conf	timer/timer_query.c	/^static int snd_timer_query_open_conf(snd_timer_query_t **timer,$/;"	f	file:
snd_timer_query_open_lconf	timer/timer_query.c	/^int snd_timer_query_open_lconf(snd_timer_query_t **timer, const char *name,$/;"	f
snd_timer_query_open_noupdate	timer/timer_query.c	/^static int snd_timer_query_open_noupdate(snd_timer_query_t **timer, snd_config_t *root, const char *name, int mode)$/;"	f	file:
snd_timer_query_open_objects	timer/timer_symbols.c	/^static const char **snd_timer_query_open_objects[] = {$/;"	v	file:
snd_timer_query_open_symbols	timer/timer_symbols.c	/^void *snd_timer_query_open_symbols(void)$/;"	f
snd_timer_query_ops_t	timer/timer_local.h	/^} snd_timer_query_ops_t;$/;"	t	typeref:struct:__anon66
snd_timer_query_params	timer/timer_query.c	/^int INTERNAL(snd_timer_query_params)(snd_timer_query_t *timer, snd_timer_gparams_t *params)$/;"	f
snd_timer_query_status	timer/timer_query.c	/^int INTERNAL(snd_timer_query_status)(snd_timer_query_t *timer, snd_timer_gstatus_t *status)$/;"	f
snd_timer_read	timer/timer.c	/^ssize_t snd_timer_read(snd_timer_t *timer, void *buffer, size_t size)$/;"	f
snd_timer_start	timer/timer.c	/^int snd_timer_start(snd_timer_t *timer)$/;"	f
snd_timer_status	timer/timer.c	/^int snd_timer_status(snd_timer_t *timer, snd_timer_status_t * status)$/;"	f
snd_timer_status_copy	timer/timer.c	/^void snd_timer_status_copy(snd_timer_status_t *dst, const snd_timer_status_t *src)$/;"	f
snd_timer_status_free	timer/timer.c	/^void snd_timer_status_free(snd_timer_status_t *status)$/;"	f
snd_timer_status_get_lost	timer/timer.c	/^long snd_timer_status_get_lost(snd_timer_status_t * status)$/;"	f
snd_timer_status_get_overrun	timer/timer.c	/^long snd_timer_status_get_overrun(snd_timer_status_t * status)$/;"	f
snd_timer_status_get_queue	timer/timer.c	/^long snd_timer_status_get_queue(snd_timer_status_t * status)$/;"	f
snd_timer_status_get_resolution	timer/timer.c	/^long snd_timer_status_get_resolution(snd_timer_status_t * status)$/;"	f
snd_timer_status_get_timestamp	timer/timer.c	/^snd_htimestamp_t snd_timer_status_get_timestamp(snd_timer_status_t * status)$/;"	f
snd_timer_status_malloc	timer/timer.c	/^int snd_timer_status_malloc(snd_timer_status_t **status)$/;"	f
snd_timer_status_sizeof	timer/timer.c	/^size_t snd_timer_status_sizeof()$/;"	f
snd_timer_stop	timer/timer.c	/^int snd_timer_stop(snd_timer_t *timer)$/;"	f
snd_timer_type	timer/timer.c	/^snd_timer_type_t snd_timer_type(snd_timer_t *timer)$/;"	f
snd_tlv_convert_from_dB	control/tlv.c	/^int snd_tlv_convert_from_dB(unsigned int *tlv, long rangemin, long rangemax,$/;"	f
snd_tlv_convert_to_dB	control/tlv.c	/^int snd_tlv_convert_to_dB(unsigned int *tlv, long rangemin, long rangemax,$/;"	f
snd_tlv_get_dB_range	control/tlv.c	/^int snd_tlv_get_dB_range(unsigned int *tlv, long rangemin, long rangemax,$/;"	f
snd_tlv_parse_dB_info	control/tlv.c	/^int snd_tlv_parse_dB_info(unsigned int *tlv,$/;"	f
snd_tmp_double	pcm/pcm_local.h	/^typedef union snd_tmp_double {$/;"	u
snd_tmp_double_t	pcm/pcm_local.h	/^} snd_tmp_double_t;$/;"	t	typeref:union:snd_tmp_double
snd_tmp_float	pcm/pcm_local.h	/^typedef union snd_tmp_float {$/;"	u
snd_tmp_float_t	pcm/pcm_local.h	/^} snd_tmp_float_t;$/;"	t	typeref:union:snd_tmp_float
snd_user_file	userfile.c	/^int snd_user_file(const char *file, char **result)$/;"	f
sndrv_pcm_hw_params_old	pcm/pcm_hw.c	/^struct sndrv_pcm_hw_params_old {$/;"	s	file:
snoop_areas	pcm/pcm_dsnoop.c	/^static void snoop_areas(snd_pcm_direct_t *dsnoop,$/;"	f	file:
socket	control/control_shm.c	/^	int socket;$/;"	m	struct:__anon8	file:
socket	pcm/pcm_shm.c	/^	int socket;$/;"	m	struct:__anon42	file:
socket_name	pcm/pcm_direct.h	/^	char socket_name[256];			\/* name of communication socket *\/$/;"	m	struct:__anon27
softvol_convert_mono_vol	pcm/pcm_softvol.c	/^static void softvol_convert_mono_vol(snd_pcm_softvol_t *svol,$/;"	f	file:
softvol_convert_stereo_vol	pcm/pcm_softvol.c	/^static void softvol_convert_stereo_vol(snd_pcm_softvol_t *svol,$/;"	f	file:
softvol_free	pcm/pcm_softvol.c	/^static void softvol_free(snd_pcm_softvol_t *svol)$/;"	f	file:
softvol_load_control	pcm/pcm_softvol.c	/^static int softvol_load_control(snd_pcm_t *pcm, snd_pcm_softvol_t *svol,$/;"	f	file:
songpos_decode	seq/seq_midi_event.c	/^static void songpos_decode(const snd_seq_event_t *ev, unsigned char *buf)$/;"	f	file:
songpos_event	seq/seq_midi_event.c	/^static void songpos_event(snd_midi_event_t *dev, snd_seq_event_t *ev)$/;"	f	file:
sparams	pcm/pcm_extplug.c	/^	struct snd_ext_parm sparams[SND_PCM_EXTPLUG_HW_PARAMS];$/;"	m	struct:snd_pcm_extplug_priv	typeref:struct:snd_pcm_extplug_priv::snd_ext_parm	file:
spcm	pcm/pcm_direct.h	/^	snd_pcm_t *spcm; 		\/* slave PCM handle *\/$/;"	m	struct:snd_pcm_direct
srate	pcm/pcm_plug.c	/^	int srate;$/;"	m	struct:__anon14	file:
srate	pcm/pcm_rate.c	/^	unsigned int srate;$/;"	m	struct:_snd_pcm_rate	file:
src_buf	pcm/pcm_rate.c	/^	int16_t *src_buf;$/;"	m	struct:_snd_pcm_rate	file:
src_size	pcm/pcm_route.c	/^	unsigned int src_size;$/;"	m	struct:__anon18	file:
srcs	pcm/pcm_route.c	/^	snd_pcm_route_ttable_src_t* srcs;$/;"	m	struct:snd_pcm_route_ttable_dst	file:
start	pcm/pcm_local.h	/^	int (*start)(snd_pcm_t *pcm);$/;"	m	struct:__anon51
start_pending	pcm/pcm_rate.c	/^	int start_pending; \/* start is triggered but not commited to slave *\/$/;"	m	struct:_snd_pcm_rate	file:
start_threshold	pcm/pcm_direct.h	/^		unsigned int start_threshold;	$/;"	m	struct:__anon27::__anon29
start_threshold	pcm/pcm_local.h	/^	snd_pcm_uframes_t start_threshold;$/;"	m	struct:_snd_pcm
start_threshold	pcm/pcm_mmap_emul.c	/^	snd_pcm_uframes_t start_threshold;$/;"	m	struct:__anon13	file:
state	pcm/pcm_direct.h	/^	snd_pcm_state_t state;$/;"	m	struct:snd_pcm_direct
state	pcm/pcm_local.h	/^	snd_pcm_state_t (*state)(snd_pcm_t *pcm);$/;"	m	struct:__anon51
state	pcm/pcm_null.c	/^	snd_pcm_state_t state;$/;"	m	struct:__anon26	file:
state	pcm/pcm_share.c	/^	snd_pcm_state_t state;$/;"	m	struct:__anon25	file:
states	pcm/pcm_adpcm.c	/^	snd_pcm_adpcm_state_t *states;$/;"	m	struct:__anon52	file:
status	pcm/pcm_iec958.c	/^	unsigned char status[24];$/;"	m	struct:snd_pcm_iec958	file:
status	pcm/pcm_local.h	/^	int (*status)(snd_pcm_t *pcm, snd_pcm_status_t *status);$/;"	m	struct:__anon51
status	rawmidi/rawmidi_local.h	/^	int (*status)(snd_rawmidi_t *rawmidi, snd_rawmidi_status_t *status);$/;"	m	struct:__anon61
status	timer/timer_local.h	/^	int (*status)(snd_timer_query_t *timer, snd_timer_gstatus_t *info);$/;"	m	struct:__anon66
status	timer/timer_local.h	/^	int (*status)(snd_timer_t *timer, snd_timer_status_t *status);$/;"	m	struct:__anon65
status_event	seq/seq_midi_event.c	/^} status_event[] = {$/;"	v	typeref:struct:status_event_list_t	file:
status_event_list_t	seq/seq_midi_event.c	/^static const struct status_event_list_t {$/;"	s	file:
step	pcm/pcm_local.h	/^	unsigned int step;		\/* samples distance in bits *\/$/;"	m	struct:_snd_pcm_channel_info
step_idx	pcm/pcm_plugin.h	/^	int step_idx;		\/* Previous StepSize lookup index *\/$/;"	m	struct:_snd_pcm_adpcm_state
stop_threshold	pcm/pcm_direct.h	/^		unsigned int stop_threshold;	$/;"	m	struct:__anon27::__anon29
stop_threshold	pcm/pcm_local.h	/^	snd_pcm_uframes_t stop_threshold;$/;"	m	struct:_snd_pcm
stopped_areas	pcm/pcm_local.h	/^	snd_pcm_channel_area_t *stopped_areas;$/;"	m	struct:_snd_pcm
str	mixer/simple_none.c	/^	} str[2];$/;"	m	struct:_selem_none	typeref:struct:_selem_none::selem_str	file:
stream	control/namehint.c	/^	int stream;$/;"	m	struct:hint_list	file:
stream	pcm/pcm_local.h	/^	snd_pcm_stream_t stream;$/;"	m	struct:_snd_pcm
stream	rawmidi/rawmidi_local.h	/^	snd_rawmidi_stream_t stream;$/;"	m	struct:_snd_rawmidi
streams	seq/seq_local.h	/^	int streams;$/;"	m	struct:_snd_seq
string	conf.c	/^		char *string;$/;"	m	union:_snd_config::__anon3	file:
string_print	conf.c	/^static void string_print(char *str, int id, snd_output_t *out)$/;"	f	file:
sub	pcm/interval.c	/^static inline unsigned int sub(unsigned int a, unsigned int b)$/;"	f	file:
subdevice	pcm/pcm_hw.c	/^	int card, device, subdevice;$/;"	m	struct:__anon36	file:
subdevice	rawmidi/rawmidi_hw.c	/^	int card, device, subdevice;$/;"	m	struct:__anon59	file:
subformat	pcm/pcm_direct.h	/^		snd_pcm_subformat_t subformat;$/;"	m	struct:__anon27::__anon29
subformat	pcm/pcm_local.h	/^	snd_pcm_subformat_t subformat;	\/* subformat *\/$/;"	m	struct:_snd_pcm
subscribe_events	control/control_local.h	/^	int (*subscribe_events)(snd_ctl_t *handle, int subscribe);$/;"	m	struct:_snd_ctl_ops
subscribe_port	seq/seq_local.h	/^	int (*subscribe_port)(snd_seq_t *seq, snd_seq_port_subscribe_t * sub);$/;"	m	struct:__anon63
suf	mixer/simple_none.c	/^static const struct suf {$/;"	s	file:
suffix	mixer/simple_none.c	/^	const char *suffix;$/;"	m	struct:suf	file:
suffixes	mixer/simple_none.c	/^} suffixes[] = {$/;"	v	typeref:struct:suf	file:
sum_buffer	pcm/pcm_direct.h	/^			signed int *sum_buffer;		\/* shared sum buffer *\/$/;"	m	struct:snd_pcm_direct::__anon32::__anon33
sum_idx	pcm/pcm_route.c	/^	enum {UINT32=0, UINT64=1, FLOAT=2} sum_idx;$/;"	m	struct:__anon18	typeref:enum:__anon18::__anon19	file:
sum_t	pcm/pcm_route.c	/^} sum_t;$/;"	t	typeref:union:__anon20	file:
sw	mixer/simple_none.c	/^		unsigned int sw;$/;"	m	struct:_selem_none::selem_str	file:
sw_params	pcm/pcm_local.h	/^	int (*sw_params)(snd_pcm_t *pcm, snd_pcm_sw_params_t *params);$/;"	m	struct:__anon50
sw_params	pcm/pcm_rate.c	/^	snd_pcm_sw_params_t sw_params;$/;"	m	struct:_snd_pcm_rate	file:
sw_params	pcm/pcm_share.c	/^	snd_pcm_sw_params_t sw_params;$/;"	m	struct:__anon24	file:
sx24	pcm/plugin_ops.h	/^static inline u_int32_t sx24(u_int32_t x)$/;"	f
sx24s	pcm/plugin_ops.h	/^static inline u_int32_t sx24s(u_int32_t x)$/;"	f
sync_ptr	pcm/pcm_direct.h	/^	int (*sync_ptr)(snd_pcm_t *pcm);$/;"	m	struct:snd_pcm_direct
sync_ptr	pcm/pcm_hw.c	/^	struct sndrv_pcm_sync_ptr *sync_ptr;$/;"	m	struct:__anon36	typeref:struct:__anon36::sndrv_pcm_sync_ptr	file:
sync_ptr	pcm/pcm_hw.c	/^static inline int sync_ptr(snd_pcm_hw_t *hw, unsigned int flags)$/;"	f	file:
sync_ptr1	pcm/pcm_hw.c	/^static int sync_ptr1(snd_pcm_hw_t *hw, unsigned int flags)$/;"	f	file:
sync_ptr_ioctl	pcm/pcm_hw.c	/^	int sync_ptr_ioctl;$/;"	m	struct:__anon36	file:
sync_slave_read	pcm/pcm_mmap_emul.c	/^sync_slave_read(snd_pcm_t *pcm)$/;"	f	file:
sync_slave_write	pcm/pcm_mmap_emul.c	/^sync_slave_write(snd_pcm_t *pcm)$/;"	f	file:
system_info	seq/seq_local.h	/^	int (*system_info)(snd_seq_t *seq, snd_seq_system_info_t * info);$/;"	m	struct:__anon63
thistoken	alisp/alisp_local.h	/^	int thistoken;$/;"	m	struct:alisp_instance
thread	pcm/pcm_meter.c	/^	pthread_t thread;$/;"	m	struct:_snd_pcm_meter	file:
thread	pcm/pcm_share.c	/^	pthread_t thread;$/;"	m	struct:__anon24	file:
timer	pcm/pcm_direct.h	/^	snd_timer_t *timer; 		\/* timer used as poll_fd *\/$/;"	m	struct:snd_pcm_direct
timer_events	pcm/pcm_direct.h	/^	unsigned int timer_events;$/;"	m	struct:snd_pcm_direct
timer_fd	pcm/pcm_direct.h	/^	struct pollfd timer_fd;$/;"	m	struct:snd_pcm_direct	typeref:struct:snd_pcm_direct::pollfd
timer_need_poll	pcm/pcm_direct.h	/^	int timer_need_poll: 1;$/;"	m	struct:snd_pcm_direct
tlv	control/tlv.c	/^	unsigned int *tlv;$/;"	m	struct:tlv_info	file:
tlv_info	control/tlv.c	/^struct tlv_info {$/;"	s	file:
tmpbuf	conf.c	/^	char tmpbuf[LOCAL_STR_BUFSIZE];$/;"	m	struct:local_string	file:
tmpbuf	seq/seq_local.h	/^	snd_seq_event_t *tmpbuf;	\/* temporary event for extracted event *\/$/;"	m	struct:_snd_seq
tmpbufsize	seq/seq_local.h	/^	size_t tmpbufsize;		\/* size of errbuf *\/$/;"	m	struct:_snd_seq
to_user	mixer/simple_none.c	/^static long to_user(selem_none_t *s, int dir, selem_ctl_t *c, long value)$/;"	f	file:
token_buffer	alisp/alisp_local.h	/^	char *token_buffer;$/;"	m	struct:alisp_instance
token_buffer_max	alisp/alisp_local.h	/^	int token_buffer_max;$/;"	m	struct:alisp_instance
top	pcm/scopes/level.c	/^	int top;$/;"	m	struct:_snd_pcm_scope_level	file:
tread	pcm/pcm_direct.h	/^	int tread: 1;$/;"	m	struct:snd_pcm_direct
trigger_tstamp	pcm/pcm_direct.h	/^	snd_htimestamp_t trigger_tstamp;$/;"	m	struct:snd_pcm_direct
trigger_tstamp	pcm/pcm_ioplug.c	/^	snd_htimestamp_t trigger_tstamp;$/;"	m	struct:snd_pcm_ioplug_priv	file:
trigger_tstamp	pcm/pcm_null.c	/^	snd_htimestamp_t trigger_tstamp;$/;"	m	struct:__anon26	file:
trigger_tstamp	pcm/pcm_rate.c	/^	snd_htimestamp_t trigger_tstamp;$/;"	m	struct:_snd_pcm_rate	file:
trigger_tstamp	pcm/pcm_share.c	/^	snd_htimestamp_t trigger_tstamp;$/;"	m	struct:__anon25	file:
trunc	pcm/pcm_file.c	/^	int trunc;$/;"	m	struct:__anon11	file:
try_config	control/namehint.c	/^static int try_config(struct hint_list *list,$/;"	f	file:
try_open	mixer/simple_abst.c	/^static int try_open(snd_mixer_class_t *class, const char *lib)$/;"	f	file:
try_open_full	mixer/simple_abst.c	/^static int try_open_full(snd_mixer_class_t *class, snd_mixer_t *mixer,$/;"	f	file:
tstamp_mode	pcm/pcm_direct.h	/^		snd_pcm_tstamp_t tstamp_mode;$/;"	m	struct:__anon27::__anon29
tstamp_mode	pcm/pcm_local.h	/^	snd_pcm_tstamp_t tstamp_mode;	\/* timestamp mode *\/$/;"	m	struct:_snd_pcm
tt_cused	pcm/pcm_plug.c	/^	unsigned int tt_ssize, tt_cused, tt_sused;$/;"	m	struct:__anon14	file:
tt_ssize	pcm/pcm_plug.c	/^	unsigned int tt_ssize, tt_cused, tt_sused;$/;"	m	struct:__anon14	file:
tt_sused	pcm/pcm_plug.c	/^	unsigned int tt_ssize, tt_cused, tt_sused;$/;"	m	struct:__anon14	file:
ttable	pcm/pcm_plug.c	/^	snd_pcm_route_ttable_entry_t *ttable;$/;"	m	struct:__anon14	file:
ttable_last	pcm/pcm_plug.c	/^	int ttable_ok, ttable_last;$/;"	m	struct:__anon14	file:
ttable_ok	pcm/pcm_plug.c	/^	int ttable_ok, ttable_last;$/;"	m	struct:__anon14	file:
two_param_ctrl_event	seq/seq_midi_event.c	/^static void two_param_ctrl_event(snd_midi_event_t *dev, snd_seq_event_t *ev)$/;"	f	file:
two_param_decode	seq/seq_midi_event.c	/^static void two_param_decode(const snd_seq_event_t *ev, unsigned char *buf)$/;"	f	file:
type	conf.c	/^	snd_config_type_t type;$/;"	m	struct:_snd_config	file:
type	control/control_local.h	/^	snd_ctl_type_t type;$/;"	m	struct:_snd_ctl
type	hwdep/hwdep_local.h	/^	snd_hwdep_type_t type;$/;"	m	struct:_snd_hwdep
type	input.c	/^	snd_input_type_t type;$/;"	m	struct:_snd_input	file:
type	mixer/mixer_local.h	/^	snd_mixer_elem_type_t type;$/;"	m	struct:_snd_mixer_elem
type	mixer/simple_none.c	/^	selem_ctl_type_t type;$/;"	m	struct:suf	file:
type	mixer/simple_none.c	/^	snd_ctl_elem_type_t type;$/;"	m	struct:_selem_ctl	file:
type	output.c	/^	snd_output_type_t type;$/;"	m	struct:_snd_output	file:
type	pcm/pcm_direct.h	/^	snd_pcm_type_t type;			\/* PCM type (currently only hw) *\/$/;"	m	struct:__anon27
type	pcm/pcm_direct.h	/^	snd_pcm_type_t type;		\/* type (dmix, dsnoop, dshare) *\/$/;"	m	struct:snd_pcm_direct
type	pcm/pcm_local.h	/^	enum { SND_PCM_AREA_SHM, SND_PCM_AREA_MMAP, SND_PCM_AREA_LOCAL } type;$/;"	m	struct:_snd_pcm_channel_info	typeref:enum:_snd_pcm_channel_info::__anon46
type	pcm/pcm_local.h	/^	snd_pcm_type_t type;$/;"	m	struct:_snd_pcm
type	rawmidi/rawmidi_local.h	/^	snd_rawmidi_type_t type;$/;"	m	struct:_snd_rawmidi
type	seq/seq_local.h	/^	snd_seq_type_t type;$/;"	m	struct:_snd_seq
type	seq/seq_midi_event.c	/^	int type;	\/* current event type *\/$/;"	m	struct:snd_midi_event	file:
type	timer/timer_local.h	/^	snd_timer_type_t type;$/;"	m	struct:_snd_timer
type	timer/timer_local.h	/^	snd_timer_type_t type;$/;"	m	struct:_snd_timer_query
type_refs	alisp/alisp_local.h	/^	unsigned int	type_refs;	\/* type and count of references *\/$/;"	m	struct:alisp_object
u	conf.c	/^	} u;$/;"	m	struct:_snd_config	typeref:union:_snd_config::__anon3	file:
u	pcm/pcm_direct.h	/^	} u;$/;"	m	struct:__anon27	typeref:union:__anon27::__anon30
u	pcm/pcm_direct.h	/^	} u;$/;"	m	struct:snd_pcm_direct	typeref:union:snd_pcm_direct::__anon32
u	pcm/pcm_local.h	/^	} u;$/;"	m	struct:_snd_pcm_channel_info	typeref:union:_snd_pcm_channel_info::__anon47
ulaw_to_s16	pcm/pcm_mulaw.c	/^static int ulaw_to_s16(unsigned char u_val)$/;"	f	file:
undo_read	pcm/pcm_plugin.h	/^	snd_pcm_slave_xfer_areas_undo_func_t undo_read;$/;"	m	struct:__anon53
undo_write	pcm/pcm_plugin.h	/^	snd_pcm_slave_xfer_areas_undo_func_t undo_write;$/;"	m	struct:__anon53
unget	conf.c	/^	int unget;$/;"	m	struct:__anon5	file:
unget_char	conf.c	/^static void unget_char(int c, input_t *input)$/;"	f	file:
ungetch	input.c	/^	int (*ungetch)(snd_input_t *input, int c);$/;"	m	struct:_snd_input_ops	file:
unlink	pcm/pcm_local.h	/^	int (*unlink)(snd_pcm_t *pcm);$/;"	m	struct:__anon51
unset_object	alisp/alisp.c	/^static struct alisp_object * unset_object(struct alisp_instance *instance, struct alisp_object * name)$/;"	f	file:
unsubscribe_port	seq/seq_local.h	/^	int (*unsubscribe_port)(snd_seq_t *seq, snd_seq_port_subscribe_t * sub);$/;"	m	struct:__anon63
update_mutex	pcm/pcm_meter.c	/^	pthread_mutex_t update_mutex;$/;"	m	struct:_snd_pcm_meter	file:
use_getput	pcm/pcm_linear.c	/^	unsigned int use_getput;$/;"	m	struct:__anon12	file:
use_getput	pcm/pcm_route.c	/^	int use_getput;$/;"	m	struct:__anon18	file:
use_old_hw_params_ioctl	pcm/pcm_hw.c	/^static int use_old_hw_params_ioctl(int fd, unsigned int cmd, snd_pcm_hw_params_t *params)$/;"	f	file:
use_server	pcm/pcm_direct.h	/^	int use_server;$/;"	m	struct:__anon27
used	compat/hsearch_r.c	/^  unsigned int used;$/;"	m	struct:_ENTRY	file:
used_objs	alisp/alisp_local.h	/^	long used_objs;$/;"	m	struct:alisp_instance
used_objs_list	alisp/alisp_local.h	/^	struct list_head used_objs_list[ALISP_OBJ_PAIR_HASH_SIZE][ALISP_OBJ_LAST_SEARCH + 1];$/;"	m	struct:alisp_instance	typeref:struct:alisp_instance::list_head
val	control/setup.c	/^	snd_ctl_elem_value_t *val;$/;"	m	struct:__anon6	file:
val	pcm/pcm_direct.c	/^	int              val;    \/* Value for SETVAL *\/$/;"	m	union:semun	file:
val_compar	pcm/pcm_extplug.c	/^static int val_compar(const void *ap, const void *bp)$/;"	f	file:
val_seg	pcm/pcm_alaw.c	/^static inline int val_seg(int val)$/;"	f	file:
val_seg	pcm/pcm_mulaw.c	/^static inline int val_seg(int val)$/;"	f	file:
val_t	pcm/pcm_softvol.c	/^} val_t;$/;"	t	typeref:union:__anon44	file:
value	alisp/alisp_local.h	/^	} value;$/;"	m	struct:alisp_object	typeref:union:alisp_object::__anon1
value	alisp/alisp_local.h	/^ 	struct alisp_object *value;$/;"	m	struct:alisp_object_pair	typeref:struct:alisp_object_pair::alisp_object
values	mixer/simple_none.c	/^	unsigned int values;$/;"	m	struct:_selem_ctl	file:
var	pcm/pcm_params.c	/^	int var;$/;"	m	struct:_snd_pcm_hw_rule	file:
verbose	alisp/alisp_local.h	/^	int verbose: 1,$/;"	m	struct:alisp_instance
version	pcm/pcm_hw.c	/^	int version;$/;"	m	struct:__anon36	file:
version	timer/timer_local.h	/^	unsigned int version;$/;"	m	struct:_snd_timer
vol	mixer/simple_none.c	/^		long vol[32];$/;"	m	struct:_selem_none::selem_str	file:
vout	alisp/alisp_local.h	/^	snd_output_t *vout;	\/* verbose output *\/$/;"	m	struct:alisp_instance
warning	alisp/alisp_local.h	/^	    warning: 1,$/;"	m	struct:alisp_instance
watom	pcm/pcm_plugin.h	/^	snd_atomic_write_t watom;$/;"	m	struct:__anon53
watom	pcm/pcm_rate.c	/^	snd_atomic_write_t watom;$/;"	m	struct:_snd_pcm_rate	file:
wav_fmt	pcm/pcm_file.c	/^struct wav_fmt {$/;"	s	file:
wav_header	pcm/pcm_file.c	/^	struct wav_fmt wav_header;$/;"	m	struct:__anon11	typeref:struct:__anon11::wav_fmt	file:
wbuf	pcm/pcm_file.c	/^	char *wbuf;$/;"	m	struct:__anon11	file:
wbuf_areas	pcm/pcm_file.c	/^	snd_pcm_channel_area_t *wbuf_areas;$/;"	m	struct:__anon11	file:
wbuf_size	pcm/pcm_file.c	/^	snd_pcm_uframes_t wbuf_size;$/;"	m	struct:__anon11	file:
wbuf_size_bytes	pcm/pcm_file.c	/^	size_t wbuf_size_bytes;$/;"	m	struct:__anon11	file:
wbuf_used_bytes	pcm/pcm_file.c	/^	size_t wbuf_used_bytes;$/;"	m	struct:__anon11	file:
win	pcm/scopes/level.c	/^	WINDOW *win;$/;"	m	struct:_snd_pcm_scope_level	file:
wout	alisp/alisp_local.h	/^	snd_output_t *wout;	\/* warning output *\/$/;"	m	struct:alisp_instance
write	hwdep/hwdep_local.h	/^	ssize_t (*write)(snd_hwdep_t *hwdep, const void *buffer, size_t size);$/;"	m	struct:__anon9
write	pcm/pcm_plugin.h	/^	snd_pcm_slave_xfer_areas_func_t write;$/;"	m	struct:__anon53
write	rawmidi/rawmidi_local.h	/^	ssize_t (*write)(snd_rawmidi_t *rawmidi, const void *buffer, size_t size);$/;"	m	struct:__anon61
write	seq/seq_local.h	/^	ssize_t (*write)(snd_seq_t *seq, void *buf, size_t len);$/;"	m	struct:__anon63
write_wav_header	pcm/pcm_file.c	/^static int write_wav_header(snd_pcm_t *pcm)$/;"	f	file:
writei	pcm/pcm_local.h	/^	snd_pcm_sframes_t (*writei)(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size);$/;"	m	struct:__anon51
writen	pcm/pcm_local.h	/^	snd_pcm_sframes_t (*writen)(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size);$/;"	m	struct:__anon51
x86_64_dmix_supported_format	pcm/pcm_dmix_x86_64.c	61;"	d	file:
xfer_align	pcm/pcm_direct.h	/^		unsigned int xfer_align; \/* not used *\/$/;"	m	struct:__anon27::__anon29
xfunc	alisp/alisp_snd.c	/^	void * xfunc;$/;"	m	struct:acall_table	file:
xgetc	alisp/alisp.c	/^static int xgetc(struct alisp_instance *instance)$/;"	f	file:
xungetc	alisp/alisp.c	/^static inline void xungetc(struct alisp_instance *instance, int c)$/;"	f	file:
zero	pcm/pcm_ladspa.c	/^	LADSPA_Data *zero[2];			\/* zero input or dummy output *\/$/;"	m	struct:__anon54	file:
zero_dB_val	pcm/pcm_softvol.c	/^	unsigned int zero_dB_val; \/* index at 0 dB *\/$/;"	m	struct:__anon43	file:
zero_handler	control/namehint.c	/^static void zero_handler(const char *file ATTRIBUTE_UNUSED,$/;"	f	file:
